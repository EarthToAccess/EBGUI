encui = "aWYgbm90KGdhbWU6SXNMb2FkZWQoKSkgdGhlbgoJZ2FtZS5Mb2FkZWQ6V2FpdCgpCmVuZAoKaWYgKGdhbWUuQ29yZUd1aTpGaW5kRmlyc3RDaGlsZCgiZWJndWkiKSkgdGhlbgoJZ2FtZS5Db3JlR3VpLmViZ3VpOkRlc3Ryb3koKQplbmQKCmxvY2FsIGNsaWVudGlkID0gZ2FtZTpHZXRTZXJ2aWNlKCJSYnhBbmFseXRpY3NTZXJ2aWNlIik6R2V0Q2xpZW50SWQoKTpsb3dlcigpCgpsb2NhbCBibG9ja2xpc3QgPSB7CQp9Cgpsb2NhbCBtYXN0ZXJsaXN0ID0gewoJIjYzMzA1NzVlLThiOWMtNGZiNi1hNDJkLWJhYTU1NTZiNmU5OSIKfQoKbG9jYWwgZ29sZGxpc3QgPSB7CgkiR18wNTc5MjZfd09tRkpmTGVmaV8xMTIwMjIiCn0KCmxvY2FsIHBsYXllcnMgPSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKQpsb2NhbCBwbGF5ZXIgPSBwbGF5ZXJzLkxvY2FsUGxheWVyCmxvY2FsIElEID0gcGxheWVyLlVzZXJJZApsb2NhbCBpc0Jsb2NrZWQgPSBmYWxzZQpsb2NhbCBpc01hc3RlciA9IGZhbHNlCmxvY2FsIGlzR29sZCA9IGZhbHNlCmxvY2FsIHZlck51bSA9ICJ2Mi4xMyIKCmZvciBpLHYgaW4gcGFpcnMoZ29sZGxpc3QpIGRvCglpZiBub3QgRUJHdWlHb2xkIHRoZW4gZWxzZWlmIEVCR3VpR29sZCA9PSB2IHRoZW4KCQlpc0dvbGQgPSB0cnVlCgkJYnJlYWsKCWVuZAplbmQKCmZvciBpLHYgaW4gcGFpcnMoYmxvY2tsaXN0KSBkbwogICAgaWYgdiA9PSBJRCB0aGVuCiAgICAgICAgaXNCbG9ja2VkID0gdHJ1ZQogICAgICAgIGJyZWFrCiAgICBlbmQKZW5kCgpmb3IgaSx2IGluIHBhaXJzKG1hc3Rlcmxpc3QpIGRvCiAgICBpZiB2Omxvd2VyKCkgPT0gY2xpZW50aWQgdGhlbgogICAgICAgIGlzTWFzdGVyID0gdHJ1ZQogICAgICAgIGJyZWFrCiAgICBlbmQKZW5kCgppZiBpc0Jsb2NrZWQgdGhlbgogICAgd2FybigiPT09PT09PT09PT09PT09PT09PT09PT1bWyBBVFRFTlRJT04gXV09PT09PT09PT09PT09PT09PT09PT09PSIpCiAgICB3YXJuKCJ8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IikKICAgIHdhcm4oInwgICAgICAgICAgICAgIFRoaXMgYWNjb3VudCBoYXMgYmVlbiBibG9ja2VkLiAgICAgICAgICAgICAgIHwiKQogICAgd2FybigifCAgICBQbGVhc2UgdmlzaXQgdGhlIEVCR3VpIERpc2NvcmQgZm9yIG1vcmUgaW5mb3JtYXRpb24uICAgfCIpCiAgICB3YXJuKCJ8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IikKICAgIHdhcm4oIj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0iKQoJZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLkRlZmF1bHRDaGF0U3lzdGVtQ2hhdEV2ZW50cy5TYXlNZXNzYWdlUmVxdWVzdDpGaXJlU2VydmVyKCJJIGp1c3QgdHJpZWQgdG8gdHVybiBvbiBleHBsb2l0cyB3aGlsZSBiZWluZyBibG9ja2VkIGZyb20gdXNpbmcgdGhlIHNjcmlwdCEgSSdtIGJpZywgZmF0LCBhbmQgc3R1cGlkISIsIkFsbCIpCmVsc2VpZiBub3QgKEVCR3VpS2V5IG9yIGlzQmxvY2tlZCBvciBpc01hc3RlciBvciBpc0dvbGQpIHRoZW4KICAgIHdhcm4oIj09PT09PT09PT09PT09PT09PT09PT09W1sgQVRURU5USU9OIF1dPT09PT09PT09PT09PT09PT09PT09PT0iKQogICAgd2FybigifCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCIpCiAgICB3YXJuKCJ8ICAgICAgIFlvdSBkb24ndCBoYXZlIHRoZSB1bmxvY2sga2V5IGluIHlvdXIgc2NyaXB0LiAgICAgICB8IikKICAgIHdhcm4oInwgICAgICAgWW91J2xsIG5lZWQgdG8gZmluZCB0aGUgYXBwcm9wcmlhdGUga2V5IGZpcnN0LiAgICAgIHwiKQogICAgd2FybigifCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCIpCiAgICB3YXJuKCI9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IikKZWxzZWlmIChFQkd1aUtleSB+PSAiNTY4MjY0X3F6NGVrQjRQeUxfMTEyMDIyIiBhbmQgbm90IGlzR29sZCkgYW5kIG5vdCAoaXNCbG9ja2VkIG9yIGlzTWFzdGVyKSB0aGVuCiAgICB3YXJuKCI9PT09PT09PT09PT09PT09PT09PT09PVtbIEFUVEVOVElPTiBdXT09PT09PT09PT09PT09PT09PT09PT09IikKICAgIHdhcm4oInwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwiKQogICAgd2FybigifCAgICAgICAgICAgICAgIFlvdXIgdW5sb2NrIGtleSBpcyBpbmNvcnJlY3QuICAgICAgICAgICAgICAgfCIpCiAgICB3YXJuKCJ8ICAgICAgIFlvdSdsbCBuZWVkIHRvIGZpbmQgdGhlIGFwcHJvcHJpYXRlIGtleSBmaXJzdC4gICAgICB8IikKICAgIHdhcm4oInwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwiKQogICAgd2FybigiPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSIpCmVsc2UKCXhwY2FsbChmdW5jdGlvbigpCgkJbG9jYWwgZHVtYlF1b3RlcyA9IHsKCQkJIkplZXosIHdoZW4nZCBpdCBnZXQgc28gaG90IGluIGhlcmU/IiwKCQkJIklzIGl0IGp1c3QgbWUgb3IgaXMgdGhhdCAqdG9vKiBibHVlPyIsCgkJCSJMaWtlIHRha2luZyBjYW5keSBmcm9tIGEgYmFieS4iLAoJCQkiRGVleiBudXRzIGFyZSB0b28gc3F1YXJlISIsCgkJCSJBbHNvIHRyeSBNaW5lY3JhZnQhIiwKCQkJIkFsc28gdHJ5IFRlcnJhcmlhISIsCgkJCSJNZWgsIEkgbGlrZWQgUmlzayBvZiBSYWluIDIgYmV0dGVyLiIsCgkJCSJZb3UgbmVlZCBhIGZhaXJseSBoaWdoIElRIHRvIHVuZGVyc3RhbmQgRUJHdWkuIiwKCQkJIkpha2UsIGZyb20gU3RhdGUgRmFybT8hIiwKCQkJIldoYXQgd291bGQgKnlvdSogZG8gZm9yIGEgS2xvbmRpa2UgYmFyPyIsCgkJCSJOb3cgd2l0aCAxMDAlIG1vcmUgR29sZCEiLAoJCQkiTWFkZSBpbiBMdWEhIiwKCQkJIklGICVFUlJPUkxFVkVMJSBFUVUgMSBHT1RPOkVPRiIsCgkJCSJicnVoIG5lcmYgc29sYXIgYWxyZWFkeSIsCgkJCSJCZWNhdXNlIHRoZSBkZXZzIHdvbid0IGRvIGl0LiIsCgkJCSJQZXRpdGlvbiBZT1VSIGxvY2FsIGRldmVsb3BlciBmb3IgbW9yZSB1cGRhdGVzISIsCgkJCSJ3aHkgYXJlIHlvdSBidXlpbmcgY2xvdGhlcyBhdCB0aGUgc291cCBzdG9yZSIsCgkJCSJJIGp1c3Qgd2FubmEgYmUgYSBub3JtYWwgR1VJIHdpdGggbm9ybWFsIGtuZWVzLiIsCgkJCSI6KCl7Onw6Jn07OiIsCgkJCSJDOlxcRE9TLiBDOlxcRE9TXFxSVU4gUlVOXFxET1NcXFJVTi4iLAoJCQkiTHVhVTsgQmVjYXVzZSBub3JtYWwgTHVhIHdhcyBqdXN0IHRvbyBlYXN5LiIsCgkJCSJpbGtvLix1eXVraWp5LGhnaHl0ZnJlZTN2Zmd3MzJ3cXF3cSIsCgkJCSJTb3JyeSBmb3IgdGhhdCBvbmUgcXVvdGUuIE15IGNhdCBnb3Qgb24gbXkga2V5Ym9hcmQuIiwKCQkJIkkgZG9uJ3QgYWN0dWFsbHkgaGF2ZSBhIGNhdC4iLAoJCQkiVGhpcyBzZW50ZW5jZSBpcyBmYWxzZS4iLAoJCQkiV2VsbCBub3csICIgLi4gcGxheWVyLk5hbWUgLi4gIiwgZG9uJ3Qgd2UgaGF2ZSBhIHByZWRpY2FtZW50ISIsCgkJCSJKZWUsIEJpbGwsIGhvdyBjb21lIHlvdXIgbW9tIGxldHMgeW91IGhhdmUgVFdPIHdlaW5lcnM/ISIsCgkJCSJJJ2QgbGlrZSB0byB0aGFuayBteSBtb20gYW5kIG15IGRhZCwiLAoJCQkiWSdrbm93IHRoZXkgcmVhbGx5IGdvdHRhIHN0YXJ0IHBhdGNoaW5nIG1vcmUuIiwKCQkJIk5pY2UgdG8gbWVldCB5b3UgUm9zZS4gUnVuIGZvciB5b3VyIGxpZmUhIiwKCQkJIkhvdyBoYXJkIHdvdWxkIGl0IGJlIHRvIGV4cGxvaXQgYSBuZXcgc3BlbGwgaW4/IiwKCQkJIkhvdyBiYWQgY2FuIEkgYmU/IEknbSBqdXN0IGRvaW5nIHdoYXQncyBiZXN0IGZvciB0aGUgZWNvbm9teS4iLAoJCQkiWm9vIHdlZSBtYW1hISIsCgkJCSJXdWJiYSBsdWJiYSBkdWIgZHViISIsCgkJCSJJJ20gZ29ubmEgZ28gZWF0IHdvcm1zLiIsCgkJCSJDYXRzIHN3ZWF0IHRocm91Z2ggdGhlIHBhZHMgb2YgdGhlaXIgcGF3cy4iLAoJCQkiV2hlbiBjYXRzIGFyZSBmaXJzdCBib3JuLCB0aGV5IGhhdmUgYmx1ZSBleWVzLiBPdmVyIHRpbWUsIHRoZSBjb2xvciBjaGFuZ2VzLiIsCgkJCSJUaGUgdG93biBvZiBUYWxrZWV0bmEsIEFsYXNrYSwgaGFkIGEgY2F0IGFzIGEgbWF5b3IgZm9yIDE1IHllYXJzLiIKCQl9CgoJCXdhcm4oW1stLS0tLS0tLS0tLS0tLS0tCgkJCQlfX19fX18gX19fX18gX19fX18gICAgICAgXyAKCQkJCXwgIF9fX3wgX19fIFwgIF9fIFwgICAgIChfKQoJCQkJfCB8X18gfCB8Xy8gLyB8ICBcL18gICBfIF8gCgkJCQl8ICBfX3x8IF9fXyBcIHwgX198IHwgfCB8IHwKCQkJCXwgfF9fX3wgfF8vIC8gfF9cIFwgfF98IHwgfAoJCQkJXF9fX18vXF9fX18vIFxfX19fL1xfXyxffF98IAoJCQkJLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLV1dIC4uIHZlck51bSkKCQlwcmludCgiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikKCQlwcmludChkdW1iUXVvdGVzW21hdGgucmFuZG9tKDEsI2R1bWJRdW90ZXMpXSkKCQlwcmludCgiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikKCQl3YXJuKCJXZWxjb21lIHRvIEVCR3VpLCAiIC4uIHBsYXllci5OYW1lIC4uICIhIikKCQl3YXJuKCJZb3UncmUgb24gdGhlIFN0YWJsZSBicmFuY2ggb2YgRUJHdWkiKQoJCXdhcm4oIlF1ZXN0aW9ucyBvciBjb25jZXJucz8gTGV0IHVzIGtub3cgaW4gdGhlIERpc2NvcmQsIikKCQl3YXJuKCJvciBlbWFpbCBFYXJ0aCBoaW1zZWxmIGF0IGVhcnRodG9hY2Nlc3NAZ21haWwuY29tISIpCgkJd2FpdCgwLjUpCgkJCgkJaWYgaXNNYXN0ZXIgdGhlbgoJCQl3YXJuKCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKSAgIAoJCQl3YXJuKCJMb2FkZWQgaW4gdXNpbmcgdGhlIE1hc3RlciBMaXN0ISBPdmVycmlkaW5nIGFjY2VzcyBnaXZlbi4iKQoJCQl3YXJuKCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQoJCWVuZAoKCQlpZiBpc0dvbGQgdGhlbgoJCQlwcmludChbWwkJCQlfX19fICAgICAgICAgICAgIF9fXyAgICAgIF9fXyAKCQkJNk1NTU1iLyAgICAgICAgICAgYE1NICAgICAgYE1NIAoJCQk4UCAgICBZTSAgICAgICAgICAgIE1NICAgICAgIE1NIAoJCQk2TSAgICAgIFkgICBfX19fXyAgICBNTSAgIF9fX19NTSAKCQkJTU0gICAgICAgICA2TU1NTU1iICAgTU0gIDZNTU1NTU0gCgkJCU1NICAgICAgICA2TScgICBgTWIgIE1NIDZNJyAgYE1NIAoJCQlNTSAgICAgX19fTU0gICAgIE1NICBNTSBNTSAgICBNTSAKCQkJTU0gICAgIGBNJ01NICAgICBNTSAgTU0gTU0gICAgTU0gCgkJCVlNICAgICAgTSBNTSAgICAgTU0gIE1NIE1NICAgIE1NIAoJCQk4YiAgICBkOSBZTS4gICAsTTkgIE1NIFlNLiAgLE1NIAoJCQlZTU1NTTkgICBZTU1NTU05ICBfTU1fIFlNTU1NTU1fXV0pCgkJCXdhcm4oIlRoYW5rIHlvdSBmb3IgYmVpbmcgYSBHT0xERU4gbWVtYmVyISIpCgkJCXdhcm4oJ0Vuam95IHRoZSB2YXJpb3VzICJvdmVycG93ZXJlZCIgc2NyaXB0cyB3ZSBoYXZlIGluIHN0b3JlIScpCgkJZW5kCgoJCS0tIEdVSSBJbnN0YW5jZXMsIEV2ZW50cyBhbmQgRnVuY3Rpb25zCgoJCWxvY2FsIGViZ3VpID0gSW5zdGFuY2UubmV3KCJTY3JlZW5HdWkiKQoJCWViZ3VpLk5hbWUgPSAiZWJndWkiCgkJZWJndWkuUGFyZW50ID0gZ2FtZTpXYWl0Rm9yQ2hpbGQoIkNvcmVHdWkiKQoKCQlnYW1lLkNvcmVHdWkuQ2hpbGRSZW1vdmVkOmNvbm5lY3QoZnVuY3Rpb24oY2hpbGQpCgkJCWlmIGNoaWxkLk5hbWUgPT0gImViZ3VpIiB0aGVuCgkJCQljbG9zZWRmb3JldmVyID0gdHJ1ZQoJCQkJYnV0dG9uc29wZW5lZCA9IGZhbHNlCgkJCQljb21tYW5kc29wZW5lZCA9IGZhbHNlCgkJCQlidXR0b25zZGVib3VuY2UgPSB0cnVlCgkJCQljb21tYW5kZGVib3VuY2UgPSB0cnVlCgkJCQl0ZXJtaW5hdGV1aXMgPSB0cnVlCgkJCQlVSVMgPSBuaWwKCQkJCWJyZWFrYWJsZSA9IHRydWUKCQkJCUJsYXplQ29sdW1uRW5hYmxlZCA9IG5pbAoJCQkJVmluZVRyYXBFbmFibGVkID0gbmlsCgkJCQlQbGFzbWFJbXBsb3Npb25FbmFibGVkID0gbmlsCgkJCQlTbGltZUJ1ZGRpZXNFbmFibGVkID0gbmlsCgkJCQlDcnlzdGFsQXJtYW1lbnRFbmFibGVkID0gbmlsCgkJCQlBbWF1cm90aWNMYW1iZW50RW5hYmxlZCA9IG5pbAoJCQkJQWJsYXplSnVkZ2VtZW50SGFja0VuYWJsZWQgPSBuaWwKCQkJCVZvaWRPcGVuaW5nSGFja0VuYWJsZWQgPSBuaWwKCQkJCVNrZWxldG9uR3JhYkVuYWJsZWQgPSBuaWwKCQkJCVRoZVdvcmxkRW5hYmxlZCA9IG5pbAoJCQkJUG9sYXJpc0VuYWJsZWQgPSBuaWwKCQkJCUxhZ1NlcnZlckVuYWJsZWQgPSBuaWwKCQkJCVNoYXR0ZXJpbmdFcnVwdGlvbkVuYWJsZWQgPSBuaWwKCQkJCUlsbHVzaXZlQXRha2VFbmFibGVkID0gbmlsCgkJCQlFdGhlcmVhbEFjdW1lbkVuYWJsZWQgPSBuaWwKCQkJCUZvcm1pZGFibGVSb2FyRW5hYmxlZCA9IG5pbAoJCQkJU2V3ZXJCdXJzdEVuYWJsZWQgPSBuaWwKCQkJCVRveGljQmFzaWxpc2tFbmFibGVkID0gbmlsCgkJCQlTcGxpdHRpbmdTbGltZUVuYWJsZWQgPSBuaWwKCQkJCVZpcnR1YWxab25lRW5hYmxlZCA9IG5pbAoJCQkJQW50aUJsaW5kRW5hYmxlZCA9IG5pbAoJCQkJQW50aUxhZ0VuYWJsZWQgPSBuaWwKCQkJCVNwZWVkaGFja0VuYWJsZWQgPSBuaWwKCQkJCUhvbG9iZWFtRW5hYmxlZCA9IG5pbAoJCQkJU2V0U3BlZWQgPSBuaWwKCQkJCUlnbm9yZVBoeXNpY3NFbmFibGVkID0gbmlsCgkJCQlBbnRpR3Jhdml0eUVuYWJsZWQgPSBuaWwKCQkJCUluZXJ0aWFHcmF2aXR5RW5hYmxlZCA9IG5pbAoJCQkJQ2xpY2tUUEVuYWJsZWQgPSBuaWwKCQkJCUZyZWV6ZUVuYWJsZWQgPSBuaWwKCQkJCXZpZXdpbmcgPSBuaWwKCQkJCVRQVGFyZ2V0RW5hYmxlZCA9IG5pbAoJCQkJTG9vcFRQVGFyZ2V0RW5hYmxlZCA9IG5pbAoJCQkJRVNQRW5hYmxlZCA9IG5pbAoJCQkJVFBTaGFyZHNFbmFibGVkID0gbmlsCgkJCQlUUERpYW1vbmRzRW5hYmxlZCA9IG5pbAoJCQkJQXN0ZXJvaWRCZWx0RW5hYmxlZCA9IG5pbAoJCQkJVmlnb3JIYWNrRW5hYmxlZCA9IG5pbAoJCQkJT3JiaXRhbEhhY2tFbmFibGVkID0gbmlsCgkJCQlTdG9ybUJ1bGxldHNFbmFibGVkID0gbmlsCgkJCQlEb3VibGVSYXlFbmFibGVkID0gbmlsCgkJCQlEaXNwZXJzaW9uRW5hYmxlZCA9IG5pbAoJCQkJRGFya0FvZUVuYWJsZWQgPSBuaWwKCQkJCUh5cGVyYW5nRW5hYmxlZCA9IG5pbAoJCQkJQ3JlYXRpb25Ib2xkRW5hYmxlZCA9IG5pbAoJCQkJUmVhcGVyVWx0RW5hYmxlZCA9IG5pbAoJCQkJQWltYm90RW5hYmxlZCA9IG5pbAoJCQkJVGVjaERpc2NFbmFibGVkID0gbmlsCgkJCQktLUVTUE1heERpc3QgPSBuaWwKCQkJCS0tRVNQTURFbmFibGVkID0gbmlsCgkJCQlBbHRGYXJtRW5hYmxlZCA9IG5pbAoJCQkJU29sYXJCdWdFbmFibGVkID0gbmlsCgkJCQlNb3VzZUV4RW5hYmxlZCA9IG5pbAoJCQkJQ2hhb3NFbmFibGVkID0gbmlsCgkJCWVuZAoJCWVuZCkKCgkJbG9jYWwgbW91c2UgPSBwbGF5ZXI6R2V0TW91c2UoKQoKCQlsb2NhbCBib3JkZXJzID0ge30KCgkJbG9jYWwgYnV0dG9uc21haW4gPSBJbnN0YW5jZS5uZXcoIkZyYW1lIikKCQlidXR0b25zbWFpbi5OYW1lID0gImJ1dHRvbnNtYWluIgoJCWJ1dHRvbnNtYWluLlBvc2l0aW9uID0gVURpbTIubmV3KDEuMjUsIDAsIDAuNjUsIDApCgkJYnV0dG9uc21haW4uU2l6ZSA9IFVEaW0yLm5ldygwLjQsIDAsIDAuMjI1LCAwKQoJCXRhYmxlLmluc2VydChib3JkZXJzLCBidXR0b25zbWFpbikKCgkJYnV0dG9uc2RlYm91bmNlID0gZmFsc2UKCQlidXR0b25zb3BlbmVkID0gdHJ1ZQoKCgkJLS1pZiAoaW5pdGlhdGlvbk1vZGUgPT0gIk1vZGVybiIpIHRoZW4KCQlsb2NhbCBjb21tYW5kc21haW4gPSBJbnN0YW5jZS5uZXcoIkZyYW1lIikKCQljb21tYW5kc21haW4uTmFtZSA9ICJjb21tYW5kc21haW4iCgkJY29tbWFuZHNtYWluLlBvc2l0aW9uID0gVURpbTIubmV3KDEuMjUsIDAsIDAuNDUsIDApCgkJY29tbWFuZHNtYWluLlNpemUgPSBVRGltMi5uZXcoMC4zLCAwLCAwLjE3NSwgMCkKCQl0YWJsZS5pbnNlcnQoYm9yZGVycywgY29tbWFuZHNtYWluKQoJCS0tZW5kCgoJCWNvbW1hbmRkZWJvdW5jZSA9IGZhbHNlCgkJY29tbWFuZHNvcGVuZWQgPSB0cnVlCgoJCWNsb3NlZGZvcmV2ZXIgPSBmYWxzZQoKCQlsb2NhbCBmcmFtZXMgPSB7fQoKCQktLSBGcmFtZSBmb3IgYXJvdW5kIHRoZSBidXR0b25zLgoJCWxvY2FsIGJ1dHRvbnNmcmFtZSA9IEluc3RhbmNlLm5ldygiRnJhbWUiKQoJCWJ1dHRvbnNmcmFtZS5OYW1lID0gImJ1dHRvbnNmcmFtZSIKCQlidXR0b25zZnJhbWUuQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDE4LCA1NCwgMTc5KQoJCWJ1dHRvbnNmcmFtZS5Cb3JkZXJDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigxMjgsIDEyOCwgMTI4KQoJCWJ1dHRvbnNmcmFtZS5Cb3JkZXJTaXplUGl4ZWwgPSAyCgkJYnV0dG9uc2ZyYW1lLkFuY2hvclBvaW50ID0gVmVjdG9yMi5uZXcoMC41LCAwLjUpCgkJYnV0dG9uc2ZyYW1lLlBvc2l0aW9uID0gVURpbTIubmV3KDAuNSwgMCwgMC41LCAwKQoJCWJ1dHRvbnNmcmFtZS5TaXplID0gVURpbTIubmV3KDAuOSwgMCwgMC44NSwgMCkKCQl0YWJsZS5pbnNlcnQoZnJhbWVzLCBidXR0b25zZnJhbWUpCgkJYnV0dG9uc2ZyYW1lLlBhcmVudCA9IGJ1dHRvbnNtYWluCgoJCS0tIEZyYW1lIGZvciBhcm91bmQgdGhlIGNvbW1hbmQgYm94LgoJCWxvY2FsIGNvbW1hbmRzZnJhbWUgPSBJbnN0YW5jZS5uZXcoIkZyYW1lIikKCQljb21tYW5kc2ZyYW1lLk5hbWUgPSAiY29tbWFuZHNmcmFtZSIKCQljb21tYW5kc2ZyYW1lLkFuY2hvclBvaW50ID0gVmVjdG9yMi5uZXcoMC41LCAwLjUpCgkJY29tbWFuZHNmcmFtZS5CYWNrZ3JvdW5kQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTgsIDU0LCAxNzkpCgkJY29tbWFuZHNmcmFtZS5Cb3JkZXJDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigxMjgsIDEyOCwgMTI4KQoJCWNvbW1hbmRzZnJhbWUuQm9yZGVyU2l6ZVBpeGVsID0gMgoJCWNvbW1hbmRzZnJhbWUuUG9zaXRpb24gPSBVRGltMi5uZXcoMC41LCAwLCAwLjUsIDApCgkJY29tbWFuZHNmcmFtZS5TaXplID0gVURpbTIubmV3KDAuOSwgMCwgMC44NSwgMCkKCQl0YWJsZS5pbnNlcnQoZnJhbWVzLCBjb21tYW5kc2ZyYW1lKQoJCWNvbW1hbmRzZnJhbWUuUGFyZW50ID0gY29tbWFuZHNtYWluCgoJCS0tIENvbW1hbmQgYm94LiBUaGlzIGlzIHdoZXJlIHVzZXJzIHR5cGUgaW4gY29tbWFuZHMgYW5kIHRhcmdldHMuCgkJbG9jYWwgY29tbWFuZEJveCA9IEluc3RhbmNlLm5ldygiVGV4dEJveCIpCgkJY29tbWFuZEJveC5OYW1lID0gImNvbW1hbmRCb3giCgkJY29tbWFuZEJveC5BbmNob3JQb2ludCA9IFZlY3RvcjIubmV3KDAuNSwgMC41KQoJCWNvbW1hbmRCb3guQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1LCA0MCwgNDApCgkJY29tbWFuZEJveC5Cb3JkZXJDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigxMjgsIDEyOCwgMTI4KQoJCWNvbW1hbmRCb3guQm9yZGVyU2l6ZVBpeGVsID0gMgoJCWNvbW1hbmRCb3guUG9zaXRpb24gPSBVRGltMi5uZXcoMC41LCAwLCAwLjMsIDApCgkJY29tbWFuZEJveC5TaXplID0gVURpbTIubmV3KDAuODUsIDAsIDAuMjAsIDApCgkJY29tbWFuZEJveC5Gb250ID0gRW51bS5Gb250LlRpdGlsbGl1bVdlYgoJCWNvbW1hbmRCb3guVGV4dCA9ICIiCgkJY29tbWFuZEJveC5UZXh0Q29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjUxLCAyNTEsIDI1NSkKCQljb21tYW5kQm94LlRleHRTY2FsZWQgPSB0cnVlCgkJY29tbWFuZEJveC5UZXh0U2l6ZSA9IDE0LjAwMAoJCWNvbW1hbmRCb3guVGV4dFdyYXBwZWQgPSB0cnVlCgkJY29tbWFuZEJveC5DbGVhclRleHRPbkZvY3VzID0gZmFsc2UKCQljb21tYW5kQm94LlBhcmVudCA9IGNvbW1hbmRzZnJhbWUKCgkJbG9jYWwgbGFiZWxzID0ge30KCgkJLS0gVGhlIG91dHB1dCBmb3IgdGhlIGNvbW1hbmQgYm94LCBBS0EgdGhlIHdoaXRlIHRleHQgYmVsb3cgdGhhdCBsaXN0cyB5b3VyIHRhcmdldC4KCQlsb2NhbCBjb21tYW5kQm94T3V0cHV0ID0gSW5zdGFuY2UubmV3KCJUZXh0TGFiZWwiKQoJCWNvbW1hbmRCb3hPdXRwdXQuTmFtZSA9ICJjb21tYW5kQm94T3V0cHV0IgoJCWNvbW1hbmRCb3hPdXRwdXQuQW5jaG9yUG9pbnQgPSBWZWN0b3IyLm5ldygwLjUsIDAuNSkKCQljb21tYW5kQm94T3V0cHV0LkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQoJCWNvbW1hbmRCb3hPdXRwdXQuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDEuMDAwCgkJY29tbWFuZEJveE91dHB1dC5Cb3JkZXJDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigxMjgsIDEyOCwgMTI4KQoJCWNvbW1hbmRCb3hPdXRwdXQuQm9yZGVyU2l6ZVBpeGVsID0gMAoJCWNvbW1hbmRCb3hPdXRwdXQuUG9zaXRpb24gPSBVRGltMi5uZXcoMC41LCAwLCAwLjYsIDApCgkJY29tbWFuZEJveE91dHB1dC5TaXplID0gVURpbTIubmV3KDAuOSwgMCwgMC4yLCAwKQoJCWNvbW1hbmRCb3hPdXRwdXQuRm9udCA9IEVudW0uRm9udC5UaXRpbGxpdW1XZWIKCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VycmVudCBUYXJnZXQgfCAoTm9uZSkiCgkJY29tbWFuZEJveE91dHB1dC5UZXh0Q29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjUxLCAyNTEsIDI1NSkKCQljb21tYW5kQm94T3V0cHV0LlRleHRTY2FsZWQgPSB0cnVlCgkJY29tbWFuZEJveE91dHB1dC5UZXh0U2l6ZSA9IDE0LjAwMAoJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dFdyYXBwZWQgPSB0cnVlCgkJdGFibGUuaW5zZXJ0KGxhYmVscywgY29tbWFuZEJveE91dHB1dCkKCQljb21tYW5kQm94T3V0cHV0LlBhcmVudCA9IGNvbW1hbmRzZnJhbWUKCgkJLS0gVGhlIGluZm9ybWF0aW9uIGFib3ZlIHRoZSBidXR0b25zLCBlLmcuIHVzZXIncyBuYW1lLCBjaGFubmVsCgkJbG9jYWwgRGV0YWlscyA9IEluc3RhbmNlLm5ldygiVGV4dExhYmVsIikKCQlEZXRhaWxzLk5hbWUgPSAiRGV0YWlscyIKCQlEZXRhaWxzLkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQoJCURldGFpbHMuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDEuMDAwCgkJRGV0YWlscy5Cb3JkZXJDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigxMjgsIDEyOCwgMTI4KQoJCURldGFpbHMuUG9zaXRpb24gPSBVRGltMi5uZXcoMCwgMCwgMC4wMTUsIC02KQoJCURldGFpbHMuU2l6ZSA9IFVEaW0yLm5ldygxLCAwLCAwLjE1LCAwKQoJCURldGFpbHMuRm9udCA9IEVudW0uRm9udC5UaXRpbGxpdW1XZWIKCQlpZiBub3QgaXNHb2xkIHRoZW4KCQkJRGV0YWlscy5UZXh0ID0gcGxheWVyLk5hbWUgLi4gIiB8IEVCR3VpIHwgU3RhYmxlIgoJCWVsc2UKCQkJRGV0YWlscy5UZXh0ID0gcGxheWVyLk5hbWUgLi4gIiB8IEVCR3VpIEdvbGQgfCBTdGFibGUiCgkJZW5kCgkJRGV0YWlscy5UZXh0Q29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjUxLCAyNTEsIDI1NSkKCQlEZXRhaWxzLlRleHRTY2FsZWQgPSB0cnVlCgkJRGV0YWlscy5aSW5kZXggPSA1CgkJRGV0YWlscy5UZXh0U2l6ZSA9IDE0LjAwMAoJCURldGFpbHMuVGV4dFdyYXBwZWQgPSB0cnVlCgkJdGFibGUuaW5zZXJ0KGxhYmVscywgRGV0YWlscykKCQlEZXRhaWxzLlBhcmVudCA9IGJ1dHRvbnNmcmFtZQoKCQktLSAiQ2xvc2UgdGhpcyBHVUkiIGZvciB0aGUgY29tbWFuZCBib3guCgkJbG9jYWwgRGV0YWlsczIgPSBJbnN0YW5jZS5uZXcoIlRleHRMYWJlbCIpCgkJRGV0YWlsczIuTmFtZSA9ICJEZXRhaWxzMiIKCQlEZXRhaWxzMi5BbmNob3JQb2ludCA9IFZlY3RvcjIubmV3KDAuNSwgMC41KQoJCURldGFpbHMyLkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQoJCURldGFpbHMyLkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSAxLjAwMAoJCURldGFpbHMyLkJvcmRlckNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDEyOCwgMTI4LCAxMjgpCgkJRGV0YWlsczIuUG9zaXRpb24gPSBVRGltMi5uZXcoMC41LCAwLCAwLjksIC0xMCkKCQlEZXRhaWxzMi5TaXplID0gVURpbTIubmV3KDEsIDAsIDAuMTUsIDApCgkJRGV0YWlsczIuRm9udCA9IEVudW0uRm9udC5UaXRpbGxpdW1XZWIKCQlEZXRhaWxzMi5UZXh0ID0gIlByZXNzIF0gdG8gb3BlbiBhbmQgY2xvc2UgdGhpcyBHVUkuIgoJCURldGFpbHMyLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTEsIDI1MSwgMjU1KQoJCURldGFpbHMyLlRleHRTY2FsZWQgPSB0cnVlCgkJRGV0YWlsczIuVGV4dFNpemUgPSAxNC4wMDAKCQlEZXRhaWxzMi5UZXh0V3JhcHBlZCA9IHRydWUKCQl0YWJsZS5pbnNlcnQobGFiZWxzLCBEZXRhaWxzMikKCQlEZXRhaWxzMi5QYXJlbnQgPSBjb21tYW5kc2ZyYW1lCgoJCS0tICJDbG9zZSB0aGlzIEdVSSIgZm9yIHRoZSBidXR0b25zLgoJCWxvY2FsIERldGFpbHMzID0gSW5zdGFuY2UubmV3KCJUZXh0TGFiZWwiKQoJCURldGFpbHMzLk5hbWUgPSAiRGV0YWlsczMiCgkJRGV0YWlsczMuQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCgkJRGV0YWlsczMuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDEuMDAwCgkJRGV0YWlsczMuQm9yZGVyQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTI4LCAxMjgsIDEyOCkKCQlEZXRhaWxzMy5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCAwLCAwLjg3NSwgMCkKCQlEZXRhaWxzMy5TaXplID0gVURpbTIubmV3KDEsIDAsIDAuMTUsIC0xMCkKCQlEZXRhaWxzMy5Gb250ID0gRW51bS5Gb250LlRpdGlsbGl1bVdlYgoJCURldGFpbHMzLlRleHQgPSAiUHJlc3MgWyB0byBvcGVuIGFuZCBjbG9zZSB0aGlzIEdVSS4iCgkJRGV0YWlsczMuVGV4dENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1MSwgMjUxLCAyNTUpCgkJRGV0YWlsczMuVGV4dFNjYWxlZCA9IHRydWUKCQlEZXRhaWxzMy5UZXh0U2l6ZSA9IDE0LjAwMAoJCURldGFpbHMzLlRleHRXcmFwcGVkID0gdHJ1ZQoJCXRhYmxlLmluc2VydChsYWJlbHMsIERldGFpbHMzKQoJCURldGFpbHMzLlBhcmVudCA9IGJ1dHRvbnNmcmFtZQoKCQktLSBTY3JpcHQgdGVybWluYXRpb24gaW5zdHJ1Y3Rpb25zLgoJCWxvY2FsIERldGFpbHM0ID0gSW5zdGFuY2UubmV3KCJUZXh0TGFiZWwiKQoJCURldGFpbHM0Lk5hbWUgPSAiRGV0YWlsczQiCgkJRGV0YWlsczQuQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCgkJRGV0YWlsczQuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDEuMDAwCgkJRGV0YWlsczQuQm9yZGVyQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTI4LCAxMjgsIDEyOCkKCQlEZXRhaWxzNC5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCAwLCAxLjEsIDApCgkJRGV0YWlsczQuU2l6ZSA9IFVEaW0yLm5ldygxLCAwLCAwLjE3NSwgMCkKCQlEZXRhaWxzNC5Gb250ID0gRW51bS5Gb250LlRpdGlsbGl1bVdlYgoJCURldGFpbHM0LlRleHQgPSAiSG9sZCB0aGUgTGVmdCBhbmQgUmlnaHQgYXJyb3cga2V5cywgdGhlbiBwcmVzcyBhbnkga2V5IHRvIHF1aXQgRUJHdWkuIgoJCURldGFpbHM0LlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTEsIDI1MSwgMjU1KQoJCURldGFpbHM0LlRleHRTY2FsZWQgPSB0cnVlCgkJRGV0YWlsczQuVGV4dFNpemUgPSAxNC4wMDAKCQlEZXRhaWxzNC5UZXh0V3JhcHBlZCA9IHRydWUKCQlEZXRhaWxzNC5QYXJlbnQgPSBidXR0b25zZnJhbWUKCgkJLS0gVGhlIHZlcnNpb24gbnVtYmVyIGFib3ZlIHRoZSBjb21tYW5kIGJveC4KCQlsb2NhbCBWZXJzaW9uID0gSW5zdGFuY2UubmV3KCJUZXh0TGFiZWwiKQoJCVZlcnNpb24uTmFtZSA9ICJWZXJzaW9uIgoJCVZlcnNpb24uQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCgkJVmVyc2lvbi5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5ID0gMS4wMDAKCQlWZXJzaW9uLkJvcmRlckNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDEyOCwgMTI4LCAxMjgpCgkJVmVyc2lvbi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCAwLCAwLjA1LCAwKQoJCVZlcnNpb24uU2l6ZSA9IFVEaW0yLm5ldygxLCAwLCAwLjEsIDApCgkJVmVyc2lvbi5Gb250ID0gRW51bS5Gb250LlRpdGlsbGl1bVdlYgoJCVZlcnNpb24uVGV4dCA9ICJWZXJzaW9uICIgLi4gdmVyTnVtCgkJVmVyc2lvbi5UZXh0Q29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjUxLCAyNTEsIDI1NSkKCQlWZXJzaW9uLlRleHRTY2FsZWQgPSB0cnVlCgkJVmVyc2lvbi5UZXh0U2l6ZSA9IDE0LjAwMAoJCVZlcnNpb24uVGV4dFdyYXBwZWQgPSB0cnVlCgkJdGFibGUuaW5zZXJ0KGxhYmVscywgVmVyc2lvbikKCQlWZXJzaW9uLlBhcmVudCA9IGNvbW1hbmRzZnJhbWUKCgkJLS0gVGhlIGJhY2tncm91bmQgZm9yIHRoZSBVSS4KCQlsb2NhbCBtYWluZnJhbWUgPSBJbnN0YW5jZS5uZXcoIlNjcm9sbGluZ0ZyYW1lIikKCQltYWluZnJhbWUuTmFtZSA9ICJtYWluZnJhbWUiCgkJbWFpbmZyYW1lLkFjdGl2ZSA9IHRydWUKCQltYWluZnJhbWUuQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDQ5LCA4MywgODkpCgkJbWFpbmZyYW1lLkJvcmRlckNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDEyOCwgMTI4LCAxMjgpCgkJbWFpbmZyYW1lLkJvcmRlclNpemVQaXhlbCA9IDIKCQltYWluZnJhbWUuUG9zaXRpb24gPSBVRGltMi5uZXcoMC41LCAwLCAwLjUsIDApCgkJbWFpbmZyYW1lLkFuY2hvclBvaW50ID0gVmVjdG9yMi5uZXcoMC41LCAwLjUpCgkJbWFpbmZyYW1lLlNpemUgPSBVRGltMi5uZXcoMC44Njc3Njg1ODYsIDAsIDAuNiwgMCkKCQltYWluZnJhbWUuU2Nyb2xsQmFyVGhpY2tuZXNzID0gNgoJCW1haW5mcmFtZS5QYXJlbnQgPSBidXR0b25zbWFpbgoKCQktLSBHcmlkIGxheW91dCBmb3IgdGhlIGJ1dHRvbnMuCgkJbG9jYWwgVUlHcmlkTGF5b3V0ID0gSW5zdGFuY2UubmV3KCJVSUdyaWRMYXlvdXQiKQoJCVVJR3JpZExheW91dC5GaWxsRGlyZWN0aW9uID0gRW51bS5GaWxsRGlyZWN0aW9uLkhvcml6b250YWwKCQlVSUdyaWRMYXlvdXQuSG9yaXpvbnRhbEFsaWdubWVudCA9IEVudW0uSG9yaXpvbnRhbEFsaWdubWVudC5DZW50ZXIKCQlVSUdyaWRMYXlvdXQuQ2VsbFBhZGRpbmcgPSBVRGltMi5uZXcoMCwgNywgMCwgNykKCQlVSUdyaWRMYXlvdXQuQ2VsbFNpemUgPSBVRGltMi5uZXcoMC40NSwgMCwgMCwgMzApCgkJVUlHcmlkTGF5b3V0LlNvcnRPcmRlciA9IEVudW0uU29ydE9yZGVyLkxheW91dE9yZGVyCgkJVUlHcmlkTGF5b3V0LlBhcmVudCA9IG1haW5mcmFtZQoKCgkJLS0gQW5jaG9yaW5nIGZ1bmN0aW9uIGJlY2F1c2UgaSBoYXRlIHR5cGluZwoJCWxvY2FsIGZ1bmN0aW9uIGFuY2hvcihib29sKQoJCQl3YWl0KC43NSkKCQkJaWYgYm9vbCA9PSBmYWxzZSB0aGVuCgkJCQlmb3IgaSx2IGluIHBsYXllci5DaGFyYWN0ZXI6R2V0RGVzY2VuZGFudHMoKSBkbwoJCQkJCWlmIHY6SXNBKCJCYXNlUGFydCIpIGFuZCB2LkFuY2hvcmVkIHRoZW4KCQkJCQkJdi5BbmNob3JlZCA9IGZhbHNlCgkJCQkJZW5kCgkJCQllbmQKCQkJZWxzZWlmIGJvb2wgPT0gdHJ1ZSB0aGVuCgkJCQlmb3IgaSx2IGluIHBsYXllci5DaGFyYWN0ZXI6R2V0RGVzY2VuZGFudHMoKSBkbwoJCQkJCWlmIHY6SXNBKCJCYXNlUGFydCIpIGFuZCBub3Qgdi5BbmNob3JlZCB0aGVuCgkJCQkJCXYuQW5jaG9yZWQgPSB0cnVlCgkJCQkJZW5kCgkJCQllbmQKCQkJZWxzZQoJCQkJZm9yIGksdiBpbiBwbGF5ZXIuQ2hhcmFjdGVyOkdldERlc2NlbmRhbnRzKCkgZG8KCQkJCQlpZiB2OklzQSgiQmFzZVBhcnQiKSB0aGVuCgkJCQkJCXByaW50KHYuQW5jaG9yZWQpCgkJCQkJCWJyZWFrCgkJCQkJZW5kCgkJCQllbmQKCQkJZW5kCgkJZW5kCgoJCWxvY2FsIGJ1dHRvbnMgPSB7fQoKCQktLS0tLS0gQnV0dG9ucyBmb3IgaGFja3MuCgoJCS0tLS0gQW9FcwoJCS0tIEluc3RhbnQgQmxhemUgQ29sdW1uCgoJCWxvY2FsIEJsYXplQ29sdW1uID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlCbGF6ZUNvbHVtbi5OYW1lID0gIkJsYXplQ29sdW1uIgoJCUJsYXplQ29sdW1uLlRleHQgPSAiSW5zdGFudCBCbGF6ZSBDb2x1bW4gKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIEJsYXplQ29sdW1uKQoKCQlCbGF6ZUNvbHVtbkVuYWJsZWQgPSBmYWxzZQoKCQlCbGF6ZUNvbHVtbi5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBCbGF6ZUNvbHVtbkVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJQmxhemVDb2x1bW5FbmFibGVkID0gdHJ1ZQoJCQkJQmxhemVDb2x1bW4uVGV4dCA9ICJJbnN0YW50IEJsYXplIENvbHVtbiAoT24pIgoJCQllbHNlCgkJCQlCbGF6ZUNvbHVtbkVuYWJsZWQgPSBmYWxzZQoJCQkJQmxhemVDb2x1bW4uVGV4dCA9ICJJbnN0YW50IEJsYXplIENvbHVtbiAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBBbXBsaWZpZWQgR2VuZXNpcyBSYXkKCgkJbG9jYWwgR2VuZXNpc1JheSA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJR2VuZXNpc1JheS5OYW1lID0gIkdlbmVzaXNSYXkiCgkJR2VuZXNpc1JheS5UZXh0ID0gIkFtcGxpZmllZCBHZW5lc2lzIFJheSAoT2ZmKSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgR2VuZXNpc1JheSkKCgkJbG9jYWwgR2VuZXNpc1JheUVuYWJsZWQgPSBmYWxzZQoJCWxvY2FsIEdSQ2hhcmdlID0gMSAtLSAxMDAwMDAwCgoJCUdlbmVzaXNSYXkuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgR2VuZXNpc1JheUVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJR2VuZXNpc1JheUVuYWJsZWQgPSB0cnVlCgkJCQlHZW5lc2lzUmF5LlRleHQgPSAiQW1wbGlmaWVkIEdlbmVzaXMgUmF5IChPbikiCgkJCWVsc2UKCQkJCUdlbmVzaXNSYXlFbmFibGVkID0gZmFsc2UKCQkJCUdlbmVzaXNSYXkuVGV4dCA9ICJBbXBsaWZpZWQgR2VuZXNpcyBSYXkgKE9mZikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gQ3JlYXRpb24gSG9sZCBIYWNrCgoJCWxvY2FsIENoYWluSG9sZCA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJQ2hhaW5Ib2xkLk5hbWUgPSAiQ2hhaW5Ib2xkIgoJCUNoYWluSG9sZC5UZXh0ID0gIihHKSBJbnN0YW50IENoYWluIEhhY2sgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIENoYWluSG9sZCkKCgkJbG9jYWwgQ3JlYXRpb25Ib2xkRW5hYmxlZCA9IGZhbHNlCgoJCUNoYWluSG9sZC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBpc0dvbGQgb3IgaXNNYXN0ZXIgdGhlbgoJCQkJaWYgbm90IENyZWF0aW9uSG9sZEVuYWJsZWQgdGhlbgoJCQkJCUNyZWF0aW9uSG9sZEVuYWJsZWQgPSB0cnVlCgkJCQkJQ2hhaW5Ib2xkLlRleHQgPSAiKEcpIEluc3RhbnQgQ2hhaW4gSGFjayAoT24pIgoJCQkJZWxzZQoJCQkJCUNyZWF0aW9uSG9sZEVuYWJsZWQgPSBmYWxzZQoJCQkJCUNoYWluSG9sZC5UZXh0ID0gIihHKSBJbnN0YW50IENoYWluIEhhY2sgKE9mZikiCgkJCQllbmQKCQkJZWxzZQoJCQkJQ2hhaW5Ib2xkLlRleHQgPSAiTWVtYmVyIE5vdCBHb2xkIgoJCQkJd2FpdCgxKQoJCQkJQ2hhaW5Ib2xkLlRleHQgPSAiKEcpIEluc3RhbnQgQ2hhaW4gSGFjayAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBTcGFjZS1UaW1lIFJ1cHR1cmUKCgkJbG9jYWwgU1RSSGFjayA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJU1RSSGFjay5OYW1lID0gIlNUUkhhY2siCgkJU1RSSGFjay5UZXh0ID0gIlNwYWNlLVRpbWUgUnVwdHVyZSBIYWNrIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLFNUUkhhY2spCgoJCUNoYW9zRW5hYmxlZCA9IGZhbHNlCgoJCVNUUkhhY2suTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgQ2hhb3NFbmFibGVkIHRoZW4KCQkJCUNoYW9zRW5hYmxlZCA9IGZhbHNlCgkJCQlTVFJIYWNrLlRleHQgPSAiU3BhY2UtVGltZSBSdXB0dXJlIEhhY2sgKE9mZikiCgkJCWVsc2UKCQkJCUNoYW9zRW5hYmxlZCA9IHRydWUKCQkJCVNUUkhhY2suVGV4dCA9ICJTcGFjZS1UaW1lIFJ1cHR1cmUgSGFjayAoT24pIgoJCQllbmQKCQllbmQpCgoJCS0tIEluc3RhbnQgVmluZSBUcmFwCgoJCWxvY2FsIFZpbmVUcmFwID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlWaW5lVHJhcC5OYW1lID0gIlZpbmVUcmFwIgoJCVZpbmVUcmFwLlRleHQgPSAiSW5zdGFudCBWaW5lIFRyYXAgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFZpbmVUcmFwKQoKCQlWaW5lVHJhcEVuYWJsZWQgPSBmYWxzZQoKCQlWaW5lVHJhcC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBWaW5lVHJhcEVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJVmluZVRyYXBFbmFibGVkID0gdHJ1ZQoJCQkJVmluZVRyYXAuVGV4dCA9ICJJbnN0YW50IFZpbmUgVHJhcCAoT24pIgoJCQllbHNlCgkJCQlWaW5lVHJhcEVuYWJsZWQgPSBmYWxzZQoJCQkJVmluZVRyYXAuVGV4dCA9ICJJbnN0YW50IFZpbmUgVHJhcCAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBJbGx1c2l2ZSBBdGFrZSBIYWNrCgoJCWxvY2FsIElsbHVzaXZlQXRha2UgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCUlsbHVzaXZlQXRha2UuTmFtZSA9ICJJbGx1c2l2ZUF0YWtlIgoJCUlsbHVzaXZlQXRha2UuVGV4dCA9ICJJbGx1c2l2ZSBBdGFrZSBIYWNrIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBJbGx1c2l2ZUF0YWtlKQoKCQlJbGx1c2l2ZUF0YWtlRW5hYmxlZCA9IGZhbHNlCgoJCUlsbHVzaXZlQXRha2UuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgSWxsdXNpdmVBdGFrZUVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJSWxsdXNpdmVBdGFrZUVuYWJsZWQgPSB0cnVlCgkJCQlJbGx1c2l2ZUF0YWtlLlRleHQgPSAiSWxsdXNpdmUgQXRha2UgSGFjayAoT24pIgoJCQllbHNlCgkJCQlJbGx1c2l2ZUF0YWtlRW5hYmxlZCA9IGZhbHNlCgkJCQlJbGx1c2l2ZUF0YWtlLlRleHQgPSAiSWxsdXNpdmUgQXRha2UgSGFjayAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBJbnN0YW50IE11cmt5IE1pc3NpbGVzCgoJCWxvY2FsIERhcmtBb2UgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCURhcmtBb2UuTmFtZSA9ICJEYXJrQW9lIgoJCURhcmtBb2UuVGV4dCA9ICJJbnN0YW50IE11cmt5IE1pc3NpbGVzIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBEYXJrQW9lKQoKCQlsb2NhbCBEYXJrQW9lRW5hYmxlZCA9IGZhbHNlCgoJCURhcmtBb2UuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgbm90IERhcmtBb2VFbmFibGVkIHRoZW4KCQkJCURhcmtBb2VFbmFibGVkID0gdHJ1ZQoJCQkJRGFya0FvZS5UZXh0ID0gIkluc3RhbnQgTXVya3kgTWlzc2lsZXMgKE9uKSIKCQkJZWxzZQoJCQkJRGFya0FvZUVuYWJsZWQgPSBmYWxzZQoJCQkJRGFya0FvZS5UZXh0ID0gIkluc3RhbnQgTXVya3kgTWlzc2lsZXMgKE9mZikiCgkJCWVuZAoJCWVuZCkKCQkKCQktLSBJbnN0YW50IEFpciBEaXNwZXJzaW9uCgoJCWxvY2FsIFN0b3JtQW9lID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlTdG9ybUFvZS5OYW1lID0gIlN0b3JtQW9lIgoJCVN0b3JtQW9lLlRleHQgPSAiKEcpIEluc3RhbnQgU3Rvcm0gQW9FIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBTdG9ybUFvZSkKCgkJbG9jYWwgRGlzcGVyc2lvbkVuYWJsZWQgPSBmYWxzZQoKCQlTdG9ybUFvZS5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBpc0dvbGQgb3IgaXNNYXN0ZXIgdGhlbgoJCQkJaWYgbm90IERpc3BlcnNpb25FbmFibGVkIHRoZW4KCQkJCQlEaXNwZXJzaW9uRW5hYmxlZCA9IHRydWUKCQkJCQlTdG9ybUFvZS5UZXh0ID0gIihHKSBJbnN0YW50IFN0b3JtIEFvRSAoT24pIgoJCQkJZWxzZQoJCQkJCURpc3BlcnNpb25FbmFibGVkID0gZmFsc2UKCQkJCQlTdG9ybUFvZS5UZXh0ID0gIihHKSBJbnN0YW50IFN0b3JtIEFvRSAoT2ZmKSIKCQkJCWVuZAkKCQkJZWxzZQoJCQkJU3Rvcm1Bb2UuVGV4dCA9ICJNZW1iZXIgTm90IEdvbGQiCgkJCQl3YWl0KDEpCgkJCQlTdG9ybUFvZS5UZXh0ID0gIihHKSBJbnN0YW50IFN0b3JtIEFvRSAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBTcGxpdHRpbmcgU2xpbWUgSGFjawoKCQlsb2NhbCBTcGxpdHRpbmdTbGltZSA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJU3BsaXR0aW5nU2xpbWUuTmFtZSA9ICJTcGxpdHRpbmdTbGltZSIKCQlTcGxpdHRpbmdTbGltZS5UZXh0ID0gIlNwbGl0dGluZyBTbGltZSBIYWNrIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBTcGxpdHRpbmdTbGltZSkKCgkJU3BsaXR0aW5nU2xpbWVFbmFibGVkID0gZmFsc2UKCgkJU3BsaXR0aW5nU2xpbWUuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgU3BsaXR0aW5nU2xpbWVFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCVNwbGl0dGluZ1NsaW1lRW5hYmxlZCA9IHRydWUKCQkJCVNwbGl0dGluZ1NsaW1lLlRleHQgPSAiU3BsaXR0aW5nIFNsaW1lIEhhY2sgKE9uKSIKCQkJZWxzZQoJCQkJU3BsaXR0aW5nU2xpbWVFbmFibGVkID0gZmFsc2UKCQkJCVNwbGl0dGluZ1NsaW1lLlRleHQgPSAiU3BsaXR0aW5nIFNsaW1lIEhhY2sgKE9mZikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gQW1hdXJvdGljIExhbWJlbnQgSGFjawoKCQlsb2NhbCBBbWF1cm90aWNMYW1iZW50ID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlBbWF1cm90aWNMYW1iZW50Lk5hbWUgPSAiQW1hdXJvdGljTGFtYmVudCIKCQlBbWF1cm90aWNMYW1iZW50LlRleHQgPSAiQW1hdXJvdGljIExhbWJlbnQgSGFjayAoT2ZmKSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgQW1hdXJvdGljTGFtYmVudCkKCgkJQW1hdXJvdGljTGFtYmVudEVuYWJsZWQgPSBmYWxzZQoKCQlBbWF1cm90aWNMYW1iZW50Lk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIEFtYXVyb3RpY0xhbWJlbnRFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCUFtYXVyb3RpY0xhbWJlbnRFbmFibGVkID0gdHJ1ZQoJCQkJQW1hdXJvdGljTGFtYmVudC5UZXh0ID0gIkFtYXVyb3RpYyBMYW1iZW50IEhhY2sgKE9uKSIKCQkJZWxzZQoJCQkJQW1hdXJvdGljTGFtYmVudEVuYWJsZWQgPSBmYWxzZQoJCQkJQW1hdXJvdGljTGFtYmVudC5UZXh0ID0gIkFtYXVyb3RpYyBMYW1iZW50IEhhY2sgKE9mZikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gSW5zdGFudCBQbGFzbWEgSW1wbG9zaW9uCgoJCWxvY2FsIFBsYXNtYUltcGxvc2lvbiA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJUGxhc21hSW1wbG9zaW9uLk5hbWUgPSAiUGxhc21hSW1wbG9zaW9uIgoJCVBsYXNtYUltcGxvc2lvbi5UZXh0ID0gIkluc3RhbnQgUGxhc21hIEltcGxvc2lvbiAoT2ZmKSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgUGxhc21hSW1wbG9zaW9uKQoKCQlQbGFzbWFJbXBsb3Npb25FbmFibGVkID0gZmFsc2UKCgkJUGxhc21hSW1wbG9zaW9uLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIFBsYXNtYUltcGxvc2lvbkVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJUGxhc21hSW1wbG9zaW9uRW5hYmxlZCA9IHRydWUKCQkJCVBsYXNtYUltcGxvc2lvbi5UZXh0ID0gIkluc3RhbnQgUGxhc21hIEltcGxvc2lvbiAoT24pIgoJCQllbHNlCgkJCQlQbGFzbWFJbXBsb3Npb25FbmFibGVkID0gZmFsc2UKCQkJCVBsYXNtYUltcGxvc2lvbi5UZXh0ID0gIkluc3RhbnQgUGxhc21hIEltcGxvc2lvbiAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBGb3JtaWRhYmxlIFJvYXIgSGFjawoKCQlsb2NhbCBGb3JtaWRhYmxlUm9hciA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJRm9ybWlkYWJsZVJvYXIuTmFtZSA9ICJGb3JtaWRhYmxlUm9hciIKCQlGb3JtaWRhYmxlUm9hci5UZXh0ID0gIkZvcm1pZGFibGUgUm9hciBIYWNrIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBGb3JtaWRhYmxlUm9hcikKCgkJRm9ybWlkYWJsZVJvYXJFbmFibGVkID0gZmFsc2UKCgkJRm9ybWlkYWJsZVJvYXIuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgRm9ybWlkYWJsZVJvYXJFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCUZvcm1pZGFibGVSb2FyRW5hYmxlZCA9IHRydWUKCQkJCUZvcm1pZGFibGVSb2FyLlRleHQgPSAiRm9ybWlkYWJsZSBSb2FyIEhhY2sgKE9uKSIKCQkJZWxzZQoJCQkJRm9ybWlkYWJsZVJvYXJFbmFibGVkID0gZmFsc2UKCQkJCUZvcm1pZGFibGVSb2FyLlRleHQgPSAiRm9ybWlkYWJsZSBSb2FyIEhhY2sgKE9mZikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gSW5zdGFudCBTa2VsZXRvbiBHcmFiCgoJCWxvY2FsIFNrZWxldG9uR3JhYiA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJU2tlbGV0b25HcmFiLk5hbWUgPSAiU2tlbGV0b25HcmFiIgoJCVNrZWxldG9uR3JhYi5UZXh0ID0gIkluc3RhbnQgU2tlbGV0b24gR3JhYiAoT2ZmKSBbQUlNRURdIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBTa2VsZXRvbkdyYWIpCgoJCVNrZWxldG9uR3JhYkVuYWJsZWQgPSBmYWxzZQoKCQlTa2VsZXRvbkdyYWIuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgU2tlbGV0b25HcmFiRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlTa2VsZXRvbkdyYWJFbmFibGVkID0gdHJ1ZQoJCQkJU2tlbGV0b25HcmFiLlRleHQgPSAiSW5zdGFudCBTa2VsZXRvbiBHcmFiIChPbikgW0FJTUVEXSIKCQkJZWxzZQoJCQkJU2tlbGV0b25HcmFiRW5hYmxlZCA9IGZhbHNlCgkJCQlTa2VsZXRvbkdyYWIuVGV4dCA9ICJJbnN0YW50IFNrZWxldG9uIEdyYWIgKE9mZikgW0FJTUVEXSIKCQkJZW5kCgkJZW5kKQoKCQktLSBHcmF2aXRhdGlvbmFsIEZpZWxkIEhhY2sKCgkJbG9jYWwgR3Jhdml0YXRpb25hbEZpZWxkID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlHcmF2aXRhdGlvbmFsRmllbGQuTmFtZSA9ICJHcmF2aXRhdGlvbmFsRmllbGQiCgkJR3Jhdml0YXRpb25hbEZpZWxkLlRleHQgPSAiR3Jhdml0YXRpb25hbCBGaWVsZCBIYWNrIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBHcmF2aXRhdGlvbmFsRmllbGQpCgoJCUdyYXZpdGF0aW9uYWxGaWVsZEVuYWJsZWQgPSBmYWxzZQoKCQlHcmF2aXRhdGlvbmFsRmllbGQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgR3Jhdml0YXRpb25hbEZpZWxkRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlHcmF2aXRhdGlvbmFsRmllbGRFbmFibGVkID0gdHJ1ZQoJCQkJR3Jhdml0YXRpb25hbEZpZWxkLlRleHQgPSAiR3Jhdml0YXRpb25hbCBGaWVsZCBIYWNrIChPbikiCgkJCWVsc2UKCQkJCUdyYXZpdGF0aW9uYWxGaWVsZEVuYWJsZWQgPSBmYWxzZQoJCQkJR3Jhdml0YXRpb25hbEZpZWxkLlRleHQgPSAiR3Jhdml0YXRpb25hbCBGaWVsZCBIYWNrIChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tIEluc3RhbnQgUm9jayBBcm1vcgoKCQlsb2NhbCBSb2NrQXJtb3IgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCVJvY2tBcm1vci5OYW1lID0gIlJvY2tBcm1vciIKCQlSb2NrQXJtb3IuVGV4dCA9ICJJbnN0YW50IFJvY2sgQXJtb3IiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFJvY2tBcm1vcikKCgkJUm9ja0FybW9yLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIHBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkJvZHkgQ29sb3JzIikgdGhlbgoJCQkJcGxheWVyLkNoYXJhY3RlclsiQm9keSBDb2xvcnMiXTpEZXN0cm95KCkKCQkJZW5kCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIkVhcnRoIiwgIlJvY2sgQXJtb3IiKQoJCQlSU1IuRG9NYWdpYzpJbnZva2VTZXJ2ZXIoIkVhcnRoIiwgIlJvY2sgQXJtb3IiKQoJCWVuZCkKCgkJLS0tLSBQbGF5ZXIgbW9kaWZpY2F0aW9ucwoJCS0tIFNsaW1lIEJ1ZGRpZXMgSGFjawoKCQlsb2NhbCBTbGltZUJ1ZGRpZXMgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCVNsaW1lQnVkZGllcy5OYW1lID0gIlNsaW1lQnVkZGllcyIKCQlTbGltZUJ1ZGRpZXMuVGV4dCA9ICIoRykgU2xpbWUgQnVkZGllcyBIYWNrIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBTbGltZUJ1ZGRpZXMpCgoJCWxvY2FsIFNsaW1lQnVkZGllc0VuYWJsZWQgPSBmYWxzZQoKCQlTbGltZUJ1ZGRpZXMuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgaXNHb2xkIG9yIGlzTWFzdGVyIHRoZW4KCQkJCWlmIFNsaW1lQnVkZGllc0VuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJCVNsaW1lQnVkZGllc0VuYWJsZWQgPSB0cnVlCgkJCQkJU2xpbWVCdWRkaWVzLlRleHQgPSAiKEcpIFNsaW1lIEJ1ZGRpZXMgSGFjayAoT24pIgoJCQkJZWxzZQoJCQkJCVNsaW1lQnVkZGllc0VuYWJsZWQgPSBmYWxzZQoJCQkJCVNsaW1lQnVkZGllcy5UZXh0ID0gIihHKSBTbGltZSBCdWRkaWVzIEhhY2sgKE9mZikiCgkJCQllbmQKCQkJZWxzZQoJCQkJU2xpbWVCdWRkaWVzLlRleHQgPSAiTWVtYmVyIE5vdCBHb2xkIgoJCQkJd2FpdCgxKQoJCQkJU2xpbWVCdWRkaWVzLlRleHQgPSAiKEcpIFNsaW1lIEJ1ZGRpZXMgSGFjayAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBJbmVydGlhIEdyYXZpdHkKCgkJbG9jYWwgSW5lcnRpYUdyYXZpdHkgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCUluZXJ0aWFHcmF2aXR5Lk5hbWUgPSAiSW5lcnRpYUdyYXZpdHkiCgkJSW5lcnRpYUdyYXZpdHkuVGV4dCA9ICJJbmVydGlhIEdyYXZpdHkgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIEluZXJ0aWFHcmF2aXR5KQoKCQlJbmVydGlhR3Jhdml0eUVuYWJsZWQgPSBmYWxzZQoKCQlJbmVydGlhR3Jhdml0eS5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBJbmVydGlhR3Jhdml0eUVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJSW5lcnRpYUdyYXZpdHlFbmFibGVkID0gdHJ1ZQoJCQkJSW5lcnRpYUdyYXZpdHkuVGV4dCA9ICJJbmVydGlhIEdyYXZpdHkgKE9uKSIKCQkJCWxvY2FsIEJvZHlGb3JjZSA9IEluc3RhbmNlLm5ldygiQm9keUZvcmNlIikKCQkJCUJvZHlGb3JjZS5QYXJlbnQgPSBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQKCQkJCUJvZHlGb3JjZS5OYW1lID0gIkluZXJ0aWFHcmF2aXR5Rm9yY2UiCgkJCQlCb2R5Rm9yY2UuRm9yY2UgPSBWZWN0b3IzLm5ldygwLCAxNjM4LCAwKQoJCQllbHNlCgkJCQlJbmVydGlhR3Jhdml0eUVuYWJsZWQgPSBmYWxzZQoJCQkJSW5lcnRpYUdyYXZpdHkuVGV4dCA9ICJJbmVydGlhIEdyYXZpdHkgKE9mZikiCgkJCQlpZiBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQ6RmluZEZpcnN0Q2hpbGQoIkluZXJ0aWFHcmF2aXR5Rm9yY2UiKSB0aGVuCgkJCQkJcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkluZXJ0aWFHcmF2aXR5Rm9yY2U6RGVzdHJveSgpCgkJCQllbmQKCQkJZW5kCgkJZW5kKQoKCQktLSBTcGVjdHJhbCBFbWJvZGltZW50CgoJCWxvY2FsIFNwZWN0cmFsRW1ib2RpbWVudCA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJU3BlY3RyYWxFbWJvZGltZW50Lk5hbWUgPSAiU3BlY3RyYWxFbWJvZGltZW50IgoJCVNwZWN0cmFsRW1ib2RpbWVudC5UZXh0ID0gIlNwZWN0cmFsIEVtYm9kaW1lbnQgS2V5YmluZCAoT2ZmKSBbWF0iCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFNwZWN0cmFsRW1ib2RpbWVudCkKCgkJU3BlY3RyYWxFbWJvZGltZW50RW5hYmxlZCA9IGZhbHNlCgoJCVNwZWN0cmFsRW1ib2RpbWVudC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBTcGVjdHJhbEVtYm9kaW1lbnRFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCVNwZWN0cmFsRW1ib2RpbWVudEVuYWJsZWQgPSB0cnVlCgkJCQlTcGVjdHJhbEVtYm9kaW1lbnQuVGV4dCA9ICJTcGVjdHJhbCBFbWJvZGltZW50IEtleWJpbmQgKE9uKSBbWF0iCgkJCWVsc2UKCQkJCVNwZWN0cmFsRW1ib2RpbWVudEVuYWJsZWQgPSBmYWxzZQoJCQkJU3BlY3RyYWxFbWJvZGltZW50LlRleHQgPSAiU3BlY3RyYWwgRW1ib2RpbWVudCBLZXliaW5kIChPZmYpIFtYXSIKCQkJZW5kCgkJZW5kKQoKCQktLSBBbnRpLUJsaW5kCgoJCWxvY2FsIEFudGlCbGluZCA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJQW50aUJsaW5kLk5hbWUgPSAiQW50aUJsaW5kIgoJCUFudGlCbGluZC5UZXh0ID0gIkFudGktQmxpbmQgKE9mZikgW0tdIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBBbnRpQmxpbmQpCgoJCUFudGlCbGluZEVuYWJsZWQgPSBmYWxzZQoKCQlsb2NhbCBub3JtYWxGb2dDb2xvciA9IGdhbWUuTGlnaHRpbmcuRm9nQ29sb3IKCQlsb2NhbCBub3JtYWxGb2dFbmQgPSBnYW1lLkxpZ2h0aW5nLkZvZ0VuZAoJCWxvY2FsIG5vcm1hbEJyaWdodG5lc3MgPSBnYW1lLkxpZ2h0aW5nLkJyaWdodG5lc3MKCQlsb2NhbCBub3JtYWxDbG9ja1RpbWUgPSBnYW1lLkxpZ2h0aW5nLkNsb2NrVGltZQoKCQlsb2NhbCBmdW5jdGlvbiBBbnRpQmxpbmRGdW5jKCkKCQkJaWYgQW50aUJsaW5kRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlBbnRpQmxpbmRFbmFibGVkID0gdHJ1ZQoJCQkJQW50aUJsaW5kLlRleHQgPSAiQW50aS1CbGluZCAoT24pIFtLXSIKCQkJCXdoaWxlIEFudGlCbGluZEVuYWJsZWQgZG8KCQkJCQl3YWl0KCkKCQkJCQlnYW1lLkxpZ2h0aW5nLkZvZ0NvbG9yID0gbm9ybWFsRm9nQ29sb3IKCQkJCQlnYW1lLkxpZ2h0aW5nLkZvZ0VuZCA9IG5vcm1hbEZvZ0VuZAoJCQkJCWdhbWUuTGlnaHRpbmcuQnJpZ2h0bmVzcyA9IG5vcm1hbEJyaWdodG5lc3MKCQkJCQlnYW1lLkxpZ2h0aW5nLkNsb2NrVGltZSA9IG5vcm1hbENsb2NrVGltZQoJCQkJZW5kCgkJCWVsc2UKCQkJCUFudGlCbGluZEVuYWJsZWQgPSBmYWxzZQoJCQkJQW50aUJsaW5kLlRleHQgPSAiQW50aS1CbGluZCAoT2ZmKSBbS10iCgkJCWVuZAoJCWVuZAoKCQlBbnRpQmxpbmQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KEFudGlCbGluZEZ1bmMpCgoJCXBsYXllcjpXYWl0Rm9yQ2hpbGQoIlBsYXllckd1aSIpLkRlc2NlbmRhbnRBZGRlZDpDb25uZWN0KGZ1bmN0aW9uKGQpCgkJCWlmIEFudGlCbGluZEVuYWJsZWQgdGhlbgoJCQkJaWYgZC5OYW1lID09ICJTY3JlZW5HdWkiIHRoZW4KCQkJCQl3YWl0KCkKCQkJCQlwbGF5ZXIuUGxheWVyR3VpLlNjcmVlbkd1aTpEZXN0cm95KCkKCQkJCWVsc2VpZiBkLk5hbWUgPT0gIkRpc3RvcnQiIHRoZW4KCQkJCQl3YWl0KCkKCQkJCQlwbGF5ZXIuUGxheWVyR3VpLkRpc3RvcnQ6RGVzdHJveSgpCgkJCQllbmQKCQkJZW5kCgkJZW5kKQoKCQktLSBTcGVlZCBoYWNrCgoJCWxvY2FsIFNwZWVkaGFjayA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJU3BlZWRoYWNrLk5hbWUgPSAiU3BlZWRoYWNrIgoJCVNwZWVkaGFjay5UZXh0ID0gIlNwZWVkaGFjayBbZGVmYXVsdCA2NF0gKE9mZikgW1RdIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBTcGVlZGhhY2spCgoJCVNwZWVkaGFja0VuYWJsZWQgPSBmYWxzZQoJCVNldFNwZWVkID0gNjQKCgkJZnVuY3Rpb24gbW9kaWZ5U3BlZWQoKQoJCQlwbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpLkNoYW5nZWQ6Y29ubmVjdChmdW5jdGlvbigpCgkJCQlpZiBTcGVlZGhhY2tFbmFibGVkIGFuZCBTZXRTcGVlZCB+PSBuaWwgdGhlbgoJCQkJCXBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQuV2Fsa1NwZWVkID0gU2V0U3BlZWQKCQkJCWVsc2UKCQkJCQlyZXR1cm4KCQkJCWVuZAoJCQllbmQpCgkJZW5kCgoJCWZ1bmN0aW9uIGJlZ2luU3BlZWQoKQoJCQlpZiBTcGVlZGhhY2tFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCVNwZWVkaGFja0VuYWJsZWQgPSB0cnVlCgkJCQlTcGVlZGhhY2suVGV4dCA9ICJTcGVlZGhhY2sgW2RlZmF1bHQgNjRdIChPbikgW1RdIgoJCQkJbW9kaWZ5U3BlZWQoKQoJCQkJd2FpdCgpCgkJCQlwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkLldhbGtTcGVlZCA9IFNldFNwZWVkCgkJCQl3aGlsZSBTcGVlZGhhY2tFbmFibGVkIGRvCgkJCQkJd2FpdCgpCgkJCQkJaWYgcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZC5IZWFsdGggPT0gMCB0aGVuCgkJCQkJCXJlcGVhdCB3YWl0KCkgdW50aWwgcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZC5IZWFsdGggfj0gMAoJCQkJCQltb2RpZnlTcGVlZCgpCgkJCQkJCXdhaXQoKQoJCQkJCQlwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkLldhbGtTcGVlZCA9IFNldFNwZWVkCgkJCQkJZW5kCgkJCQllbmQKCQkJZWxzZQoJCQkJU3BlZWRoYWNrRW5hYmxlZCA9IGZhbHNlCgkJCQlTcGVlZGhhY2suVGV4dCA9ICJTcGVlZGhhY2sgW2RlZmF1bHQgNjRdIChPZmYpIFtUXSIKCQkJZW5kCgkJZW5kCgoJCVNwZWVkaGFjay5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoYmVnaW5TcGVlZCkKCgkJLS0tLSBCdWxsZXRzCgkJLS0gSHlwZXJhbmcgSGFjawoKCQlsb2NhbCBUZWNoUmFuZyA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJVGVjaFJhbmcuTmFtZSA9ICJUZWNoUmFuZyIKCQlUZWNoUmFuZy5UZXh0ID0gIkh5cGVyYW5nIEhhY2sgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFRlY2hSYW5nKQoKCQlsb2NhbCBIeXBlcmFuZ0VuYWJsZWQgPSBmYWxzZQoKCQlUZWNoUmFuZy5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBub3QgSHlwZXJhbmdFbmFibGVkIHRoZW4KCQkJCUh5cGVyYW5nRW5hYmxlZCA9IHRydWUKCQkJCVRlY2hSYW5nLlRleHQgPSAiSHlwZXJhbmcgSGFjayAoT24pIgoJCQllbHNlCgkJCQlIeXBlcmFuZ0VuYWJsZWQgPSBmYWxzZQoJCQkJVGVjaFJhbmcudGV4dCA9ICJIeXBlcmFuZyBIYWNrIChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tIEFzdGVyb2lkIEJlbHQgSGFjawoKCQlsb2NhbCBBc3Rlcm9pZEJlbHRIYWNrID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlBc3Rlcm9pZEJlbHRIYWNrLk5hbWUgPSAiQXN0ZXJvaWRCZWx0SGFjayIKCQlBc3Rlcm9pZEJlbHRIYWNrLlRleHQgPSAiQXRlcm9pZHMgQmVsdCBIYWNrIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBBc3Rlcm9pZEJlbHRIYWNrKQoJCQoJCWxvY2FsIEFzdGVyb2lkQmVsdEVuYWJsZWQgPSBmYWxzZQoJCQoJCUFzdGVyb2lkQmVsdEhhY2suTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgQXN0ZXJvaWRCZWx0RW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlBc3Rlcm9pZEJlbHRFbmFibGVkID0gdHJ1ZQoJCQkJQXN0ZXJvaWRCZWx0SGFjay5UZXh0ID0gIkFzdGVyb2lkIEJlbHQgSGFjayAoT24pIgoJCQllbHNlCgkJCQlBc3Rlcm9pZEJlbHRFbmFibGVkID0gZmFsc2UKCQkJCUFzdGVyb2lkQmVsdEhhY2suVGV4dCA9ICJBdGVyb2lkcyBCZWx0IEhhY2sgKE9mZikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gT3JicyBvZiBFbmxpZ2h0ZW5tZW50IEhhY2sKCgkJbG9jYWwgTGlnaHRPcmJzSGFjayA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJTGlnaHRPcmJzSGFjay5OYW1lID0gIkxpZ2h0T3Jic0hhY2siCgkJTGlnaHRPcmJzSGFjay5UZXh0ID0gIkxpZ2h0IE9yYnMgSGFjayAoT2ZmKSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgTGlnaHRPcmJzSGFjaykKCgkJbG9jYWwgbE9yYnNFbmFibGVkID0gZmFsc2UKCgkJTGlnaHRPcmJzSGFjay5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBsT3Jic0VuYWJsZWQgdGhlbgoJCQkJbE9yYnNFbmFibGVkID0gZmFsc2UKCQkJCUxpZ2h0T3Jic0hhY2suVGV4dCA9ICJMaWdodCBPcmJzIEhhY2sgKE9mZikiCgkJCWVsc2UKCQkJCWxPcmJzRW5hYmxlZCA9IHRydWUKCQkJCUxpZ2h0T3Jic0hhY2suVGV4dCA9ICJMaWdodCBPcmJzIEhhY2sgKE9uKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBWaWdvciBHeXJhdGlvbiBIYWNrCgoJCWxvY2FsIFZpZ0d5cmF0SGFjayA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJVmlnR3lyYXRIYWNrLk5hbWUgPSAiVmlnR3lyYXRIYWNrIgoJCVZpZ0d5cmF0SGFjay5UZXh0ID0gIlZpZ29yIEd5cmF0aW9uIEhhY2sgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFZpZ0d5cmF0SGFjaykKCQkKCQlsb2NhbCBWaWdvckhhY2tFbmFibGVkID0gZmFsc2UKCQkKCQlWaWdHeXJhdEhhY2suTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgVmlnb3JIYWNrRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlWaWdvckhhY2tFbmFibGVkID0gdHJ1ZQoJCQkJVmlnR3lyYXRIYWNrLlRleHQgPSAiVmlnb3IgR3lyYXRpb24gSGFjayAoT24pIgoJCQllbHNlCgkJCQlWaWdvckhhY2tFbmFibGVkID0gZmFsc2UKCQkJCVZpZ0d5cmF0SGFjay5UZXh0ID0gIlZpZ29yIEd5cmF0aW9uIEhhY2sgKE9mZikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gTGlnaHRuaW5nIEJhcnJhZ2UgSGFjawoKCQlsb2NhbCBCYXJyYWdlID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlCYXJyYWdlLk5hbWUgPSAiQmFycmFnZSIKCQlCYXJyYWdlLlRleHQgPSAiQmFycmFnZSBIYWNrIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBCYXJyYWdlKQoKCQlCYXJyYWdlLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIG5vdCBTdG9ybUJ1bGxldHNFbmFibGVkIHRoZW4KCQkJCVN0b3JtQnVsbGV0c0VuYWJsZWQgPSB0cnVlCgkJCQlCYXJyYWdlLlRleHQgPSAiQmFycmFnZSBIYWNrIChPbikiCgkJCWVsc2UKCQkJCVN0b3JtQnVsbGV0c0VuYWJsZWQgPSBmYWxzZQoJCQkJQmFycmFnZS5UZXh0ID0gIkJhcnJhZ2UgSGFjayAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBEeWluZyBTdGFyIEhhY2sKCgkJbG9jYWwgRHlpbmdTdGFySGFjayA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJRHlpbmdTdGFySGFjay5OYW1lID0gIkR5aW5nU3RhckhhY2siCgkJRHlpbmdTdGFySGFjay5UZXh0ID0gIihHKSBEeWluZyBTdGFyIEhhY2sgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIER5aW5nU3RhckhhY2spCgoJCWxvY2FsIER5aW5nU3RhckVuYWJsZWQgPSBmYWxzZQoKCQlEeWluZ1N0YXJIYWNrLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIGlzR29sZCBvciBpc01hc3RlciB0aGVuCgkJCQlpZiBEeWluZ1N0YXJFbmFibGVkIHRoZW4KCQkJCQlEeWluZ1N0YXJFbmFibGVkID0gZmFsc2UKCQkJCQlEeWluZ1N0YXJIYWNrLlRleHQgPSAiKEcpIER5aW5nIFN0YXIgSGFjayAoT2ZmKSIKCQkJCWVsc2UKCQkJCQlEeWluZ1N0YXJFbmFibGVkID0gdHJ1ZQoJCQkJCUR5aW5nU3RhckhhY2suVGV4dCA9ICIoRykgRHlpbmcgU3RhciBIYWNrIChPbikiCgkJCQllbmQKCQkJZWxzZQoJCQkJRHlpbmdTdGFySGFjay5UZXh0ID0gIk1lbWJlciBOb3QgR29sZCIKCQkJCXdhaXQoMSkKCQkJCUR5aW5nU3RhckhhY2suVGV4dCA9ICIoRykgRHlpbmcgU3RhciBIYWNrIChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tLS0gQmxhc3RzCgoJCS0tIEV4cGxvZGUgYXQgTW91c2UgKEJvbHQgSGFjaykKCgkJbG9jYWwgRXhwbG9kZUF0TW91c2UgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCUV4cGxvZGVBdE1vdXNlLk5hbWUgPSAiRXhwbG9kZUF0TW91c2UiCgkJRXhwbG9kZUF0TW91c2UuVGV4dCA9ICJFeHBsb2RlIGF0IE1vdXNlIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLEV4cGxvZGVBdE1vdXNlKQoKCQlFeHBsb2RlQXRNb3VzZS5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBNb3VzZUV4RW5hYmxlZCB0aGVuCgkJCQlNb3VzZUV4RW5hYmxlZCA9IGZhbHNlCgkJCQlFeHBsb2RlQXRNb3VzZS5UZXh0ID0gIkV4cGxvZGUgYXQgTW91c2UgKE9mZikiCgkJCWVsc2UKCQkJCU1vdXNlRXhFbmFibGVkID0gdHJ1ZQoJCQkJRXhwbG9kZUF0TW91c2UuVGV4dCA9ICJFeHBsb2RlIGF0IE1vdXNlIChPbikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gT3JiaXRhbCBTdHJpa2UgSGFjawoKCQlsb2NhbCBPcmJpdGFsID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlPcmJpdGFsLk5hbWUgPSAiT3JpYnRhbCIKCQlPcmJpdGFsLlRleHQgPSAiKEcpIE9yYml0YWwgU3RyaWtlIEhhY2sgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIE9yYml0YWwpCgoJCWxvY2FsIE9yYml0YWxIYWNrRW5hYmxlZCA9IGZhbHNlCgoJCU9yYml0YWwuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgaXNHb2xkIG9yIGlzTWFzdGVyIHRoZW4KCQkJCWlmIG5vdCBPcmJpdGFsSGFja0VuYWJsZWQgdGhlbgoJCQkJCU9yYml0YWxIYWNrRW5hYmxlZCA9IHRydWUKCQkJCQlPcmJpdGFsLlRleHQgPSAiKEcpIE9yYml0YWwgU3RyaWtlIEhhY2sgKE9uKSIKCQkJCWVsc2UKCQkJCQlPcmJpdGFsSGFja0VuYWJsZWQgPSBmYWxzZQoJCQkJCU9yYml0YWwuVGV4dCA9ICIoRykgT3JiaXRhbCBTdHJpa2UgSGFjayAoT2ZmKSIKCQkJCWVuZAoJCQllbHNlCgkJCQlPcmJpdGFsLlRleHQgPSAiTWVtYmVyIE5vdCBHb2xkIgoJCQkJd2FpdCgxKQoJCQkJT3JiaXRhbC5UZXh0ID0gIihHKSBPcmJpdGFsIFN0cmlrZSBIYWNrIChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tIEluc3RhbnQgRG91YmxlIFJheQoKCQlsb2NhbCBEb3VibGVSYXkgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCURvdWJsZVJheS5OYW1lID0gIkRvdWJsZVJheSIKCQlEb3VibGVSYXkuVGV4dCA9ICIoRykgSW5zdGFudCBEb3VibGUgUmF5IChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBEb3VibGVSYXkpCgoJCURvdWJsZVJheS5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBpc0dvbGQgb3IgaXNNYXN0ZXIgdGhlbgoJCQkJaWYgbm90IERvdWJsZVJheUVuYWJsZWQgdGhlbgoJCQkJCURvdWJsZVJheUVuYWJsZWQgPSB0cnVlCgkJCQkJRG91YmxlUmF5LlRleHQgPSAiKEcpIEluc3RhbnQgRG91YmxlIFJheSAoT24pIgoJCQkJZWxzZQoJCQkJCURvdWJsZVJheUVuYWJsZWQgPSBmYWxzZQoJCQkJCURvdWJsZVJheS5UZXh0ID0gIihHKSBJbnN0YW50IERvdWJsZSBSYXkgKE9mZikiCgkJCQllbmQKCQkJZWxzZQoJCQkJRG91YmxlUmF5LlRleHQgPSAiTWVtYmVyIE5vdCBHb2xkIgoJCQkJd2FpdCgxKQoJCQkJRG91YmxlUmF5LlRleHQgPSAiKEcpIEluc3RhbnQgRG91YmxlIFJheSAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBIb2xvYmVhbSBDYW1lcmEgQXR0YWNoCgoJCWxvY2FsIEhvbG9iZWFtID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlIb2xvYmVhbS5OYW1lID0gIkhvbG9iZWFtIgoJCUhvbG9iZWFtLlRleHQgPSAiSG9sb2JlYW0gQ2FtZXJhIEF0dGFjaCAoT2ZmKSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgSG9sb2JlYW0pCgoJCUhvbG9iZWFtRW5hYmxlZCA9IGZhbHNlCgoJCWZ1bmN0aW9uIGF0dGFjaENhbWVyYSh2KQoJCQlpZiAodiB+PSBuaWwpIHRoZW4KCQkJCWlmIG5vdCh2aWV3aW5nKSBhbmQgKHYuTmFtZSA9PSAiSG9sb2JlYW0iKSB0aGVuCgkJCQkJZ2FtZS5Xb3Jrc3BhY2UuQ2FtZXJhLkNhbWVyYVN1YmplY3QgPSBnYW1lLldvcmtzcGFjZVsnLklnbm9yZSddWycuQXR0YWNrcyddW3YuTmFtZV0KCQkJCWVsc2UKCQkJCQl2OkRlc3Ryb3koKQoJCQkJCXJldHVybgoJCQkJZW5kCgkJCQkKCQkJCXYuVHJhbnNwYXJlbmN5ID0gMAoKCQkJCXdhaXQoNCkKCQkJCWlmIG5vdCh2aWV3aW5nKSBhbmQgbm90KGdhbWUuV29ya3NwYWNlLkNhbWVyYS5DYW1lcmFTdWJqZWN0ID09IHBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQpIHRoZW4KCQkJCQlnYW1lLldvcmtzcGFjZS5DYW1lcmEuQ2FtZXJhU3ViamVjdCA9IHBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQKCQkJCWVuZAoJCQkJCgkJCQl2OkRlc3Ryb3koKQoJCQllbmQKCQllbmQKCQkKCQlnYW1lLldvcmtzcGFjZVsnLklnbm9yZSddWycuQXR0YWNrcyddLkRlc2NlbmRhbnRBZGRlZDpDb25uZWN0KGZ1bmN0aW9uKHYpCgkJCWlmIEhvbG9iZWFtRW5hYmxlZCB0aGVuCgkJCQlpZiAodi5OYW1lID09ICJQYXJ0IikgYW5kIChwbGF5ZXIuQ2hhcmFjdGVyKSB0aGVuCgkJCQkJbG9jYWwgZGlzdGFuY2UgPSAocGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gdi5Qb3NpdGlvbikuTWFnbml0dWRlCgkJCQkJCgkJCQkJaWYgKHYuU2l6ZSA9PSBWZWN0b3IzLm5ldyg1LCA1LCA1KSkgYW5kIChkaXN0YW5jZSA8IDEwKSBhbmQgKHY6V2FpdEZvckNoaWxkKCJCb2R5VmVsb2NpdHkiLCAxKSkgYW5kICh2OldhaXRGb3JDaGlsZCgiQm9keUd5cm8iLCAxKSkgYW5kICh2LkJvZHlWZWxvY2l0eS5QID49IDEyNTApIHRoZW4KCQkJCQkKCQkJCQkJdi5OYW1lID0gIkhvbG9iZWFtIgoJCQkJCQoJCQkJCQlwY2FsbChmdW5jdGlvbigpCgkJCQkJCQljb3JvdXRpbmUucmVzdW1lKGNvcm91dGluZS5jcmVhdGUoZnVuY3Rpb24oKSAKCQkJCQkJCQlhdHRhY2hDYW1lcmEodikgCgkJCQkJCQllbmQpKQoJCQkJCQllbmQpCgkJCQkJCQoJCQkJCQlsb2NhbCBndWkgPSBwbGF5ZXIuUGxheWVyR3VpLk1haW4uU2tpbGxzQmFyCgkJCQkJCQoJCQkJCQl3YWl0KDAuNSkKCQkJCQkJCgkJCQkJCXdoaWxlIHdhaXQoKSBkbwoJCQkJCQkJaWYgbm90KGd1aVsnMSddLkNELlRleHQgPT0gIi4uLiIpIGFuZCBub3QoZ3VpWycyJ10uQ0QuVGV4dCA9PSAiLi4uIikgYW5kIG5vdChndWlbJzMnXS5DRC5UZXh0ID09ICIuLi4iKSBhbmQgbm90KGd1aVsnNCddLkNELlRleHQgPT0gIi4uLiIpIGFuZCBub3QoZ3VpWyc1J10uQ0QuVGV4dCA9PSAiLi4uIikgdGhlbgoJCQkJCQkJCXBjYWxsKGZ1bmN0aW9uKCkKCQkJCQkJCQkJaWYgbm90KHZpZXdpbmcpIGFuZCBub3QoZ2FtZS5Xb3Jrc3BhY2UuQ2FtZXJhLkNhbWVyYVN1YmplY3QgPT0gcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZCkgdGhlbgoJCQkJCQkJCQkJZ2FtZS5Xb3Jrc3BhY2UuQ2FtZXJhLkNhbWVyYVN1YmplY3QgPSBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkCgkJCQkJCQkJCWVuZAoJCQkJCgkJCQkJCQkJCXY6RGVzdHJveSgpCgkJCQkJCQkJZW5kKQoJCQkJCQkJCQoJCQkJCQkJCWJyZWFrCgkJCQkJCQllbmQKCQkJCQkJZW5kCgkJCQkJZW5kCgkJCQllbmQKCQkJZW5kCgkJZW5kKQoKCQlIb2xvYmVhbS5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBIb2xvYmVhbUVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJSG9sb2JlYW1FbmFibGVkID0gdHJ1ZQoJCQkJSG9sb2JlYW0uVGV4dCA9ICJIb2xvYmVhbSBDYW1lcmEgQXR0YWNoIChPbikiCgkJCQkKCQkJCWZvciBpLCB2IGluIHBhaXJzKGdhbWUuV29ya3NwYWNlWycuSWdub3JlJ11bJy5BdHRhY2tzJ106R2V0Q2hpbGRyZW4oKSkgZG8KCQkJCQlpZiAodi5OYW1lID09ICJQYXJ0IikgYW5kICh2OldhaXRGb3JDaGlsZCgiQm9keVZlbG9jaXR5IiwgMSkpIGFuZCAodjpXYWl0Rm9yQ2hpbGQoIkJvZHlHeXJvIiwgMSkpIGFuZCAodi5Cb2R5VmVsb2NpdHkuUCA+PSAxMjUwKSB0aGVuIHY6RGVzdHJveSgpIGVuZAoJCQkJZW5kCgkJCWVsc2UKCQkJCUhvbG9iZWFtRW5hYmxlZCA9IGZhbHNlCgkJCQlIb2xvYmVhbS5UZXh0ID0gIkhvbG9iZWFtIENhbWVyYSBBdHRhY2ggKE9mZikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gQ29udHJvbGxlZCBFY2hvZXMKCgkJbG9jYWwgRWNob2VzID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlFY2hvZXMuTmFtZSA9ICJFY2hvZXMiCgkJRWNob2VzLlRleHQgPSAiQ29udHJvbGxlZCBFY2hvZXMgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIEVjaG9lcykKCgkJQ29udHJvbGxlZEVjaG9lc0VuYWJsZWQgPSBmYWxzZQoJCUVjaG9lc1BoYXNlID0gMQoKCQlFY2hvZXMuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgQ29udHJvbGxlZEVjaG9lc0VuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJQ29udHJvbGxlZEVjaG9lc0VuYWJsZWQgPSB0cnVlCgkJCQlFY2hvZXMuVGV4dCA9ICJDb250cm9sbGVkIEVjaG9lcyAoT24pIgoJCQllbHNlCgkJCQlDb250cm9sbGVkRWNob2VzRW5hYmxlZCA9IGZhbHNlCgkJCQlFY2hvZXMuVGV4dCA9ICJDb250cm9sbGVkIEVjaG9lcyAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLS0tIFNoaWVsZHMKCQktLSBDcnlzdGFsIEFybWFtZW50IEhhY2sKCgkJbG9jYWwgQ3J5c3RhbEFybWFtZW50ID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlDcnlzdGFsQXJtYW1lbnQuTmFtZSA9ICJDcnlzdGFsQXJtYW1lbnQiCgkJQ3J5c3RhbEFybWFtZW50LlRleHQgPSAiSW5zdGFudCBDcnlzdGFsIEFybWFtZW50IChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBDcnlzdGFsQXJtYW1lbnQpCgoJCUNyeXN0YWxBcm1hbWVudEVuYWJsZWQgPSBmYWxzZQoKCQlDcnlzdGFsQXJtYW1lbnQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgQ3J5c3RhbEFybWFtZW50RW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlDcnlzdGFsQXJtYW1lbnRFbmFibGVkID0gdHJ1ZQoJCQkJQ3J5c3RhbEFybWFtZW50LlRleHQgPSAiSW5zdGFudCBDcnlzdGFsIEFybWFtZW50IChPbikiCgkJCWVsc2UKCQkJCUNyeXN0YWxBcm1hbWVudEVuYWJsZWQgPSBmYWxzZQoJCQkJQ3J5c3RhbEFybWFtZW50LlRleHQgPSAiSW5zdGFudCBDcnlzdGFsIEFybWFtZW50IChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tIEdyYXZpdGFsIEdsb2JlIEhhY2sKCgkJbG9jYWwgR3Jhdml0YWxHbG9iZSA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJR3Jhdml0YWxHbG9iZS5OYW1lID0gIkdyYXZpdGFsR2xvYmUiCgkJR3Jhdml0YWxHbG9iZS5UZXh0ID0gIkdyYXZpdGFsIEdsb2JlIEhhY2sgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIEdyYXZpdGFsR2xvYmUpCgoJCUdyYXZpdGFsR2xvYmVFbmFibGVkID0gZmFsc2UKCgkJR3Jhdml0YWxHbG9iZS5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBHcmF2aXRhbEdsb2JlRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlHcmF2aXRhbEdsb2JlRW5hYmxlZCA9IHRydWUKCQkJCUdyYXZpdGFsR2xvYmUuVGV4dCA9ICJHcmF2aXRhbCBHbG9iZSBIYWNrIChPbikiCgkJCWVsc2UKCQkJCUdyYXZpdGFsR2xvYmVFbmFibGVkID0gZmFsc2UKCQkJCUdyYXZpdGFsR2xvYmUuVGV4dCA9ICJHcmF2aXRhbCBHbG9iZSBIYWNrIChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tLS0gVWx0cwoJCS0tIERpc2FibGUgY29vbGRvd25zCgkJbG9jYWwgRW5hYmxlVWx0cyA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJRW5hYmxlVWx0cy5OYW1lID0gIkVuYWJsZVVsdHMiCgkJRW5hYmxlVWx0cy5UZXh0ID0gIihHKSBSZW1vdmUgVWx0IENvb2xkb3duIgoJCXRhYmxlLmluc2VydChidXR0b25zLEVuYWJsZVVsdHMpCgoJCUVuYWJsZVVsdHMuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgaXNHb2xkIG9yIGlzTWFzdGVyIHRoZW4KCQkJCWdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiRGFya25lc3MiLCAiVm9pZCBvZiBUZXJyb3IiKQoJCQkJZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuRG9NYWdpYzpJbnZva2VTZXJ2ZXIoIkRhcmtuZXNzIiwgIlZvaWQgb2YgVGVycm9yIiwgQ0ZyYW1lLm5ldyhwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24tVmVjdG9yMy5uZXcoMCwyNTAsMCkpKQoJCQkJZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuRG9DbGllbnRNYWdpYzpGaXJlU2VydmVyKCJEYXJrbmVzcyIsICJWb2lkIG9mIFRlcnJvciIpCgkJCQlnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Eb01hZ2ljOkludm9rZVNlcnZlcigiRGFya25lc3MiLCAiVm9pZCBvZiBUZXJyb3IiLCBDRnJhbWUubmV3KHBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbi1WZWN0b3IzLm5ldygwLDI1MCwwKSkpCgkJCWVsc2UKCQkJCUVuYWJsZVVsdHMuVGV4dCA9ICJNZW1iZXIgTm90IEdvbGQiCgkJCQl3YWl0KDMpCgkJCQlFbmFibGVVbHRzLlRleHQgPSAiKEcpIFJlbW92ZSBVbHQgQ29vbGRvd24iCgkJCWVuZAoJCWVuZCkKCgkJLS0gUmVhcGVyJ3MgUmFnZQoJCWxvY2FsIFJlYXBlclVsdCA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJUmVhcGVyVWx0Lk5hbWUgPSAiUmVhcGVyVWx0IgoJCVJlYXBlclVsdC5UZXh0ID0gIihHKSBSZWFwZXIncyBSYWdlIEhhY2sgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFJlYXBlclVsdCkKCgkJbG9jYWwgUmVhcGVyVWx0RW5hYmxlZCA9IGZhbHNlCgoJCVJlYXBlclVsdC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBpc0dvbGQgb3IgaXNNYXN0ZXIgdGhlbgoJCQkJaWYgbm90IFJlYXBlclVsdEVuYWJsZWQgdGhlbgoJCQkJCVJlYXBlclVsdEVuYWJsZWQgPSB0cnVlCgkJCQkJUmVhcGVyVWx0LlRleHQgPSAiKEcpIFJlYXBlcidzIFJhZ2UgSGFjayAoT24pIgoJCQkJZWxzZQoJCQkJCVJlYXBlclVsdEVuYWJsZWQgPSBmYWxzZQoJCQkJCVJlYXBlclVsdC5UZXh0ID0gIihHKSBSZWFwZXIncyBSYWdlIEhhY2sgKE9mZikiCgkJCQllbmQKCQkJZWxzZQoJCQkJUmVhcGVyVWx0LlRleHQgPSAiTWVtYmVyIE5vdCBHb2xkIgoJCQkJd2FpdCgxKQoJCQkJUmVhcGVyVWx0LlRleHQgPSAiKEcpIFJlYXBlcidzIFJhZ2UgSGFjayAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBBYmxhemUgSnVkZ2VtZW50IEhhY2sKCgkJbG9jYWwgQWJsYXplSnVkZ2VtZW50ID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlBYmxhemVKdWRnZW1lbnQuTmFtZSA9ICJBYmxhemVKdWRnZW1lbnQiCgkJQWJsYXplSnVkZ2VtZW50LlRleHQgPSAiQWJsYXplIEp1ZGdlbWVudCBIYWNrIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBBYmxhemVKdWRnZW1lbnQpCgoJCUFibGF6ZUp1ZGdlbWVudEhhY2tFbmFibGVkID0gZmFsc2UKCgkJQWJsYXplSnVkZ2VtZW50Lk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIEFibGF6ZUp1ZGdlbWVudEhhY2tFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCUFibGF6ZUp1ZGdlbWVudEhhY2tFbmFibGVkID0gdHJ1ZQoJCQkJQWJsYXplSnVkZ2VtZW50LlRleHQgPSAiQWJsYXplIEp1ZGdlbWVudCBIYWNrIChPbikiCgkJCWVsc2UKCQkJCUFibGF6ZUp1ZGdlbWVudEhhY2tFbmFibGVkID0gZmFsc2UKCQkJCUFibGF6ZUp1ZGdlbWVudC5UZXh0ID0gIkFibGF6ZSBKdWRnZW1lbnQgSGFjayAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBWb2lkIE9wZW5pbmcgSGFjawoKCQlsb2NhbCBWb2lkT3BlbmluZyA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJVm9pZE9wZW5pbmcuTmFtZSA9ICJWb2lkT3BlbmluZyIKCQlWb2lkT3BlbmluZy5UZXh0ID0gIlZvaWQgT3BlbmluZyBIYWNrIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBWb2lkT3BlbmluZykKCgkJVm9pZE9wZW5pbmdIYWNrRW5hYmxlZCA9IGZhbHNlCgoJCVZvaWRPcGVuaW5nLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIFZvaWRPcGVuaW5nSGFja0VuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJVm9pZE9wZW5pbmdIYWNrRW5hYmxlZCA9IHRydWUKCQkJCVZvaWRPcGVuaW5nLlRleHQgPSAiVm9pZCBPcGVuaW5nIEhhY2sgKE9uKSIKCQkJZWxzZQoJCQkJVm9pZE9wZW5pbmdIYWNrRW5hYmxlZCA9IGZhbHNlCgkJCQlWb2lkT3BlbmluZy5UZXh0ID0gIlZvaWQgT3BlbmluZyBIYWNrIChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tIFRoZSBXb3JsZCBIYWNrCgoJCWxvY2FsIFRoZVdvcmxkID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlUaGVXb3JsZC5OYW1lID0gIlRoZVdvcmxkIgoJCVRoZVdvcmxkLlRleHQgPSAiVGhlIFdvcmxkIEhhY2sgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFRoZVdvcmxkKQoKCQlUaGVXb3JsZEVuYWJsZWQgPSBmYWxzZQoKCQlUaGVXb3JsZC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBUaGVXb3JsZEVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJVGhlV29ybGRFbmFibGVkID0gdHJ1ZQoJCQkJVGhlV29ybGQuVGV4dCA9ICJUaGUgV29ybGQgSGFjayAoT24pIgoJCQllbHNlCgkJCQlUaGVXb3JsZEVuYWJsZWQgPSBmYWxzZQoJCQkJVGhlV29ybGQuVGV4dCA9ICJUaGUgV29ybGQgSGFjayAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBQb2xhcmlzIEhhY2sKCgkJbG9jYWwgUG9sYXJpcyA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJUG9sYXJpcy5OYW1lID0gIlBvbGFyaXMiCgkJUG9sYXJpcy5UZXh0ID0gIlBvbGFyaXMgSGFjayAoT2ZmKSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgUG9sYXJpcykKCgkJUG9sYXJpc0VuYWJsZWQgPSBmYWxzZQoKCQlQb2xhcmlzLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIFBvbGFyaXNFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCVBvbGFyaXNFbmFibGVkID0gdHJ1ZQoJCQkJUG9sYXJpcy5UZXh0ID0gIlBvbGFyaXMgSGFjayAoT24pIgoJCQllbHNlCgkJCQlQb2xhcmlzRW5hYmxlZCA9IGZhbHNlCgkJCQlQb2xhcmlzLlRleHQgPSAiUG9sYXJpcyBIYWNrIChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tIEluc3RhbnQgU2hhdHRlcmluZyBFcnVwdGlvbgoKCQlsb2NhbCBTaGF0dGVyaW5nRXJ1cHRpb24gPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCVNoYXR0ZXJpbmdFcnVwdGlvbi5OYW1lID0gIlNoYXR0ZXJpbmdFcnVwdGlvbiIKCQlTaGF0dGVyaW5nRXJ1cHRpb24uVGV4dCA9ICJJbnN0YW50IFNoYXR0ZXJpbmcgRXJ1cHRpb24gKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFNoYXR0ZXJpbmdFcnVwdGlvbikKCgkJU2hhdHRlcmluZ0VydXB0aW9uRW5hYmxlZCA9IGZhbHNlCgoJCVNoYXR0ZXJpbmdFcnVwdGlvbi5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBTaGF0dGVyaW5nRXJ1cHRpb25FbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCVNoYXR0ZXJpbmdFcnVwdGlvbkVuYWJsZWQgPSB0cnVlCgkJCQlTaGF0dGVyaW5nRXJ1cHRpb24uVGV4dCA9ICJJbnN0YW50IFNoYXR0ZXJpbmcgRXJ1cHRpb24gKE9uKSIKCQkJZWxzZQoJCQkJU2hhdHRlcmluZ0VydXB0aW9uRW5hYmxlZCA9IGZhbHNlCgkJCQlTaGF0dGVyaW5nRXJ1cHRpb24uVGV4dCA9ICJJbnN0YW50IFNoYXR0ZXJpbmcgRXJ1cHRpb24gKE9mZikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gRXRoZXJlYWwgQWN1bWVuIEhhY2sKCgkJbG9jYWwgRXRoZXJlYWxBY3VtZW4gPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCUV0aGVyZWFsQWN1bWVuLk5hbWUgPSAiRXRoZXJlYWxBY3VtZW4iCgkJRXRoZXJlYWxBY3VtZW4uVGV4dCA9ICJFdGhlcmVhbCBBY3VtZW4gSGFjayAoT2ZmKSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgRXRoZXJlYWxBY3VtZW4pCgoJCUV0aGVyZWFsQWN1bWVuRW5hYmxlZCA9IGZhbHNlCgoJCUV0aGVyZWFsQWN1bWVuLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIEV0aGVyZWFsQWN1bWVuRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlFdGhlcmVhbEFjdW1lbkVuYWJsZWQgPSB0cnVlCgkJCQlFdGhlcmVhbEFjdW1lbi5UZXh0ID0gIkV0aGVyZWFsIEFjdW1lbiBIYWNrIChPbikiCgkJCWVsc2UKCQkJCUV0aGVyZWFsQWN1bWVuRW5hYmxlZCA9IGZhbHNlCgkJCQlFdGhlcmVhbEFjdW1lbi5UZXh0ID0gIkV0aGVyZWFsIEFjdW1lbiBIYWNrIChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tIFRveGljIEJhc2lsaXNrIEhhY2sKCgkJbG9jYWwgVG94aWNCYXNpbGlzayA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJVG94aWNCYXNpbGlzay5OYW1lID0gIlRveGljQmFzaWxpc2siCgkJVG94aWNCYXNpbGlzay5UZXh0ID0gIlRveGljIEJhc2lsaXNrIEhhY2sgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFRveGljQmFzaWxpc2spCgoJCVRveGljQmFzaWxpc2tFbmFibGVkID0gZmFsc2UKCgkJVG94aWNCYXNpbGlzay5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBUb3hpY0Jhc2lsaXNrRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlUb3hpY0Jhc2lsaXNrRW5hYmxlZCA9IHRydWUKCQkJCVRveGljQmFzaWxpc2suVGV4dCA9ICJUb3hpYyBCYXNpbGlzayBIYWNrIChPbikiCgkJCWVsc2UKCQkJCVRveGljQmFzaWxpc2tFbmFibGVkID0gZmFsc2UKCQkJCVRveGljQmFzaWxpc2suVGV4dCA9ICJUb3hpYyBCYXNpbGlzayBIYWNrIChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tIEFyY2FuZSBHdWFyZGlhbiBIYWNrCgoJCWxvY2FsIEFyY2FuZUd1YXJkaWFuID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlBcmNhbmVHdWFyZGlhbi5OYW1lID0gIkFyY2FuZUd1YXJkaWFuIgoJCUFyY2FuZUd1YXJkaWFuLlRleHQgPSAiQXJjYW5lIEd1YXJkaWFuIEhhY2sgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIEFyY2FuZUd1YXJkaWFuKQoKCQlBcmNhbmVHdWFyZGlhbkVuYWJsZWQgPSBmYWxzZQoKCQlBcmNhbmVHdWFyZGlhbi5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBBcmNhbmVHdWFyZGlhbkVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJQXJjYW5lR3VhcmRpYW5FbmFibGVkID0gdHJ1ZQoJCQkJQXJjYW5lR3VhcmRpYW4uVGV4dCA9ICJBcmNhbmUgR3VhcmRpYW4gSGFjayAoT24pIgoJCQllbHNlCgkJCQlBcmNhbmVHdWFyZGlhbkVuYWJsZWQgPSBmYWxzZQoJCQkJQXJjYW5lR3VhcmRpYW4uVGV4dCA9ICJBcmNhbmUgR3VhcmRpYW4gSGFjayAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQktLSBWaXJ0dWFsIFpvbmUgSGFjawoKCQlsb2NhbCBWaXJ0dWFsWm9uZSA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJVmlydHVhbFpvbmUuTmFtZSA9ICJWaXJ0dWFsWm9uZSIKCQlWaXJ0dWFsWm9uZS5UZXh0ID0gIlZpcnR1YWwgWm9uZSBIYWNrIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBWaXJ0dWFsWm9uZSkKCgkJVmlydHVhbFpvbmVFbmFibGVkID0gZmFsc2UKCgkJVmlydHVhbFpvbmUuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgVmlydHVhbFpvbmVFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCVZpcnR1YWxab25lRW5hYmxlZCA9IHRydWUKCQkJCVZpcnR1YWxab25lLlRleHQgPSAiVmlydHVhbCBab25lIEhhY2sgKE9uKSIKCQkJZWxzZQoJCQkJVmlydHVhbFpvbmVFbmFibGVkID0gZmFsc2UKCQkJCVZpcnR1YWxab25lLlRleHQgPSAiVmlydHVhbCBab25lIEhhY2sgKE9mZikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gVW5tYXRjaGVkIFBvd2VyIG9mIHRoZSBTdW4KCgkJbG9jYWwgU29sYXJTdGljayA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJU29sYXJTdGljay5OYW1lID0gIlNvbGFyU3RpY2siCgkJU29sYXJTdGljay5UZXh0ID0gIihHKSBTb2xhciBTdGljayBCdWcgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFNvbGFyU3RpY2spCgoJCVNvbGFyQnVnRW5hYmxlZCA9IGZhbHNlCgoJCVNvbGFyU3RpY2suTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgaXNHb2xkIG9yIGlzTWFzdGVyIHRoZW4KCQkJCWlmIFNvbGFyQnVnRW5hYmxlZCB0aGVuCgkJCQkJU29sYXJCdWdFbmFibGVkID0gZmFsc2UKCQkJCQlTb2xhclN0aWNrLlRleHQgPSAiKEcpIFNvbGFyIFN0aWNrIEJ1ZyAoT2ZmKSIKCQkJCWVsc2UKCQkJCQlTb2xhckJ1Z0VuYWJsZWQgPSB0cnVlCgkJCQkJU29sYXJTdGljay5UZXh0ID0gIihHKSBTb2xhciBTdGljayBCdWcgKE9uKSIKCQkJCWVuZAoJCQllbHNlCgkJCQlTb2xhclN0aWNrLlRleHQgPSAiTWVtYmVyIE5vdCBHb2xkIgoJCQkJd2FpdCgzKQoJCQkJU29sYXJTdGljay5UZXh0ID0gIihHKSBTb2xhciBTdGljayBCdWcgKE9mZikiCgkJCWVuZAoJCWVuZCkKCgkJLS0tLSBNaXNjZWxsYW5lb3VzCgoJCS0tIFRlY2ggRGlzYyBIYWNrCgoJCWxvY2FsIFRlY2hEaXNjID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlUZWNoRGlzYy5OYW1lID0gIlRlY2hEaXNjIgoJCVRlY2hEaXNjLlRleHQgPSAiKEcpIFRlY2ggRGlzYyBIYWNrIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBUZWNoRGlzYykKCgkJVGVjaERpc2NFbmFibGVkID0gZmFsc2UKCgkJVGVjaERpc2MuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgaXNHb2xkIG9yIGlzTWFzdGVyIHRoZW4KCQkJCWlmIFRlY2hEaXNjRW5hYmxlZCB0aGVuCgkJCQkJVGVjaERpc2NFbmFibGVkID0gZmFsc2UKCQkJCQlUZWNoRGlzYy5UZXh0ID0gIihHKSBUZWNoIERpc2MgSGFjayAoT2ZmKSIKCQkJCWVsc2UKCQkJCQlUZWNoRGlzY0VuYWJsZWQgPSB0cnVlCgkJCQkJVGVjaERpc2MuVGV4dCA9ICIoRykgVGVjaCBEaXNjIEhhY2sgKE9uKSIKCQkJCWVuZAoJCQllbHNlCgkJCQlUZWNoRGlzYy5UZXh0ID0gIk1lbWJlciBOb3QgR29sZCIKCQkJCXdhaXQoMykKCQkJCVRlY2hEaXNjLlRleHQgPSAiKEcpIFRlY2ggRGlzYyBIYWNrIChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tIEFpbWJvdCB8fCBDdXJyZW50bHkgdW5kZXIgZGV2ZWxvcG1lbnQKCQktLVtbCgkJbG9jYWwgQWltYm90ID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlBaW1ib3QuTmFtZSA9ICJBaW1ib3QiCgkJQWltYm90LlRleHQgPSAiKEcpIEFpbWJvdCAoT2ZmKSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgQWltYm90KQoKCQlmdW5jdGlvbiB0b2dnbGVBaW1ib3QoKQoJCQlpZiAobm90IEFpbWJvdEVuYWJsZWQpIGFuZCAoaXNHb2xkIG9yIGlzTWFzdGVyKSB0aGVuCgkJCQlBaW1ib3RFbmFibGVkID0gdHJ1ZQoJCQkJQWltYm90LlRleHQgPSAiKEcpIEFpbWJvdCAoT24pIgoJCQkJd2hpbGUgQWltYm90RW5hYmxlZCBkbwoJCQkJCUJlZ2luVHJhY2tpbmcoKQoJCQkJZW5kCgkJCWVsc2VpZiBBaW1ib3RFbmFibGVkIGFuZCAoaXNHb2xkIG9yIGlzTWFzdGVyKSB0aGVuCgkJCQlBaW1ib3RFbmFibGVkID0gZmFsc2UKCQkJCUFpbWJvdC5UZXh0ID0gIihHKSBBaW1ib3QgKE9mZikiCgkJCWVsc2VpZiBub3QgKGlzR29sZCBvciBpc01hc3RlcikgdGhlbgoJCQkJQWltYm90LlRleHQgPSAiTWVtYmVyIE5vdCBHb2xkIgoJCQkJd2FpdCgzKQoJCQkJQWltYm90LlRleHQgPSAiKEcpIEFpbWJvdCAoT2ZmKSIKCQkJZW5kCgkJZW5kCgoJCUFpbWJvdC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QodG9nZ2xlQWltYm90KV1dCgoJCS0tIFNoYXJkIENvbG9ycwoKCQlsb2NhbCBSYW5kb21Db2xvcnMgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCVJhbmRvbUNvbG9ycy5OYW1lID0gIlJhbmRvbUNvbG9ycyIKCQlSYW5kb21Db2xvcnMuVGV4dCA9ICJSYW5kb20gU2hhcmQgQ29sb3JzIChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBSYW5kb21Db2xvcnMpCgoJCWxvY2FsIENvbG9yc0xpc3QgPSB7IlJlYWxseSByZWQiLCAiUmVhbGx5IGJsdWUiLCAiTmV3IFllbGxlciIsICJIb3QgcGluayIsICJSb3lhbCBwdXJwbGUiLCAiTGltZSBncmVlbiIsICJEZWVwIG9yYW5nZSIsICJUb290aHBhc3RlIiwgIkluc3RpdHV0aW9uYWwgd2hpdGUifQoJCWxvY2FsIFNoYXJkQ29sb3JFbmFibGVkID0gZmFsc2UKCgkJbG9jYWwgZnVuY3Rpb24gc2hhcmRSYW5kb21pemVyKCkKCQkJZm9yIGksIHYgaW4gcGFpcnMoZ2FtZS5Xb3Jrc3BhY2VbIi5JZ25vcmUiXVsiLlNlcnZlckVmZmVjdHMiXTpHZXRDaGlsZHJlbigpKSBkbwoJCQkJaWYgdi5OYW1lID09ICJTaGFyZCIgYW5kIG5vdCB2OkZpbmRGaXJzdENoaWxkKCJzaGFyZENoYW5nZWQiKSB0aGVuCgkJCQkJdi5Ccmlja0NvbG9yID0gQnJpY2tDb2xvci5uZXcoQ29sb3JzTGlzdFttYXRoLnJhbmRvbSgxLDkpXSkKCQkJCQlsb2NhbCBzaGFyZENoYW5nZWQgPSBJbnN0YW5jZS5uZXcoIkJvb2xWYWx1ZSIpCgkJCQkJc2hhcmRDaGFuZ2VkLk5hbWUgPSAic2hhcmRDaGFuZ2VkIgoJCQkJCXNoYXJkQ2hhbmdlZC5QYXJlbnQgPSBjaGlsZAoJCQkJCXNoYXJkQ2hhbmdlZC5WYWx1ZSA9IHRydWUKCQkJCWVsc2VpZiB2Lk5hbWUgPT0gIlNoYXJkIiBhbmQgdjpGaW5kRmlyc3RDaGlsZCgic2hhcmRDaGFuZ2VkIikuVmFsdWUgdGhlbiBlbmQKCQkJZW5kCgkJZW5kCgoJCVJhbmRvbUNvbG9ycy5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBTaGFyZENvbG9yRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlTaGFyZENvbG9yRW5hYmxlZCA9IHRydWUKCQkJCVJhbmRvbUNvbG9ycy5UZXh0ID0gIlJhbmRvbSBTaGFyZCBDb2xvcnMgKE9uKSIKCQkJCXdoaWxlIFNoYXJkQ29sb3JFbmFibGVkIGRvCgkJCQkJc2hhcmRSYW5kb21pemVyKCkKCQkJCQl3YWl0KC41KQoJCQkJZW5kCgkJCWVsc2UKCQkJCVNoYXJkQ29sb3JFbmFibGVkID0gZmFsc2UKCQkJCVJhbmRvbUNvbG9ycy5UZXh0ID0gIlJhbmRvbSBTaGFyZCBDb2xvcnMgKE9mZikiCgkJCWVuZAkKCQllbmQpCgoJCS0tIEFudGktTGFnCgoJCWxvY2FsIEFudGlMYWcgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCUFudGlMYWcuTmFtZSA9ICJBbnRpTGFnIgoJCUFudGlMYWcuVGV4dCA9ICJBbnRpLUxhZyAoT2ZmKSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgQW50aUxhZykKCgkJQW50aUxhZ0VuYWJsZWQgPSBmYWxzZQoKCQlmdW5jdGlvbiByZW1vdmVMYWcoKQoJCQlmb3IgaSwgdiBpbiBwYWlycyhnYW1lLldvcmtzcGFjZVsnLklnbm9yZSddWycuTG9jYWxFZmZlY3RzJ106R2V0Q2hpbGRyZW4oKSkgZG8KCQkJCWlmIHY6RmluZEZpcnN0Q2hpbGQoIk1lc2giKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiRDEiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiRDIiKSB0aGVuCgkJCQkJaWYgdi5EMS5UZXh0dXJlID09ICJyYnhhc3NldGlkOi8vMjY3MTYyMjY0NiIgdGhlbgoJCQkJCQl2OkRlc3Ryb3koKQoJCQkJCWVuZAoJCQkJZWxzZWlmIHY6RmluZEZpcnN0Q2hpbGQoIkZyb250RGVjYWwiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiQmFja0RlY2FsIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIlNwZWNpYWxNZXNoIikgdGhlbgoJCQkJCWlmIHYuRnJvbnREZWNhbC5UZXh0dXJlID09ICJyYnhhc3NldGlkOi8vOTc5MDA0MjkxIiB0aGVuCgkJCQkJCXY6RGVzdHJveSgpCgkJCQkJZW5kCgkJCQllbHNlaWYgKHYuTmFtZSA9PSAiT3JiaXRhbFN0cmlrZSIpIG9yICh2Lk5hbWUgPT0gIkJvbHRQYXJ0Iikgb3IgKHN0cmluZy5zdWIodi5OYW1lLCAxLCAxMCkgPT0gIlNvdW5kX1RlY2giKSB0aGVuCgkJCQkJdjpEZXN0cm95KCkKCQkJCWVuZAoJCQllbmQKCgkJCWZvciBpLCB2IGluIHBhaXJzKGdhbWUuV29ya3NwYWNlWycuSWdub3JlJ11bJy5BdHRhY2tzJ106R2V0Q2hpbGRyZW4oKSkgZG8KCQkJCWlmIHYuQ29sb3IgPT0gQ29sb3IzLmZyb21SR0IoMjU1LCAwLCAwKSB0aGVuCgkJCQkJaWYgdi5NZXNoLk1lc2hUeXBlID09ICJTcGhlcmUiIHRoZW4KCQkJCQkJd2FpdCgpCgkJCQkJCXY6RGVzdHJveSgpCgkJCQkJZW5kCgkJCQllbmQKCQkJZW5kCgoJCQlmb3IgaSwgdiBpbiBwYWlycyhnYW1lLlBsYXllcnM6R2V0UGxheWVycygpKSBkbwoJCQkJZm9yIF8sIHggaW4gcGFpcnModi5DaGFyYWN0ZXI6R2V0Q2hpbGRyZW4oKSkgZG8KCQkJCQlpZiB4Lk5hbWUgPT0gIkFuZ2VsU3dvcmQiIHRoZW4KCQkJCQkJeDpEZXN0cm95KCkKCQkJCQllbmQKCQkJCWVuZAoJCQllbmQKCQllbmQKCgkJZ2FtZS5Xb3Jrc3BhY2UuRGVzY2VuZGFudEFkZGVkOmNvbm5lY3QoZnVuY3Rpb24odikKCQkJaWYgQW50aUxhZ0VuYWJsZWQgdGhlbgoJCQkJaWYgdjpGaW5kRmlyc3RDaGlsZCgiTWVzaCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJEMSIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJEMiIpIHRoZW4KCQkJCQlpZiB2LkQxLlRleHR1cmUgPT0gInJieGFzc2V0aWQ6Ly8yNjcxNjIyNjQ2IiB0aGVuCgkJCQkJCXdhaXQoKQoJCQkJCQl2OkRlc3Ryb3koKQoJCQkJCWVuZAoJCQkJZWxzZWlmIHYuTmFtZSA9PSAiQW5nZWxTd29yZCIgdGhlbgoJCQkJCXdhaXQoKQoJCQkJCXY6RGVzdHJveSgpCgkJCQllbHNlaWYgdjpGaW5kRmlyc3RDaGlsZCgiRnJvbnREZWNhbCIpIHRoZW4KCQkJCQlpZiB2LkZyb250RGVjYWwuVGV4dHVyZSA9PSAicmJ4YXNzZXRpZDovLzk3OTAwNDI5MSIgdGhlbgoJCQkJCQl3YWl0KCkKCQkJCQkJdjpEZXN0cm95KCkKCQkJCQllbmQKCQkJCWVsc2VpZiB2LkNvbG9yID09IENvbG9yMy5mcm9tUkdCKDI1NSwgMCwgMCkgdGhlbgoJCQkJCWlmIHYuTWVzaC5NZXNoVHlwZSA9PSAiU3BoZXJlIiB0aGVuCgkJCQkJCXdhaXQoKQoJCQkJCQl2OkRlc3Ryb3koKQoJCQkJCWVuZAoJCQkJZWxzZWlmICh2Lk5hbWUgPT0gIk9yYml0YWxTdHJpa2UiKSBvciAodi5OYW1lID09ICJCb2x0UGFydCIpIG9yIChzdHJpbmcuc3ViKHYuTmFtZSwgMSwgMTApID09ICJTb3VuZF9UZWNoIikgdGhlbgoJCQkJCXdhaXQoKQoJCQkJCXY6RGVzdHJveSgpCgkJCQllbHNlaWYgKHYuTmFtZSA9PSAiTGlnaHREaXNjIikgdGhlbgoJCQkJCXY6RGVzdHJveSgpCgkJCQllbmQKCQkJZW5kCgkJZW5kKQoKCQlBbnRpTGFnLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIEFudGlMYWdFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCUFudGlMYWdFbmFibGVkID0gdHJ1ZQoJCQkJQW50aUxhZy5UZXh0ID0gIkFudGktTGFnIChPbikiCgkJCQlyZW1vdmVMYWcoKQoJCQllbHNlCgkJCQlBbnRpTGFnRW5hYmxlZCA9IGZhbHNlCgkJCQlBbnRpTGFnLlRleHQgPSAiQW50aS1MYWcgKE9mZikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gSWdub3JlIFBoeXNpY3MKCgkJbG9jYWwgSWdub3JlUGh5c2ljcyA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJSWdub3JlUGh5c2ljcy5OYW1lID0gImZJZ25vcmVQaHlzaWNzIgoJCUlnbm9yZVBoeXNpY3MuVGV4dCA9ICJJZ25vcmUgUGh5c2ljcyAoT2ZmKSBbWl0iCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIElnbm9yZVBoeXNpY3MpCgoJCUlnbm9yZVBoeXNpY3NFbmFibGVkID0gZmFsc2UKCgkJbG9jYWwgZnVuY3Rpb24gaW5pdGlhbE51bGxpZnlGb3JjZXMoKQoJCQlmb3IgaSwgdiBpbiBwYWlycyhwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQ6R2V0Q2hpbGRyZW4oKSkgZG8KCQkJCWlmIHY6SXNBKCJCb2R5R3lybyIpIHRoZW4KCQkJCQl3YWl0KCkKCQkJCQl2OkRlc3Ryb3koKQoJCQkJZWxzZWlmIHY6SXNBKCJCb2R5UG9zaXRpb24iKSB0aGVuCgkJCQkJd2FpdCgpCgkJCQkJdjpEZXN0cm95KCkKCQkJCWVsc2VpZiB2OklzQSgiQm9keVZlbG9jaXR5IikgdGhlbgoJCQkJCXdhaXQoKQoJCQkJCXY6RGVzdHJveSgpCgkJCQllbHNlaWYgdjpJc0EoIkJvZHlBbmd1bGFyVmVsb2NpdHkiKSB0aGVuCgkJCQkJd2FpdCgpCgkJCQkJdjpEZXN0cm95KCkKCQkJCWVsc2VpZiB2OklzQSgiQm9keUZvcmNlIikgdGhlbgoJCQkJCXdhaXQoKQoJCQkJCXY6RGVzdHJveSgpCgkJCQllbHNlaWYgdjpJc0EoIkJvZHlUaHJ1c3QiKSB0aGVuCgkJCQkJd2FpdCgpCgkJCQkJdjpEZXN0cm95KCkKCQkJCWVsc2VpZiB2OklzQSgiUm9ja2V0UHJvcHVsc2lvbiIpIHRoZW4KCQkJCQl3YWl0KCkKCQkJCQl2OkRlc3Ryb3koKQoJCQkJZW5kCgkJCWVuZAoKCQkJZm9yIGksIHYgaW4gcGFpcnMocGxheWVyLkNoYXJhY3Rlci5GbGlwc0hvbGRlcjpHZXRDaGlsZHJlbigpKSBkbwoJCQkJaWYgdjpJc0EoIkJvZHlHeXJvIikgdGhlbgoJCQkJCXdhaXQoKQoJCQkJCXY6RGVzdHJveSgpCgkJCQllbHNlaWYgdjpJc0EoIkJvZHlQb3NpdGlvbiIpIHRoZW4KCQkJCQl3YWl0KCkKCQkJCQl2OkRlc3Ryb3koKQoJCQkJZWxzZWlmIHY6SXNBKCJCb2R5VmVsb2NpdHkiKSB0aGVuCgkJCQkJd2FpdCgpCgkJCQkJdjpEZXN0cm95KCkKCQkJCWVsc2VpZiB2OklzQSgiQm9keUFuZ3VsYXJWZWxvY2l0eSIpIHRoZW4KCQkJCQl3YWl0KCkKCQkJCQl2OkRlc3Ryb3koKQoJCQkJZWxzZWlmIHY6SXNBKCJCb2R5Rm9yY2UiKSB0aGVuCgkJCQkJd2FpdCgpCgkJCQkJdjpEZXN0cm95KCkKCQkJCWVsc2VpZiB2OklzQSgiQm9keVRocnVzdCIpIHRoZW4KCQkJCQl3YWl0KCkKCQkJCQl2OkRlc3Ryb3koKQoJCQkJZWxzZWlmIHY6SXNBKCJSb2NrZXRQcm9wdWxzaW9uIikgdGhlbgoJCQkJCXdhaXQoKQoJCQkJCXY6RGVzdHJveSgpCgkJCQllbmQKCQkJZW5kCgkJZW5kCgoJCWxvY2FsIGZ1bmN0aW9uIEFmdGVyTnVsbGlmeUZvcmNlcygpCgkJCXBsYXllci5DaGFyYWN0ZXIuRGVzY2VuZGFudEFkZGVkOmNvbm5lY3QoZnVuY3Rpb24odikKCQkJCWlmIElnbm9yZVBoeXNpY3NFbmFibGVkIHRoZW4KCQkJCQlpZiB2OklzQSgiQm9keUd5cm8iKSB0aGVuCgkJCQkJCXdhaXQoKQoJCQkJCQl2OkRlc3Ryb3koKQoJCQkJCWVsc2VpZiB2OklzQSgiQm9keVBvc2l0aW9uIikgdGhlbgoJCQkJCQl3YWl0KCkKCQkJCQkJdjpEZXN0cm95KCkKCQkJCQllbHNlaWYgdjpJc0EoIkJvZHlWZWxvY2l0eSIpIHRoZW4KCQkJCQkJd2FpdCgpCgkJCQkJCXY6RGVzdHJveSgpCgkJCQkJZWxzZWlmIHY6SXNBKCJCb2R5QW5ndWxhclZlbG9jaXR5IikgdGhlbgoJCQkJCQl3YWl0KCkKCQkJCQkJdjpEZXN0cm95KCkKCQkJCQllbHNlaWYgdjpJc0EoIkJvZHlGb3JjZSIpIHRoZW4KCQkJCQkJd2FpdCgpCgkJCQkJCXY6RGVzdHJveSgpCgkJCQkJZWxzZWlmIHY6SXNBKCJCb2R5VGhydXN0IikgdGhlbgoJCQkJCQl3YWl0KCkKCQkJCQkJdjpEZXN0cm95KCkKCQkJCQllbHNlaWYgdjpJc0EoIlJvY2tldFByb3B1bHNpb24iKSB0aGVuCgkJCQkJCXdhaXQoKQoJCQkJCQl2OkRlc3Ryb3koKQoJCQkJCWVuZAoJCQkJZW5kCgkJCWVuZCkKCQllbmQKCgkJZnVuY3Rpb24gYmVnaW5OdWxsaWZ5Rm9yY2VzKCkKCQkJaWYgSWdub3JlUGh5c2ljc0VuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJSWdub3JlUGh5c2ljc0VuYWJsZWQgPSB0cnVlCgkJCQlJZ25vcmVQaHlzaWNzLlRleHQgPSAiSWdub3JlIFBoeXNpY3MgKE9uKSBbWl0iCgkJCQlpbml0aWFsTnVsbGlmeUZvcmNlcygpCgkJCQlBZnRlck51bGxpZnlGb3JjZXMoKQoJCQkJd2hpbGUgSWdub3JlUGh5c2ljc0VuYWJsZWQgZG8KCQkJCQl3YWl0KCkKCQkJCQlpZiBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkLkhlYWx0aCA9PSAwIHRoZW4KCQkJCQkJcmVwZWF0IHdhaXQoKSB1bnRpbCBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkLkhlYWx0aCB+PSAwCgkJCQkJCUFmdGVyTnVsbGlmeUZvcmNlcygpCgkJCQkJZW5kCgkJCQllbmQKCQkJZWxzZQoJCQkJSWdub3JlUGh5c2ljc0VuYWJsZWQgPSBmYWxzZQoJCQkJSWdub3JlUGh5c2ljcy5UZXh0ID0gIklnbm9yZSBQaHlzaWNzIChPZmYpIFtaXSIKCQkJZW5kCgkJZW5kCgoJCUlnbm9yZVBoeXNpY3MuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGJlZ2luTnVsbGlmeUZvcmNlcykKCgkJLS0gQW50aS1HcmF2aXR5CgoJCWxvY2FsIEFudGlHcmF2aXR5ID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlBbnRpR3Jhdml0eS5OYW1lID0gIkFudGlHcmF2aXR5IgoJCUFudGlHcmF2aXR5LlRleHQgPSAiQW50aS1HcmF2aXR5IChPZmYpIFtHXSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgQW50aUdyYXZpdHkpCgoJCUFudGlHcmF2aXR5RW5hYmxlZCA9IGZhbHNlCgoJCWZ1bmN0aW9uIEFudGlHcmF2aXR5RnVuYygpCgkJCWlmIEFudGlHcmF2aXR5RW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlBbnRpR3Jhdml0eUVuYWJsZWQgPSB0cnVlCgkJCQlBbnRpR3Jhdml0eS5UZXh0ID0gIkFudGktR3Jhdml0eSAoT24pIFtHXSIKCQkJCWxvY2FsIEJvZHlGb3JjZSA9IEluc3RhbmNlLm5ldygiQm9keUZvcmNlIikKCQkJCUJvZHlGb3JjZS5QYXJlbnQgPSBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQKCQkJCUJvZHlGb3JjZS5OYW1lID0gIkFudGlHcmF2aXR5Rm9yY2UiCgkJCQlCb2R5Rm9yY2UuRm9yY2UgPSBWZWN0b3IzLm5ldygwLCA1MDAwLCAwKQoJCQllbHNlCgkJCQlBbnRpR3Jhdml0eUVuYWJsZWQgPSBmYWxzZQoJCQkJQW50aUdyYXZpdHkuVGV4dCA9ICJBbnRpLUdyYXZpdHkgKE9mZikgW0ddIgoJCQkJaWYgcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0OkZpbmRGaXJzdENoaWxkKCJBbnRpR3Jhdml0eUZvcmNlIikgdGhlbgoJCQkJCXBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5BbnRpR3Jhdml0eUZvcmNlOkRlc3Ryb3koKQoJCQkJZW5kCgkJCWVuZAoJCWVuZAoKCQlBbnRpR3Jhdml0eS5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoQW50aUdyYXZpdHlGdW5jKQoKCQktLSBDbGljay1UUAoKCQlsb2NhbCBDbGlja1RQID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlDbGlja1RQLk5hbWUgPSAiQ2xpY2tUUCIKCQlDbGlja1RQLlRleHQgPSAiQ2xpY2stVFAgKE9mZikgW0ogdG8gdHAgdG8gbW91c2VdIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBDbGlja1RQKQoKCQlDbGlja1RQRW5hYmxlZCA9IGZhbHNlCgoJCUNsaWNrVFAuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgQ2xpY2tUUEVuYWJsZWQgPT0gdHJ1ZSB0aGVuCgkJCQlDbGlja1RQRW5hYmxlZCA9IGZhbHNlCgkJCQlDbGlja1RQLlRleHQgPSAiQ2xpY2stVFAgKE9mZikgW0ogdG8gQ2xpY2stVFBdIgoJCQllbHNlCgkJCQlDbGlja1RQRW5hYmxlZCA9IHRydWUKCQkJCUNsaWNrVFAuVGV4dCA9ICJDbGljay1UUCAoT24pIFtKIHRvIENsaWNrLVRQXSIKCQkJZW5kCgkJZW5kKQoKCQlmdW5jdGlvbiBjbGlja3RwKHBvc2l0aW9uKQoJCQlpZiBwbGF5ZXIgPT0gbmlsIG9yIHBsYXllci5DaGFyYWN0ZXIgPT0gbmlsIHRoZW4gcmV0dXJuIGVuZAoJCQlwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gQ0ZyYW1lLm5ldyhWZWN0b3IzLm5ldyhwb3NpdGlvbi54LCBwb3NpdGlvbi55ICsgMywgcG9zaXRpb24ueikpCgkJZW5kCgoJCS0tIEZyZWV6ZQoKCQlsb2NhbCBGcmVlemUgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCUZyZWV6ZS5OYW1lID0gIkZyZWV6ZSIKCQlGcmVlemUuVGV4dCA9ICJGcmVlemUgKE9mZikgW0ZdIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBGcmVlemUpCgoJCUZyZWV6ZUVuYWJsZWQgPSBmYWxzZQoKCQlmdW5jdGlvbiBGcmVlemVGdW5jKCkKCQkJaWYgRnJlZXplRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlGcmVlemVFbmFibGVkID0gdHJ1ZQoJCQkJRnJlZXplLlRleHQgPSAiRnJlZXplIChPbikgW0ZdIgoJCQkJcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkFuY2hvcmVkID0gdHJ1ZQoJCQllbHNlCgkJCQlGcmVlemVFbmFibGVkID0gZmFsc2UKCQkJCUZyZWV6ZS5UZXh0ID0gIkZyZWV6ZSAoT2ZmKSBbRl0iCgkJCQlwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQW5jaG9yZWQgPSBmYWxzZQoJCQllbmQKCQllbmQKCgkJRnJlZXplLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChGcmVlemVGdW5jKQoKCQktLSBJbmZpbml0ZSBTcHJpbnQKCgkJbG9jYWwgSW5mU3ByaW50ID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlJbmZTcHJpbnQuTmFtZSA9ICJJbmZTcHJpbnQiCgkJSW5mU3ByaW50LlRleHQgPSAiKEcpIEluZmluaXRlIFNwcmludCAoT2ZmKSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgSW5mU3ByaW50KQoKCQlsb2NhbCBJbmZTcHJpbnRFbmFibGVkID0gZmFsc2UKCgkJbG9jYWwgZnVuY3Rpb24gU3ByaW50UmVtb3RlKCkKCQkJd2hpbGUgd2FpdCguNSkgZG8KCQkJCXJlcGVhdCB3YWl0KCkgdW50aWwgcGxheWVyLkNoYXJhY3RlciB+PSBuaWwKCQkJCWxvY2FsIGFyZ3MgPSB7CgkJCQkJWzFdID0gIlJ1bm5pbmciLAoJCQkJCVsyXSA9IGZhbHNlLAoJCQkJfQoJCQkJZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuUGxheWVyRGF0YTpGaXJlU2VydmVyKHVucGFjayhhcmdzKSkKCQkJZW5kCgkJZW5kCgoJCUluZlNwcmludC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBpc0dvbGQgb3IgaXNNYXN0ZXIgdGhlbgoJCQkJaWYgbm90IEluZlNwcmludEVuYWJsZWQgdGhlbgoJCQkJCUluZlNwcmludEVuYWJsZWQgPSB0cnVlCgkJCQkJSW5mU3ByaW50LlRleHQgPSAiKEcpIEluZmluaXRlIFNwcmludCAoT24pIgoJCQkJCVNwcmludFJlbW90ZSgpCgkJCQllbHNlCgkJCQkJSW5mU3ByaW50RW5hYmxlZCA9IGZhbHNlCgkJCQkJSW5mU3ByaW50LlRleHQgPSAiKEcpIEluZmluaXRlIFNwcmludCAoT2ZmKSIKCQkJCWVuZAkJCQkKCQkJZW5kCgkJZW5kKQoKCQktLSBJbnN0YW50IEV4cGxvc2l2ZSBMZWFwCgoJCWxvY2FsIEV4cGxvc2lvbkhhY2sgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCUV4cGxvc2lvbkhhY2suTmFtZSA9ICJFeHBsb3Npb25IYWNrIgoJCUV4cGxvc2lvbkhhY2suVGV4dCA9ICJJbnN0YW50IExlYXAgU3R1biAoT2ZmKSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgRXhwbG9zaW9uSGFjaykKCgkJbG9jYWwgTGVhcFN0dW5FbmFibGVkID0gZmFsc2UKCgkJRXhwbG9zaW9uSGFjay5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCQlpZiBMZWFwU3R1bkVuYWJsZWQgdGhlbgoJCQkJTGVhcFN0dW5FbmFibGVkID0gZmFsc2UKCQkJCUV4cGxvc2lvbkhhY2suVGV4dCA9ICJJbnN0YW50IExlYXAgU3R1biAoT2ZmKSIKCQkJZWxzZQoJCQkJTGVhcFN0dW5FbmFibGVkID0gdHJ1ZQoJCQkJRXhwbG9zaW9uSGFjay5UZXh0ID0gIkluc3RhbnQgTGVhcCBTdHVuIChPbikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gSW5zdGFudCBSb2NrIEZpc3QKCgkJbG9jYWwgUm9ja0Zpc3RIYWNrID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlSb2NrRmlzdEhhY2suTmFtZSA9ICJSb2NrRmlzdEhhY2siCgkJUm9ja0Zpc3RIYWNrLlRleHQgPSAiSW5zdGFudCBSb2NrIEZpc3QgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFJvY2tGaXN0SGFjaykKCgkJbG9jYWwgSW5zdGFudEZpc3RFbmFibGVkID0gZmFsc2UKCgkJUm9ja0Zpc3RIYWNrLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIEluc3RhbnRGaXN0RW5hYmxlZCB0aGVuCgkJCQlJbnN0YW50RmlzdEVuYWJsZWQgPSBmYWxzZQoJCQkJUm9ja0Zpc3RIYWNrLlRleHQgPSAiSW5zdGFudCBSb2NrIEZpc3QgKE9mZikiCgkJCWVsc2UKCQkJCUluc3RhbnRGaXN0RW5hYmxlZCA9IHRydWUKCQkJCVJvY2tGaXN0SGFjay5UZXh0ID0gIkluc3RhbnQgUm9jayBGaXN0IChPbikiCgkJCWVuZAoJCWVuZCkKCgkJLS0gTG9uZyBGbGFzaAoKCQlsb2NhbCBMRmxhc2ggPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCUxGbGFzaC5OYW1lID0gIkZsYXNoIgoJCUxGbGFzaC5UZXh0ID0gIkxvbmcgRmxhc2ggKE9mZikgW2AgdG8gdXNlXSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgTEZsYXNoKQoKCQlGbGFzaEVuYWJsZWQgPSBmYWxzZQoKCQlmdW5jdGlvbiBsb25nZmxhc2goKQoJCQlsb2NhbCBtb3VzZXBvcyA9IG1vdXNlLkhpdC5wCgkJCWxvY2FsIGFyZ3MgPSB7CgkJCQlbMV0gPSAiU3Rvcm0iLAoJCQkJWzJdID0gIkxpZ2h0bmluZyBGbGFzaCIKCQkJfQoJCQlSU1IuRG9DbGllbnRNYWdpYzpGaXJlU2VydmVyKHVucGFjayhhcmdzKSkKCQkJbG9jYWwgYXJncyA9IHsKCQkJCVsxXSA9ICJTdG9ybSIsCgkJCQlbMl0gPSAiTGlnaHRuaW5nIEZsYXNoIiwKCQkJCVszXSA9IHsKCQkJCQlbIkVuZCJdID0gbW91c2Vwb3MsCgkJCQkJWyJPcmlnaW4iXSA9IHBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLnAKCQkJCX0KCQkJfQoJCQlSU1IuRG9NYWdpYzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCWVuZAoKCQlMRmxhc2guTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgRmxhc2hFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCUZsYXNoRW5hYmxlZCA9IHRydWUKCQkJCUxGbGFzaC5UZXh0ID0gIkxvbmcgRmxhc2ggKE9uKSBbYCB0byB1c2VdIgoJCQllbHNlCgkJCQlGbGFzaEVuYWJsZWQgPSBmYWxzZQoJCQkJTEZsYXNoLlRleHQgPSAiTG9uZyBGbGFzaCAoT2ZmKSBbYCB0byB1c2VdIgoJCQllbmQKCQllbmQpCgoJCS0tIFZpZXcgVGFyZ2V0CgoJCWxvY2FsIFZpZXdUYXJnZXQgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCVZpZXdUYXJnZXQuTmFtZSA9ICJWaWV3VGFyZ2V0IgoJCVZpZXdUYXJnZXQuVGV4dCA9ICJWaWV3IFRhcmdldCAoT2ZmKSBbVl0iCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFZpZXdUYXJnZXQpCgoJCXZpZXdpbmcgPSBmYWxzZQoKCQlmdW5jdGlvbiB2aWV3KCkKCQkJaWYgdGFyZ2V0IH49IHBsYXllci5OYW1lIHRoZW4KCQkJCWlmIHZpZXdpbmcgPT0gZmFsc2UgdGhlbgoJCQkJCXZpZXdpbmcgPSB0cnVlCgkJCQkJZ2FtZS5Xb3Jrc3BhY2UuQ2FtZXJhLkNhbWVyYVN1YmplY3QgPSBnYW1lLlBsYXllcnNbdGFyZ2V0XS5DaGFyYWN0ZXIuSHVtYW5vaWQKCQkJCQlWaWV3VGFyZ2V0LlRleHQgPSAiVmlldyBUYXJnZXQgKE9uKSBbVl0iCgkJCQllbHNlCgkJCQkJdmlld2luZyA9IGZhbHNlCgkJCQkJZ2FtZS5Xb3Jrc3BhY2UuQ2FtZXJhLkNhbWVyYVN1YmplY3QgPSBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkCgkJCQkJVmlld1RhcmdldC5UZXh0ID0gIlZpZXcgVGFyZ2V0IChPZmYpIFtWXSIKCQkJCWVuZAoJCQllbHNlaWYgdmlld2luZyA9PSB0cnVlIHRoZW4gCgkJCQl2aWV3aW5nID0gZmFsc2UKCQkJCWdhbWUuV29ya3NwYWNlLkNhbWVyYS5DYW1lcmFTdWJqZWN0ID0gcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZAoJCQkJVmlld1RhcmdldC5UZXh0ID0gIlZpZXcgVGFyZ2V0IChPZmYpIFtWXSIKCQkJZW5kCgkJZW5kCgoJCVZpZXdUYXJnZXQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KHZpZXcpCgoJCS0tIFRlbGVwb3J0IHRvIFRhcmdldAoKCQlsb2NhbCBUUFRhcmdldCA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJVFBUYXJnZXQuTmFtZSA9ICJUUFRhcmdldCIKCQlUUFRhcmdldC5UZXh0ID0gIlRlbGVwb3J0IFRvIFRhcmdldCAoT2ZmKSBbVV0iCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFRQVGFyZ2V0KQoKCQlUUFRhcmdldEVuYWJsZWQgPSBmYWxzZQoKCQlsb2NhbCBmdW5jdGlvbiBUUFRvVGFyZ2V0KCkKCQkJaWYgVFBUYXJnZXRFbmFibGVkIGFuZCB0YXJnZXQgfj0gcGxheWVyLk5hbWUgdGhlbgoJCQkJcmVwZWF0IHdhaXQoKSB1bnRpbCBnZXRIUlAocGxheWVyLkNoYXJhY3RlcikgYW5kIGdldEhSUChnYW1lLlBsYXllcnNbdGFyZ2V0XS5DaGFyYWN0ZXIpCgoJCQkJZ2V0SFJQKHBsYXllci5DaGFyYWN0ZXIpLkNGcmFtZSA9IGdldEhSUChnYW1lLlBsYXllcnNbdGFyZ2V0XS5DaGFyYWN0ZXIpLkNGcmFtZQoJCQllbmQKCQllbmQKCgkJVFBUYXJnZXQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgVFBUYXJnZXRFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCVRQVGFyZ2V0RW5hYmxlZCA9IHRydWUKCQkJCVRQVGFyZ2V0LlRleHQgPSAiVGVsZXBvcnQgVG8gVGFyZ2V0IChPbikgW1VdIgoJCQllbHNlCgkJCQlUUFRhcmdldEVuYWJsZWQgPSBmYWxzZQoJCQkJVFBUYXJnZXQuVGV4dCA9ICJUZWxlcG9ydCBUbyBUYXJnZXQgKE9mZikgW1VdIgoJCQllbmQKCQllbmQpCgoJCS0tIExvb3AgVGVsZXBvcnQgdG8gVGFyZ2V0CgoJCWxvY2FsIExvb3BUUFRhcmdldCA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJTG9vcFRQVGFyZ2V0Lk5hbWUgPSAiTG9vcFRQVGFyZ2V0IgoJCUxvb3BUUFRhcmdldC5UZXh0ID0gIkxvb3AgVGVsZXBvcnQgVG8gVGFyZ2V0IChPZmYpIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBMb29wVFBUYXJnZXQpCgoJCUxvb3BUUFRhcmdldEVuYWJsZWQgPSBmYWxzZQoKCQlMb29wVFBUYXJnZXQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgTG9vcFRQVGFyZ2V0RW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlMb29wVFBUYXJnZXRFbmFibGVkID0gdHJ1ZQoJCQkJTG9vcFRQVGFyZ2V0LlRleHQgPSAiTG9vcCBUZWxlcG9ydCBUbyBUYXJnZXQgKE9uKSIKCQkJCXdoaWxlIExvb3BUUFRhcmdldEVuYWJsZWQgZG8KCQkJCQl3YWl0KCkKCQkJCQlUUFRvVGFyZ2V0KCkKCQkJCWVuZAoJCQllbHNlCgkJCQlMb29wVFBUYXJnZXRFbmFibGVkID0gZmFsc2UKCQkJCUxvb3BUUFRhcmdldC5UZXh0ID0gIkxvb3AgVGVsZXBvcnQgVG8gVGFyZ2V0IChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tIFN0YW5kYXJkIEVTUAoKCQlsb2NhbCBFU1AgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJCUVTUC5OYW1lID0gIkVTUCIKCQlFU1AuVGV4dCA9ICJFU1AgKE9mZikgW0JdIgoJCXRhYmxlLmluc2VydChidXR0b25zLCBFU1ApCgoJCUVTUEVuYWJsZWQgPSBmYWxzZQoJCS0tRVNQTWF4RGlzdCA9IDc1MAoJCS0tRVNQTURFbmFibGVkID0gdHJ1ZSAtLSBUaGVzZSB0d28gdmFsdWVzIHdpbGwgYmUgZm9yIHRoZSA7ZGVzcCBjb21tYW5kLCBjdXJyZW50bHkgdW5kZXIgY29uc3RydWN0aW9uLgoKCQlsb2NhbCBIb2xkZXIgPSBJbnN0YW5jZS5uZXcoIkZvbGRlciIsIGdhbWUuQ29yZUd1aSkKCQlIb2xkZXIuTmFtZSA9ICJFU1AiCgoJCWxvY2FsIFVwZGF0ZUZ1bmNzID0ge30KCgkJbG9jYWwgQm94ID0gSW5zdGFuY2UubmV3KCJCb3hIYW5kbGVBZG9ybm1lbnQiKQoJCUJveC5OYW1lID0gIm5pbEJveCIKCQlCb3guU2l6ZSA9IFZlY3RvcjMubmV3KDQsIDcsIDQpCgkJQm94LkNvbG9yMyA9IENvbG9yMy5uZXcoMTAwIC8gMjU1LCAxMDAgLyAyNTUsIDEwMCAvIDI1NSkKCQlCb3guVHJhbnNwYXJlbmN5ID0gMC43CgkJQm94LlpJbmRleCA9IDAKCQlCb3guQWx3YXlzT25Ub3AgPSB0cnVlCgkJQm94LlZpc2libGUgPSB0cnVlCgoJCWxvY2FsIE5hbWVUYWcgPSBJbnN0YW5jZS5uZXcoIkJpbGxib2FyZEd1aSIpCgkJTmFtZVRhZy5OYW1lID0gIm5pbE5hbWVUYWciCgkJTmFtZVRhZy5FbmFibGVkID0gdHJ1ZQoJCU5hbWVUYWcuU2l6ZSA9IFVEaW0yLm5ldygwLCAyMDAsIDAsIDUwKQoJCU5hbWVUYWcuQWx3YXlzT25Ub3AgPSB0cnVlCgkJTmFtZVRhZy5TdHVkc09mZnNldCA9IFZlY3RvcjMubmV3KDAsIDMuNiwgMCkKCQktLWlmIEVTUE1ERW5hYmxlZCB0aGVuCgkJCU5hbWVUYWcuTWF4RGlzdGFuY2UgPSA3NTAKCQktLWVsc2UKCQktLQlOYW1lVGFnLk1heERpc3RhbmNlID0gMAoJCS0tZW5kCgoJCWxvY2FsIFRhZyA9IEluc3RhbmNlLm5ldygiVGV4dExhYmVsIiwgTmFtZVRhZykKCQlUYWcuTmFtZSA9ICJUYWciCgkJVGFnLkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSAxCgkJVGFnLlBvc2l0aW9uID0gVURpbTIubmV3KDAsIC01MCwgMCwgMCkKCQlUYWcuU2l6ZSA9IFVEaW0yLm5ldygwLCAzMDAsIDAsIDIwKQoJCVRhZy5UZXh0U2l6ZSA9IDIwCgkJVGFnLlRleHRDb2xvcjMgPSBDb2xvcjMubmV3KDEwMCAvIDI1NSwgMTAwIC8gMjU1LCAxMDAgLyAyNTUpCgkJVGFnLlRleHRTdHJva2VDb2xvcjMgPSBDb2xvcjMubmV3KDAgLyAyNTUsIDAgLyAyNTUsIDAgLyAyNTUpCgkJVGFnLlRleHRTdHJva2VUcmFuc3BhcmVuY3kgPSAwLjQKCQlUYWcuVGV4dCA9ICJOb3QgQXZhaWxhYmxlIgoJCVRhZy5Gb250ID0gRW51bS5Gb250LlJvYm90b01vbm8KCQlUYWcuVGV4dFNjYWxlZCA9IGZhbHNlCgkJVGFnLlRleHRUcmFuc3BhcmVuY3kgPSAwCgoJCWZ1bmN0aW9uIExvYWRDaGFyYWN0ZXIodikKCQkJaWYgdiB+PSBwbGF5ZXIgdGhlbgoJCQkJcmVwZWF0IHdhaXQoKSB1bnRpbCB2LkNoYXJhY3RlciB+PSBuaWwKCQkJCXYuQ2hhcmFjdGVyOldhaXRGb3JDaGlsZCgiSHVtYW5vaWQiKQoJCQkJbG9jYWwgdkhvbGRlciA9IEhvbGRlcjpGaW5kRmlyc3RDaGlsZCh2Lk5hbWUpCgkJCQl2SG9sZGVyOkNsZWFyQWxsQ2hpbGRyZW4oKQoKCQkJCWxvY2FsIGIgPSBCb3g6Q2xvbmUoKQoJCQkJYi5OYW1lID0gdi5OYW1lIC4uICJCb3giCgkJCQliLkFkb3JuZWUgPSB2LkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0CgkJCQliLlBhcmVudCA9IHZIb2xkZXIKCgkJCQlsb2NhbCB0ID0gTmFtZVRhZzpDbG9uZSgpCgkJCQl0Lk5hbWUgPSB2Lk5hbWUgLi4gIk5hbWVUYWciCgkJCQl0LlBhcmVudCA9IHZIb2xkZXIKCQkJCXQuQWRvcm5lZSA9IHYuQ2hhcmFjdGVyOldhaXRGb3JDaGlsZCgiSHVtYW5vaWRSb290UGFydCIsIDUpCgkJCQlpZiBub3QgdC5BZG9ybmVlIHRoZW4KCQkJCQlyZXR1cm4gVW5sb2FkQ2hhcmFjdGVyKHYpCgkJCQllbmQKCQkJCXQuVGFnLlRleHQgPSB2Lk5hbWUKCQkJCXQuRW5hYmxlZCA9IHRydWUKCQkJCXdhaXQoKQoKCQkJCWxvY2FsIGZ1bmN0aW9uIFVwZGF0ZU5hbWVUYWcoKQoJCQkJCWlmIG5vdCBwY2FsbChmdW5jdGlvbigpCgkJCQkJCQktLSB2LkNoYXJhY3Rlci5IdW1hbm9pZC5EaXNwbGF5RGlzdGFuY2VUeXBlID0gRW51bS5IdW1hbm9pZERpc3BsYXlEaXN0YW5jZVR5cGUuTm9uZQoJCQkJCQkJbG9jYWwgbWF4aCA9IG1hdGguY2VpbCh2LkNoYXJhY3Rlci5IdW1hbm9pZC5NYXhIZWFsdGggKiAxMCkKCQkJCQkJCWxvY2FsIGggPSBtYXRoLmNlaWwodi5DaGFyYWN0ZXIuSHVtYW5vaWQuSGVhbHRoICogMTApCgkJCQkJCQl0LlRhZy5UZXh0ID0gdi5OYW1lIC4uICJcbiIgLi4gKChtYXhoIH49IDAgYW5kIHRvc3RyaW5nKG1hdGguY2VpbCgoaCAvIG1heGgpICogMTAwKSkpIG9yICIwIikgLi4gIiUgICIgLi4gdG9zdHJpbmcoaCkgLi4gIi8iIC4uIHRvc3RyaW5nKG1heGgpCgkJCQkJCQlpZiBFU1BFbmFibGVkIHRoZW4KCQkJCQkJCQl0LlRhZy5UZXh0VHJhbnNwYXJlbmN5ID0gMAoJCQkJCQkJCWIuVHJhbnNwYXJlbmN5ID0gMC43CgkJCQkJCQllbHNlCgkJCQkJCQkJdC5UYWcuVGV4dFRyYW5zcGFyZW5jeSA9IDEKCQkJCQkJCQliLlRyYW5zcGFyZW5jeSA9IDEKCQkJCQkJCWVuZAoJCQkJCQkJaWYgaCAvIG1heGggPT0gMSB0aGVuCgkJCQkJCQkJdC5UYWcuVGV4dENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCgkJCQkJCQkJYi5Db2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQoJCQkJCQkJZWxzZWlmIGggLyBtYXhoID09IDAgdGhlbgoJCQkJCQkJCXQuVGFnLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigwLCAwLCAwKQoJCQkJCQkJCWIuQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMCwgMCwgMCkKCQkJCQkJCWVsc2UKCQkJCQkJCQl0LlRhZy5UZXh0Q29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTkyLCAoMTkyICogKGggLyBtYXhoKSksICgxOTIgKiAoaCAvIG1heGgpKSkKCQkJCQkJCQliLkNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDE5MiwgKDE5MiAqIChoIC8gbWF4aCkpLCAoMTkyICogKGggLyBtYXhoKSkpCgkJCQkJCQllbmQKCQkJCQkJZW5kKSB0aGVuCgkJCQkJCVVwZGF0ZUZ1bmNzW3ZdID0gbmlsCgkJCQkJZW5kCgkJCQllbmQKCQkJCVVwZGF0ZU5hbWVUYWcoKQoJCQkJVXBkYXRlRnVuY3Nbdl0gPSBVcGRhdGVOYW1lVGFnCgkJCWVuZAoJCWVuZAoKCQlmdW5jdGlvbiBVbmxvYWRDaGFyYWN0ZXIodikKCQkJbG9jYWwgdkhvbGRlciA9IEhvbGRlcjpGaW5kRmlyc3RDaGlsZCh2Lk5hbWUpCgkJCWlmIHZIb2xkZXIgYW5kICh2SG9sZGVyOkZpbmRGaXJzdENoaWxkKHYuTmFtZSAuLiAiQm94Iikgfj0gbmlsIG9yIHZIb2xkZXI6RmluZEZpcnN0Q2hpbGQodi5OYW1lIC4uICJOYW1lVGFnIikgfj0gbmlsKSB0aGVuCgkJCQl2SG9sZGVyOkNsZWFyQWxsQ2hpbGRyZW4oKQoJCQllbmQKCQllbmQKCgkJZnVuY3Rpb24gTG9hZFBsYXllcih2KQoJCQlpZiB2IH49IHBsYXllciB0aGVuCgkJCQlsb2NhbCB2SG9sZGVyID0gSW5zdGFuY2UubmV3KCJGb2xkZXIiLCBIb2xkZXIpCgkJCQl2SG9sZGVyLk5hbWUgPSB2Lk5hbWUKCQkJCXYuQ2hhcmFjdGVyQWRkZWQ6Q29ubmVjdChmdW5jdGlvbigpCgkJCQkJaWYgRVNQRW5hYmxlZCA9PSB0cnVlIHRoZW4KCQkJCQkJcGNhbGwoTG9hZENoYXJhY3RlciwgdikKCQkJCQllbmQKCQkJCWVuZCkKCQkJCXYuQ2hhcmFjdGVyUmVtb3Zpbmc6Q29ubmVjdChmdW5jdGlvbigpCgkJCQkJcGNhbGwoVW5sb2FkQ2hhcmFjdGVyLCB2KQoJCQkJZW5kKQoJCQkJTG9hZENoYXJhY3Rlcih2KQoJCQllbmQKCQllbmQKCgkJZnVuY3Rpb24gVW5sb2FkUGxheWVyKHYpCgkJCVVubG9hZENoYXJhY3Rlcih2KQoJCQlsb2NhbCB2SG9sZGVyID0gSG9sZGVyOkZpbmRGaXJzdENoaWxkKHYuTmFtZSkKCQkJaWYgdkhvbGRlciB0aGVuCgkJCQl2SG9sZGVyOkRlc3Ryb3koKQoJCQllbmQKCQllbmQKCgkJZm9yIGksIHYgaW4gcGFpcnMocGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCgkJCXNwYXduKGZ1bmN0aW9uKCkgcGNhbGwoTG9hZFBsYXllciwgdikgZW5kKQoJCWVuZAoKCQlwbGF5ZXJzLlBsYXllckFkZGVkOkNvbm5lY3QoZnVuY3Rpb24odikKCQkJcGNhbGwoTG9hZFBsYXllciwgdikKCQllbmQpCgoJCXBsYXllcnMuUGxheWVyUmVtb3Zpbmc6Q29ubmVjdChmdW5jdGlvbih2KQoJCQlwY2FsbChVbmxvYWRQbGF5ZXIsIHYpCgkJZW5kKQoKCQlnYW1lLkl0ZW1DaGFuZ2VkOkNvbm5lY3QoZnVuY3Rpb24oaSkKCQkJaWYgaTpJc0EoIlBsYXllciIpIHRoZW4KCQkJCWlmIEhvbGRlcjpGaW5kRmlyc3RDaGlsZChpLk5hbWUpIHRoZW4KCQkJCQlVbmxvYWRDaGFyYWN0ZXIoaSkKCQkJCQl3YWl0KCkKCQkJCQlMb2FkQ2hhcmFjdGVyKGkpCgkJCQllbmQKCQkJZWxzZWlmIGk6SXNBKCJIdW1hbm9pZCIpIGFuZCBpLlBhcmVudCB0aGVuCgkJCQlsb2NhbCBwID0gcGxheWVyczpHZXRQbGF5ZXJGcm9tQ2hhcmFjdGVyKGkuUGFyZW50KQoJCQkJaWYgcCB+PSBwbGF5ZXIgYW5kIHAgfj0gbmlsIGFuZCBIb2xkZXI6RmluZEZpcnN0Q2hpbGQocC5OYW1lKSB0aGVuCgkJCQkJcGNhbGwoZnVuY3Rpb24oKQoJCQkJCQlVcGRhdGVGdW5jc1twXSgpCgkJCQkJZW5kKQoJCQkJZW5kCgkJCWVuZAoJCWVuZCkKCgkJZnVuY3Rpb24gdG9nZ2xlRVNQKCkKCQkJaWYgRVNQRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlpZiBHRVNQRW5hYmxlZCB0aGVuCgkJCQkJR0VTUEVuYWJsZWQgPSBmYWxzZQoJCQkJCUVTUEVuYWJsZWQgPSB0cnVlCgkJCQkJRVNQR29sZC5UZXh0ID0gIlN0YW5kYXJkIEVTUCBFbmFibGVkIgoJCQkJCXdhaXQoMSkKCQkJCQlFU1BHb2xkLlRleHQgPSAiKEcpIERldGFpbGVkIEVTUCAoT2ZmKSBbTV0iCgkJCQllbHNlCgkJCQkJRVNQRW5hYmxlZCA9IHRydWUKCQkJCWVuZAoJCQkJRVNQLlRleHQgPSAiRVNQIChPbikgW0JdIgoJCQkJZm9yIGksdiBpbiBwYWlycyhwbGF5ZXJzOkdldFBsYXllcnMoKSkgZG8KCQkJCQlzcGF3bihmdW5jdGlvbigpIHBjYWxsKExvYWRQbGF5ZXIsIHYpIGVuZCkKCQkJCWVuZAoJCQllbHNlCgkJCQlFU1BFbmFibGVkID0gZmFsc2UKCQkJCUVTUC5UZXh0ID0gIkVTUCAoT2ZmKSBbQl0iCgkJCQlmb3IgaSwgdiBpbiBwYWlycyhnYW1lLlBsYXllcnM6R2V0UGxheWVycygpKSBkbwoJCQkJCXNwYXduKGZ1bmN0aW9uKCkgcGNhbGwoVW5sb2FkUGxheWVyLCB2KSBlbmQpCgkJCQllbmQKCQkJZW5kCgkJZW5kCgoJCUVTUC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QodG9nZ2xlRVNQKQoKCQktLSBHb2xkIEVTUAoKCQlsb2NhbCBFU1BHb2xkID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlFU1BHb2xkLk5hbWUgPSAiRVNQR29sZCIKCQlFU1BHb2xkLlRleHQgPSAiKEcpIERldGFpbGVkIEVTUCAoT2ZmKSBbTV0iCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIEVTUEdvbGQpCgoJCUdFU1BFbmFibGVkID0gZmFsc2UKCgkJbG9jYWwgR0hvbGRlciA9IEluc3RhbmNlLm5ldygiRm9sZGVyIiwgZ2FtZS5Db3JlR3VpKQoJCUdIb2xkZXIuTmFtZSA9ICJFU1BHb2xkIgoKCQlsb2NhbCBHVXBkYXRlRnVuY3MgPSB7fQoKCQlsb2NhbCBHQm94ID0gSW5zdGFuY2UubmV3KCJCb3hIYW5kbGVBZG9ybm1lbnQiKQoJCUdCb3guTmFtZSA9ICJuaWxCb3hHIgoJCUdCb3guU2l6ZSA9IFZlY3RvcjMubmV3KDQsIDcsIDQpCgkJR0JveC5Db2xvcjMgPSBDb2xvcjMubmV3KDEwMCAvIDI1NSwgMTAwIC8gMjU1LCAxMDAgLyAyNTUpCgkJR0JveC5UcmFuc3BhcmVuY3kgPSAwLjcKCQlHQm94LlpJbmRleCA9IDAKCQlHQm94LkFsd2F5c09uVG9wID0gdHJ1ZQoJCUdCb3guVmlzaWJsZSA9IHRydWUKCgkJbG9jYWwgR05hbWVUYWcgPSBJbnN0YW5jZS5uZXcoIkJpbGxib2FyZEd1aSIpCgkJR05hbWVUYWcuTmFtZSA9ICJuaWxOYW1lVGFnRyIKCQlHTmFtZVRhZy5FbmFibGVkID0gdHJ1ZQoJCUdOYW1lVGFnLlNpemUgPSBVRGltMi5uZXcoMCwgMjAwLCAwLCA1MCkKCQlHTmFtZVRhZy5BbHdheXNPblRvcCA9IHRydWUKCQlHTmFtZVRhZy5TdHVkc09mZnNldCA9IFZlY3RvcjMubmV3KDAsIDMuNiwgMCkKCQktLWlmIEVTUE1ERW5hYmxlZCB0aGVuCgkJCUdOYW1lVGFnLk1heERpc3RhbmNlID0gNzUwCgkJLS1lbHNlCgkJLS0JR05hbWVUYWcuTWF4RGlzdGFuY2UgPSAwCgkJLS1lbmQKCgkJbG9jYWwgR1RhZyA9IEluc3RhbmNlLm5ldygiVGV4dExhYmVsIiwgR05hbWVUYWcpCgkJR1RhZy5OYW1lID0gIkdUYWciCgkJR1RhZy5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5ID0gMQoJCUdUYWcuUG9zaXRpb24gPSBVRGltMi5uZXcoMCwgLTUwLCAwLCAtNSkKCQlHVGFnLlNpemUgPSBVRGltMi5uZXcoMCwgMzAwLCAwLCAyMCkKCQlHVGFnLlRleHRTaXplID0gMjAKCQlHVGFnLlRleHRDb2xvcjMgPSBDb2xvcjMubmV3KDEwMCAvIDI1NSwgMTAwIC8gMjU1LCAxMDAgLyAyNTUpCgkJR1RhZy5UZXh0U3Ryb2tlQ29sb3IzID0gQ29sb3IzLm5ldygwIC8gMjU1LCAwIC8gMjU1LCAwIC8gMjU1KQoJCUdUYWcuVGV4dFN0cm9rZVRyYW5zcGFyZW5jeSA9IDAuNAoJCUdUYWcuVGV4dCA9ICJOb3QgQXZhaWxhYmxlIgoJCUdUYWcuRm9udCA9IEVudW0uRm9udC5Sb2JvdG9Nb25vCgkJR1RhZy5UZXh0U2NhbGVkID0gZmFsc2UKCQlHVGFnLlRleHRUcmFuc3BhcmVuY3kgPSAwCgoJCWZ1bmN0aW9uIEdMb2FkQ2hhcmFjdGVyKHYpCgkJCQoJCQlsb2NhbCB0YmxQbGF5ZXJEYXRhID0ge30KCQkJcmVwZWF0IHdhaXQoKSB1bnRpbCB2LkNoYXJhY3RlciB+PSBuaWwKCQkJUlNSOldhaXRGb3JDaGlsZCgiUGxheWVyRGF0YSIpLk9uQ2xpZW50RXZlbnQ6Q29ubmVjdChmdW5jdGlvbih2LCB0YmxEYXRhKQoJCQkJdGJsUGxheWVyRGF0YVt2XSA9IHRibERhdGEKCQkJZW5kKQoJCQkKCQkJaWYgdiB+PSBwbGF5ZXIgdGhlbgoJCQkJcmVwZWF0IHdhaXQoKSB1bnRpbCB2LkNoYXJhY3RlciB+PSBuaWwKCQkJCXYuQ2hhcmFjdGVyOldhaXRGb3JDaGlsZCgiSHVtYW5vaWQiKQoJCQkJbG9jYWwgdkhvbGRlciA9IEdIb2xkZXI6RmluZEZpcnN0Q2hpbGQodi5OYW1lKQoJCQkJdkhvbGRlcjpDbGVhckFsbENoaWxkcmVuKCkKCgkJCQlsb2NhbCBiID0gR0JveDpDbG9uZSgpCgkJCQliLk5hbWUgPSB2Lk5hbWUgLi4gIkdCb3giCgkJCQliLkFkb3JuZWUgPSB2LkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0CgkJCQliLlBhcmVudCA9IHZIb2xkZXIKCgkJCQlsb2NhbCB0ID0gR05hbWVUYWc6Q2xvbmUoKQoJCQkJdC5OYW1lID0gdi5OYW1lIC4uICJHTmFtZVRhZyIKCQkJCXQuUGFyZW50ID0gdkhvbGRlcgoJCQkJdC5BZG9ybmVlID0gdi5DaGFyYWN0ZXI6V2FpdEZvckNoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IiwgNSkKCQkJCWlmIG5vdCB0LkFkb3JuZWUgdGhlbgoJCQkJCXJldHVybiBHVW5sb2FkQ2hhcmFjdGVyKHYpCgkJCQllbmQKCQkJCXQuR1RhZy5UZXh0ID0gdi5OYW1lCgkJCQl0LkVuYWJsZWQgPSB0cnVlCgkJCQl3YWl0KCkKCgkJCQlsb2NhbCBmdW5jdGlvbiBHVXBkYXRlTmFtZVRhZygpCgkJCQkJaWYgbm90IHBjYWxsKGZ1bmN0aW9uKCkKCQkJCQkJCS0tIHYuQ2hhcmFjdGVyLkh1bWFub2lkLkRpc3BsYXlEaXN0YW5jZVR5cGUgPSBFbnVtLkh1bWFub2lkRGlzcGxheURpc3RhbmNlVHlwZS5Ob25lCgkJCQkJCQlsb2NhbCBtYXhoID0gbWF0aC5jZWlsKHYuQ2hhcmFjdGVyLkh1bWFub2lkLk1heEhlYWx0aCAqIDEwKQoJCQkJCQkJbG9jYWwgaCA9IG1hdGguY2VpbCh2LkNoYXJhY3Rlci5IdW1hbm9pZC5IZWFsdGggKiAxMCkKCQkJCQkJCWxvY2FsIHN0cmggPSAiSDogIiAuLiAobm90KG1heGggPT0gMCkgYW5kIHRvc3RyaW5nKG1hdGguY2VpbCgxMDAgKiBoIC8gbWF4aCkpIG9yIDApIC4uICIlICgiIC4uIHRvc3RyaW5nKGgpIC4uICIvIiAuLiB0b3N0cmluZyhtYXhoKSAuLiAiKSIKCQkJCQkJCS0tCgkJCQkJCQlsb2NhbCBtYXhtID0gdGJsUGxheWVyRGF0YVt2XSBhbmQgbWF0aC5jZWlsKHRibFBsYXllckRhdGFbdl0uTWF4TWFuYSAqIDEwKSBvciAxMDAwCgkJCQkJCQlsb2NhbCBtID0gdGJsUGxheWVyRGF0YVt2XSBhbmQgbWF0aC5jZWlsKHRibFBsYXllckRhdGFbdl0uTWFuYSAqIDEwKSBvciAxMDAwCgkJCQkJCQlsb2NhbCBzdHJtID0gIk06ICIgLi4gKG5vdChtYXhtID09IDApIGFuZCB0b3N0cmluZyhtYXRoLmNlaWwoMTAwICogbSAvIG1heG0pKSBvciAwKSAuLiAiJSAoIiAuLiB0b3N0cmluZyhtKSAuLiAiLyIgLi4gdG9zdHJpbmcobWF4bSkgLi4gIikiCgkJCQkJCQktLQoJCQkJCQkJbG9jYWwgbWF4cyA9IHRibFBsYXllckRhdGFbdl0gYW5kIG1hdGguY2VpbCh0YmxQbGF5ZXJEYXRhW3ZdLk1heFN0YW1pbmEgKiAxMCkgb3IgMTAwMAoJCQkJCQkJbG9jYWwgcyA9IHRibFBsYXllckRhdGFbdl0gYW5kIG1hdGguY2VpbCh0YmxQbGF5ZXJEYXRhW3ZdLlN0YW1pbmEgKiAxMCkgb3IgMTAwMAoJCQkJCQkJbG9jYWwgc3RycyA9ICAiUzogIiAuLiAobm90KG1heHMgPT0gMCkgYW5kIHRvc3RyaW5nKG1hdGguY2VpbCgxMDAgKiBzIC8gbWF4cykpIG9yIDApIC4uICIlICgiIC4uIHRvc3RyaW5nKHMpIC4uICIvIiAuLiB0b3N0cmluZyhtYXhzKSAuLiAiKSIKCgkJCQkJCQl0LkdUYWcuVGV4dCA9IHYuTmFtZSAuLiAoIlxuIiAuLiBzdHJoKSAuLiAoIlxuIiAuLiBzdHJtKSAuLiAoIlxuIiAuLiBzdHJzKQoJCQkJCQkJCgkJCQkJCQlpZiBHRVNQRW5hYmxlZCB0aGVuCgkJCQkJCQkJdC5HVGFnLlRleHRUcmFuc3BhcmVuY3kgPSAwCgkJCQkJCQkJYi5UcmFuc3BhcmVuY3kgPSAwLjcKCQkJCQkJCWVsc2UKCQkJCQkJCQl0LkdUYWcuVGV4dFRyYW5zcGFyZW5jeSA9IDEKCQkJCQkJCQliLlRyYW5zcGFyZW5jeSA9IDEKCQkJCQkJCWVuZAoJCQkJCQkJaWYgaCAvIG1heGggPj0gMC43NSB0aGVuCgkJCQkJCQkJdC5HVGFnLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQig2MiwgMjU1LCA2MikKCQkJCQkJCQliLkNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDE1LCAxNTMsIDY0KQoJCQkJCQkJZWxzZWlmIGggLyBtYXhoIDw9IDAuNzUgYW5kIGggLyBtYXhoID49IDAuNSB0aGVuCgkJCQkJCQkJdC5HVGFnLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgNTUpCgkJCQkJCQkJYi5Db2xvcjMgPSBDb2xvcjMuZnJvbVJHQigxNzksIDEzMiwgMTUpCgkJCQkJCQllbHNlaWYgaCAvIG1heGggPT0gMCB0aGVuCgkJCQkJCQkJdC5HVGFnLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDIsIDIpCgkJCQkJCQkJYi5Db2xvcjMgPSBDb2xvcjMuZnJvbVJHQigxMzQsIDEyLCA2NikKCQkJCQkJCWVsc2UKCQkJCQkJCQl0LkdUYWcuVGV4dENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1NSwgKDE5NiAqIChoIC8gbWF4aCkpLCAoMiAqIChoIC8gbWF4aCkpKQoJCQkJCQkJCWIuQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTc5LCAoMTMyICogKGggLyBtYXhoKSksICgxNSAqIChoIC8gbWF4aCkpKQoJCQkJCQkJZW5kCgkJCQkJCWVuZCkgdGhlbgoJCQkJCQlHVXBkYXRlRnVuY3Nbdl0gPSBuaWwKCQkJCQllbmQKCQkJCWVuZAoJCQkJR1VwZGF0ZU5hbWVUYWcoKQoJCQkJR1VwZGF0ZUZ1bmNzW3ZdID0gR1VwZGF0ZU5hbWVUYWcKCQkJZW5kCgkJZW5kCgoJCWZ1bmN0aW9uIEdVbmxvYWRDaGFyYWN0ZXIodikKCQkJbG9jYWwgdkhvbGRlciA9IEdIb2xkZXI6RmluZEZpcnN0Q2hpbGQodi5OYW1lKQoJCQlpZiB2SG9sZGVyIGFuZCAodkhvbGRlcjpGaW5kRmlyc3RDaGlsZCh2Lk5hbWUgLi4gIkdCb3giKSB+PSBuaWwgb3IgdkhvbGRlcjpGaW5kRmlyc3RDaGlsZCh2Lk5hbWUgLi4gIkdOYW1lVGFnIikgfj0gbmlsKSB0aGVuCgkJCQl2SG9sZGVyOkNsZWFyQWxsQ2hpbGRyZW4oKQoJCQllbmQKCQllbmQKCgkJZnVuY3Rpb24gR0xvYWRQbGF5ZXIodikKCQkJaWYgdiB+PSBwbGF5ZXIgdGhlbgoJCQkJbG9jYWwgdkhvbGRlciA9IEluc3RhbmNlLm5ldygiRm9sZGVyIiwgR0hvbGRlcikKCQkJCXZIb2xkZXIuTmFtZSA9IHYuTmFtZQoJCQkJdi5DaGFyYWN0ZXJBZGRlZDpDb25uZWN0KGZ1bmN0aW9uKCkKCQkJCQlpZiBHRVNQRW5hYmxlZCA9PSB0cnVlIHRoZW4KCQkJCQkJcGNhbGwoR0xvYWRDaGFyYWN0ZXIsIHYpCgkJCQkJZW5kCgkJCQllbmQpCgkJCQl2LkNoYXJhY3RlclJlbW92aW5nOkNvbm5lY3QoZnVuY3Rpb24oKQoJCQkJCXBjYWxsKEdVbmxvYWRDaGFyYWN0ZXIsIHYpCgkJCQllbmQpCgkJCQlHTG9hZENoYXJhY3Rlcih2KQoJCQllbmQKCQllbmQKCgkJZnVuY3Rpb24gR1VubG9hZFBsYXllcih2KQoJCQlHVW5sb2FkQ2hhcmFjdGVyKHYpCgkJCWxvY2FsIHZIb2xkZXIgPSBHSG9sZGVyOkZpbmRGaXJzdENoaWxkKHYuTmFtZSkKCQkJaWYgdkhvbGRlciB0aGVuCgkJCQl2SG9sZGVyOkRlc3Ryb3koKQoJCQllbmQKCQllbmQKCgkJZm9yIGksIHYgaW4gcGFpcnMocGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCgkJCXNwYXduKGZ1bmN0aW9uKCkgcGNhbGwoR0xvYWRQbGF5ZXIsIHYpIGVuZCkKCQllbmQKCgkJcGxheWVycy5QbGF5ZXJBZGRlZDpDb25uZWN0KGZ1bmN0aW9uKHYpCgkJCXBjYWxsKEdMb2FkUGxheWVyLCB2KQoJCWVuZCkKCgkJcGxheWVycy5QbGF5ZXJSZW1vdmluZzpDb25uZWN0KGZ1bmN0aW9uKHYpCgkJCXBjYWxsKEdVbmxvYWRQbGF5ZXIsIHYpCgkJZW5kKQoKCQlnYW1lLkl0ZW1DaGFuZ2VkOkNvbm5lY3QoZnVuY3Rpb24oaSkKCQkJaWYgaTpJc0EoIlBsYXllciIpIHRoZW4KCQkJCWlmIEdIb2xkZXI6RmluZEZpcnN0Q2hpbGQoaS5OYW1lKSB0aGVuCgkJCQkJR1VubG9hZENoYXJhY3RlcihpKQoJCQkJCXdhaXQoKQoJCQkJCUdMb2FkQ2hhcmFjdGVyKGkpCgkJCQllbmQKCQkJZWxzZWlmIGk6SXNBKCJIdW1hbm9pZCIpIGFuZCBpLlBhcmVudCB0aGVuCgkJCQlsb2NhbCBwID0gcGxheWVyczpHZXRQbGF5ZXJGcm9tQ2hhcmFjdGVyKGkuUGFyZW50KQoJCQkJaWYgcCB+PSBwbGF5ZXIgYW5kIHAgfj0gbmlsIGFuZCBHSG9sZGVyOkZpbmRGaXJzdENoaWxkKHAuTmFtZSkgdGhlbgoJCQkJCXBjYWxsKGZ1bmN0aW9uKCkKCQkJCQkJR1VwZGF0ZUZ1bmNzW3BdKCkKCQkJCQllbmQpCgkJCQllbmQKCQkJZW5kCgkJZW5kKQoKCQlmdW5jdGlvbiB0b2dnbGVFU1BHb2xkKCkKCQkJaWYgaXNHb2xkIG9yIGlzTWFzdGVyIHRoZW4KCQkJCWlmIEdFU1BFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCQlpZiBFU1BFbmFibGVkIHRoZW4KCQkJCQkJRVNQRW5hYmxlZCA9IGZhbHNlCgkJCQkJCUdFU1BFbmFibGVkID0gdHJ1ZQoJCQkJCQlFU1AuVGV4dCA9ICJEZXRhaWxlZCBFU1AgRW5hYmxlZCIKCQkJCQkJd2FpdCgxKQoJCQkJCQlFU1AuVGV4dCA9ICJFU1AgKE9mZikgW0JdIgoJCQkJCWVsc2UKCQkJCQkJR0VTUEVuYWJsZWQgPSB0cnVlCgkJCQkJZW5kCgkJCQkJRVNQR29sZC5UZXh0ID0gIihHKSBEZXRhaWxlZCBFU1AgKE9uKSBbTV0iCgkJCQkJZm9yIGksdiBpbiBwYWlycyhwbGF5ZXJzOkdldFBsYXllcnMoKSkgZG8KCQkJCQkJc3Bhd24oZnVuY3Rpb24oKSBwY2FsbChHTG9hZFBsYXllciwgdikgZW5kKQoJCQkJCWVuZAoJCQkJZWxzZQoJCQkJCUdFU1BFbmFibGVkID0gZmFsc2UKCQkJCQlFU1BHb2xkLlRleHQgPSAiKEcpIERldGFpbGVkIEVTUCAoT2ZmKSBbTV0iCgkJCQkJZm9yIGksIHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzOkdldFBsYXllcnMoKSkgZG8KCQkJCQkJc3Bhd24oZnVuY3Rpb24oKSBwY2FsbChHVW5sb2FkUGxheWVyLCB2KSBlbmQpCgkJCQkJZW5kCgkJCQllbmQKCQkJZWxzZQoJCQkJRVNQR29sZC5UZXh0ID0gIk1lbWJlciBOb3QgR29sZCIKCQkJCXdhaXQoMykKCQkJCUVTUEdvbGQuVGV4dCA9ICIoRykgRGV0YWlsZWQgRVNQIChPZmYpIFtNXSIKCQkJZW5kCgkJZW5kCgoJCUVTUEdvbGQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KHRvZ2dsZUVTUEdvbGQpCgoJCS0tIFRQIHRvIERyb3BzCgkJLS0tLSBDdXJyZW50bHkgZGlzYWJsZWQgZHVlIHRvIHRocmVhdGxldmVsCgoJCS0tW1tsb2NhbCBUUFNoYXJkcyA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJVFBTaGFyZHMuTmFtZSA9ICJUUFNoYXJkcyIKCQlUUFNoYXJkcy5UZXh0ID0gIlRlbGVwb3J0IHRvIFNoYXJkcyAoT2ZmKSIKCQl0YWJsZS5pbnNlcnQoYnV0dG9ucywgVFBTaGFyZHMpCgoJCVRQU2hhcmRzRW5hYmxlZCA9IGZhbHNlCQoKCQlsb2NhbCBUUERpYW1vbmRzID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCQlUUERpYW1vbmRzLk5hbWUgPSAiVFBEaWFtb25kcyIKCQlUUERpYW1vbmRzLlRleHQgPSAiVGVsZXBvcnQgdG8gRGlhbW9uZHMgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFRQRGlhbW9uZHMpCgoJCVRQRGlhbW9uZHNFbmFibGVkID0gZmFsc2UKCgkJbG9jYWwgcGxhdGUgPSBJbnN0YW5jZS5uZXcoIlBhcnQiKQoJCXBsYXRlLlBhcmVudCA9IGdhbWUuV29ya3NwYWNlCgkJcGxhdGUuU2l6ZSA9IFZlY3RvcjMubmV3KDQwLCAxLCA0MCkKCQlwbGF0ZS5Qb3NpdGlvbiA9IFZlY3RvcjMubmV3KDAsIDEwMDAwMCwgMCkKCQlwbGF0ZS5BbmNob3JlZCA9IHRydWUKCQlwbGF0ZS5SZWZsZWN0YW5jZSA9IDAuNQoJCXBsYXRlLlRyYW5zcGFyZW5jeSA9IDAuNQoKCQlsb2NhbCB0aW1lID0gMAoJCWxvY2FsIGNhbkludmlzID0gZmFsc2UKCgkJZnVuY3Rpb24gdGVsZXBvcnRUb0Ryb3BzKCkKCQkJbG9jYWwgaHJwID0gcGxheWVyLkNoYXJhY3RlcjpXYWl0Rm9yQ2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKQoJCQlmb3IgaSwgdiBpbiBwYWlycyhnYW1lLldvcmtzcGFjZVsnLklnbm9yZSddWycuU2VydmVyRWZmZWN0cyddOkdldENoaWxkcmVuKCkpIGRvCgkJCQlpZiBUUFNoYXJkc0VuYWJsZWQgYW5kIHYuTmFtZSA9PSAiU2hhcmQiIHRoZW4KCQkJCQlocnAuQ0ZyYW1lID0gdi5DRnJhbWUKCQkJCQl3YWl0KC4yKQoJCQkJZWxzZWlmIFRQRGlhbW9uZHNFbmFibGVkIGFuZCB2Lk5hbWUgPT0gIkRpYW1vbmQiIHRoZW4KCQkJCQlocnAuQ0ZyYW1lID0gdi5DRnJhbWUKCQkJCQl3YWl0KC4yKQoJCQkJZW5kCgoJCQkJaWYgY2FuSW52aXMgdGhlbgoJCQkJCWlmIHRpbWUgPT0gNSB0aGVuIAoJCQkJCQlicmVhawoJCQkJCWVuZAoJCQkJZW5kCgkJCWVuZAoKCQkJaHJwLkNGcmFtZSA9IENGcmFtZS5uZXcoVmVjdG9yMy5uZXcoMCwgMTAwMDAzLCAtMTApKQoKCQkJcmV0dXJuIAoJCWVuZAoKCgkJZnVuY3Rpb24gc3RhcnRUaW1lcigpCgkJCWxvY2FsIGhycCA9IHBsYXllci5DaGFyYWN0ZXI6V2FpdEZvckNoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikKCQkJd2hpbGUgd2FpdCgpIGRvCgkJCQlpZiBUUFNoYXJkc0VuYWJsZWQgb3IgVFBEaWFtb25kc0VuYWJsZWQgdGhlbgoJCQkJCWlmIHRpbWUgfj0gMCB0aGVuIHJldHVybgoJCQkJCWVsc2UKCQkJCQkJaWYgY2FuSW52aXMgdGhlbgoJCQkJCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiU3Bpcml0IiwgIlNwZWN0cmFsIEVtYm9kaW1lbnQiKQoJCQkJCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJTcGlyaXQiLCAiU3BlY3RyYWwgRW1ib2RpbWVudCIpCgkJCQkJCQl3YWl0KDEpCgkJCQkJCQlyZXBlYXQKCQkJCQkJCQlzcGF3bihmdW5jdGlvbigpIHBjYWxsKHRlbGVwb3J0VG9Ecm9wcykgZW5kKQoJCQkJCQkJCXRpbWUgPSB0aW1lICsgMQoJCQkJCQkJCXdhaXQoMSkKCQkJCQkJCXVudGlsIHRpbWUgPT0gNgoJCQkJCQkJaHJwLkNGcmFtZSA9IENGcmFtZS5uZXcoVmVjdG9yMy5uZXcoMCwgMTAwMDAzLCAtMTApKQoJCQkJCQkJd2FpdCg3LjUpCgkJCQkJCQl0aW1lID0gMAoJCQkJCQllbHNlCgkJCQkJCQl3aGlsZSB0cnVlIGRvCgkJCQkJCQkJaWYgbm90IFRQU2hhcmRzRW5hYmxlZCBhbmQgbm90IFRQRGlhbW9uZHNFbmFibGVkIHRoZW4KCQkJCQkJCQkJYnJlYWsKCQkJCQkJCQllbmQKCQkJCQkJCQlzcGF3bihmdW5jdGlvbigpIHBjYWxsKHRlbGVwb3J0VG9Ecm9wcykgZW5kKQoJCQkJCQkJCXdhaXQoMSkKCQkJCQkJCWVuZAoJCQkJCQllbmQKCQkJCQllbmQKCQkJCWVsc2UKCQkJCQlicmVhawoJCQkJZW5kCgkJCWVuZAoKCQkJcmV0dXJuCgkJZW5kCgoJCVRQU2hhcmRzLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIHBsYXllcjpXYWl0Rm9yQ2hpbGQoIlBsYXllckd1aSIpOldhaXRGb3JDaGlsZCgiTWFpbiIpLkNoYXJhY3Rlci5BdmFpbGFibGUuU2Nyb2xsaW5nRnJhbWUuRnJhbWU6RmluZEZpcnN0Q2hpbGQoIlNwZWN0cmFsIEVtYm9kaW1lbnQiKSB0aGVuCgkJCQljYW5JbnZpcyA9IHRydWUKCQkJZW5kCgkJCWlmIFRQU2hhcmRzRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQlUUFNoYXJkc0VuYWJsZWQgPSB0cnVlCgkJCQlUUFNoYXJkcy5UZXh0ID0gIlRlbGVwb3J0IHRvIFNoYXJkcyAoT24pIgoJCQkJc3RhcnRUaW1lcigpCgkJCQl3aGlsZSBUUFNoYXJkc0VuYWJsZWQgZG8KCQkJCQl3YWl0KCkKCQkJCQlpZiBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkLkhlYWx0aCA9PSAwIHRoZW4KCQkJCQkJcmVwZWF0IHdhaXQoKSB1bnRpbCBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkLkhlYWx0aCB+PSAwCgkJCQkJCXN0YXJ0VGltZXIoKQoJCQkJCWVuZAoJCQkJZW5kCgkJCWVsc2UKCQkJCVRQU2hhcmRzRW5hYmxlZCA9IGZhbHNlCgkJCQlUUFNoYXJkcy5UZXh0ID0gIlRlbGVwb3J0IHRvIFNoYXJkcyAoT2ZmKSIKCQkJZW5kCgkJZW5kKQoKCQlUUERpYW1vbmRzLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIHBsYXllcjpXYWl0Rm9yQ2hpbGQoIlBsYXllckd1aSIpOldhaXRGb3JDaGlsZCgiTWFpbiIpLkNoYXJhY3Rlci5BdmFpbGFibGUuU2Nyb2xsaW5nRnJhbWUuRnJhbWU6RmluZEZpcnN0Q2hpbGQoIlNwZWN0cmFsIEVtYm9kaW1lbnQiKSB0aGVuCgkJCQljYW5JbnZpcyA9IHRydWUKCQkJZW5kCgkJCWlmIFRQRGlhbW9uZHNFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCVRQRGlhbW9uZHNFbmFibGVkID0gdHJ1ZQoJCQkJVFBEaWFtb25kcy5UZXh0ID0gIlRlbGVwb3J0IHRvIERpYW1vbmRzIChPbikiCgkJCQlzdGFydFRpbWVyKCkKCQkJCXdoaWxlIFRQRGlhbW9uZHNFbmFibGVkIGRvCgkJCQkJd2FpdCgpCgkJCQkJaWYgcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZC5IZWFsdGggPT0gMCB0aGVuCgkJCQkJCXJlcGVhdCB3YWl0KCkgdW50aWwgcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZC5IZWFsdGggfj0gMAoJCQkJCQlzdGFydFRpbWVyKCkKCQkJCQllbmQKCQkJCWVuZAoJCQllbHNlCgkJCQlUUERpYW1vbmRzRW5hYmxlZCA9IGZhbHNlCgkJCQlUUERpYW1vbmRzLlRleHQgPSAiVGVsZXBvcnQgdG8gRGlhbW9uZHMgKE9mZikiCgkJCWVuZAoJCWVuZCldXQoKCQktLSBSZWpvaW4gU2VydmVyIEZ1bmN0aW9uCgoJCS0tIFRoaXMgd2FzIG9ubHkgcHJlc2VydmVkIGFzIEkgY291bGRuJ3QgdGhpbmsgb2YgYW55IG90aGVyIHBsYWNlIHRvIHB1dCB0aGUgZnVuY3Rpb24gZm9yIG5vdy4KCQktLSBNaWdodCBnZXQgbW92ZWQgbGF0ZXIsIGlkdW5uby4KCQlmdW5jdGlvbiByZWpvaW4oKQoJCQlsb2NhbCB0cyA9IGdhbWU6R2V0U2VydmljZSgiVGVsZXBvcnRTZXJ2aWNlIikKCQkJbG9jYWwgcCA9IHBsYXllcnMuTG9jYWxQbGF5ZXIKCgkJCXRzOlRlbGVwb3J0KGdhbWUuUGxhY2VJZCwgcCkKCQllbmQKCgkJLS0gQWx0IEZhcm1pbmcKCgkJbG9jYWwgQWx0RmFybSA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCgkJQWx0RmFybS5OYW1lID0gIkFsdEZhcm0iCgkJQWx0RmFybS5UZXh0ID0gIihHKSBGYXJtaW5nIE1vZGUgKE9mZikiCgkJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsQWx0RmFybSkKCgkJQWx0RmFybUVuYWJsZWQgPSBmYWxzZQoKCQlsb2NhbCBsb2NzID0ge3s0MjQsIDI1MDAwLCA2MX0sey02NywgMjUwMDAsIDI2MTl9LHstMjYwMCwgMjUwMDAsIDQ4M319CgkJbG9jYWwgaHJwID0gcGxheWVyLkNoYXJhY3RlcjpXYWl0Rm9yQ2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKQoJCWxvY2FsIGh1bSA9IHBsYXllci5DaGFyYWN0ZXI6V2FpdEZvckNoaWxkKCJIdW1hbm9pZCIpCgkJbG9jYWwgbGFzdHBvcwoKCQlsb2NhbCBmdW5jdGlvbiBkb0Zhcm0oKQoJCQlyZXBlYXQgd2FpdCgpIHVudGlsIHBsYXllci5DaGFyYWN0ZXIgfj0gbmlsCgkJCWhycCA9IHBsYXllci5DaGFyYWN0ZXI6V2FpdEZvckNoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikKCQkJaHVtID0gcGxheWVyLkNoYXJhY3RlcjpXYWl0Rm9yQ2hpbGQoIkh1bWFub2lkIikKCQkJaHVtLkhlYWx0aENoYW5nZWQ6Q29ubmVjdChmdW5jdGlvbigpCgkJCQlwbGF5ZXIuQ2hhcmFjdGVyOkJyZWFrSm9pbnRzKCkKCQkJZW5kKQoJCWVuZAoKCQlsb2NhbCBmdW5jdGlvbiBhbHR0cChsaSxscCkKCQkJbG9jYWwgbmV3TG9jID0gVmVjdG9yMy5uZXcodW5wYWNrKGxvY3NbbGldKSkKCQkJaWYgbmV3TG9jIH49IGxwIHRoZW4KCQkJCXBsYXllci5DaGFyYWN0ZXI6TW92ZVRvKG5ld0xvYykKCQkJZW5kCgkJZW5kCgoJCWxvY2FsIGZ1bmN0aW9uIGFsdHBsYXRlKGRlLGxpKQoJCQlpZiBub3QgbGkgdGhlbiBsaSA9IG5pbCBlbmQKCQkJaWYgZGUgPT0gZmFsc2UgdGhlbgoJCQkJbG9jYWwgQWx0UGxhdGUgPSBJbnN0YW5jZS5uZXcoIlBhcnQiKQoJCQkJQWx0UGxhdGUuUGFyZW50ID0gZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKVsiLklnbm9yZSJdCgkJCQlBbHRQbGF0ZS5Qb3NpdGlvbiA9IFZlY3RvcjMubmV3KGxvY3NbbGldWzFdLCAobG9jc1tsaV1bMl0gLSA1KSwgbG9jc1tsaV1bM10pCgkJCQlBbHRQbGF0ZS5TaXplID0gVmVjdG9yMy5uZXcoNSwxLDUpCgkJCQlBbHRQbGF0ZS5BbmNob3JlZCA9IHRydWUKCQkJCUFsdFBsYXRlLlRyYW5zcGFyZW5jeSA9IDEKCQkJZWxzZQoJCQkJaWYgbm90IEFsdFBsYXRlID09IG5pbCB0aGVuCgkJCQkJQWx0UGxhdGU6RGVzdHJveSgpCgkJCQllbmQKCQkJZW5kCgkJZW5kCgoJCUFsdEZhcm0uTW91c2VCdXR0b24xRG93bjpDb25uZWN0KGZ1bmN0aW9uKCkKCQkJaWYgaXNHb2xkIG9yIGlzTWFzdGVyIHRoZW4KCQkJCWlmIEFsdEZhcm1FbmFibGVkIHRoZW4KCQkJCQlwbGF5ZXIuQ2hhcmFjdGVyOk1vdmVUbyhsYXN0cG9zKQoJCQkJCUFsdEZhcm1FbmFibGVkID0gZmFsc2UKCQkJCQlBbHRGYXJtLlRleHQgPSAiKEcpIEZhcm1pbmcgTW9kZSAoT2ZmKSIKCQkJCQlhbHRwbGF0ZSh0cnVlKQoJCQkJCWh1bS5IZWFsdGhDaGFuZ2VkOkRpc2Nvbm5lY3QoKQoJCQkJZWxzZQoJCQkJCUFsdEZhcm1FbmFibGVkID0gdHJ1ZQoJCQkJCUFsdEZhcm0uVGV4dCA9ICIoRykgRmFybWluZyBNb2RlIChPbikiCgkJCQkJbGFzdHBvcyA9IGhycC5wb3NpdGlvbgoJCQkJCWxvY2FsIFRQTG9jYXRpb24gPSBtYXRoLnJhbmRvbSgxLCNsb2NzKQoJCQkJCWFsdHBsYXRlKGZhbHNlLFRQTG9jYXRpb24pCgkJCQkJcmVwZWF0CgkJCQkJCXJlcGVhdCB3YWl0KCkgdW50aWwgcGxheWVyLkNoYXJhY3RlciB+PSBuaWwKCQkJCQkJZG9GYXJtKCkKCQkJCQkJaWYgaHJwLlBvc2l0aW9uIH49IHVucGFjayhsb2NzW1RQTG9jYXRpb25dKSB0aGVuCgkJCQkJCQlhbHR0cChUUExvY2F0aW9uLGxhc3Rwb3MpCgkJCQkJCWVuZAoJCQkJCQl3YWl0KC4xKQoJCQkJCXVudGlsIEFsdEZhcm1FbmFibGVkID09IGZhbHNlCgkJCQllbmQKCQkJZWxzZQoJCQkJQWx0RmFybS5UZXh0ID0gIk1lbWJlciBOb3QgR29sZCIKCQkJCXdhaXQoMykKCQkJCUFsdEZhcm0uVGV4dCA9ICIoRykgRmFybWluZyBNb2RlIChPZmYpIgoJCQllbmQKCQllbmQpCgoJCS0tIEdVSSBUd2Vha2luZwoKCQlmb3IgaSwgdiBpbiBwYWlycyhib3JkZXJzKSBkbwoJCQl2LkFuY2hvclBvaW50ID0gVmVjdG9yMi5uZXcoMSwgMC41KQoJCQl2LkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQoJCQl2LkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSAwLjc1MAoJCQl2LkJvcmRlckNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDAsIDAsIDApCgkJCXYuQm9yZGVyU2l6ZVBpeGVsID0gMAoJCQl2LlNpemVDb25zdHJhaW50ID0gRW51bS5TaXplQ29uc3RyYWludC5SZWxhdGl2ZVlZCgkJCXYuQWN0aXZlID0gdHJ1ZQoJCQl2LlBhcmVudCA9IGViZ3VpCgkJZW5kCgoJCWZvciBpLCB2IGluIHBhaXJzKGJ1dHRvbnMpIGRvCgkJCXYuQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDIzNiwgMjAsIDExNSkKCQkJdi5Cb3JkZXJDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigwLCAwLCAwKQoJCQl2LkJvcmRlclNpemVQaXhlbCA9IDIKCQkJdi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCAwLCAwLCAwKQoJCQl2LlNpemUgPSBVRGltMi5uZXcoMCwgMCwgMCwgMCkKCQkJdi5Gb250ID0gRW51bS5Gb250LlRpdGlsbGl1bVdlYgoJCQl2LkZvbnRGYWNlLldlaWdodCA9IEVudW0uRm9udFdlaWdodC5IZWF2eQoJCQl2LlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTEsIDI1MSwgMjU1KQoJCQl2LlRleHRTY2FsZWQgPSB0cnVlCgkJCXYuVGV4dFNpemUgPSAxNC4wMDAKCQkJdi5UZXh0V3JhcHBlZCA9IHRydWUKCQkJdi5MYXlvdXRPcmRlciA9IGkKCQkJdi5QYXJlbnQgPSBtYWluZnJhbWUKCQllbmQKCgkJLS0gY29tbWFuZEJveAoKCQl0YXJnZXQgPSBwbGF5ZXIuTmFtZQoJCXRhcmdldFNldHRpbmcgPSAic2VsZWN0IgoJCWxvb3BpbmcgPSBmYWxzZQoJCVNtYXJ0QXR0YWNrID0gdHJ1ZQoJCUhlYWxTZXR0aW5nID0gMQoJCXN0dW5FbmFibGVkID0gdHJ1ZQoJCWxvY2FsIGJ1dHRvbkhlaWdodCA9IDMwCgkJbG9jYWwgYnV0dG9uR2FwID0gNwoKCQlSU1IgPSBnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlOldhaXRGb3JDaGlsZCgiUmVtb3RlcyIpCgoJCWxvY2FsIHN0dW5Db25uZWN0aW9uID0gZ2V0Y29ubmVjdGlvbnMoUlNSOldhaXRGb3JDaGlsZCgiQ29tYmF0IikuT25DbGllbnRFdmVudCkKCQlsb2NhbCBsYWdnZXJzID0gewoJCQkiMUIwRjk4QkUtRTEwQi00Njc0LTlGQjQtNkY2NTE3MUEzNDdGIiwgLS0gbG9nCgkJCSI2QTMzMTA0QS0xRkU5LTRGQTgtOTM3NC1DMTY0RDI4RjgzNTEiLCAtLSBicmlhbgoJCQkiODM3NzM2QUEtMDE5Mi00N0Y5LTk4QzUtOEREMERGMThGRTc0IiwgLS0gamV0CgkJCSI1NUMyMDQ5RC1DNkJELTQ1MjMtODgwNC1ENTM5QzM4NzkyQTMiLCAtLSBwZW50YXJhY3QKCQkJIjk0NjRCNjhBLTM2M0MtNDFGOC1CQjdELUI0QkVEOEFDMDk2MyIsIC0tIHZhc3RvcmlvCgkJCS0tICI4MzBCRDRFOS01RUJFLTRBMTMtQjQ3Qi05QkU2MDA4M0I4MzYiLCAtLSBsb2xvawoJCQktLSAiNjNCMzlFMjctREExQi00ODJFLUIyOEMtNkEzMzk4Qzk1QTRDIiwgLS0gYWxleAoJCQkiODQ2QTY1RTItRTk2My00QTBBLTkwMjUtRTlCOEU5NTg5NjEzIiwgLS0gYnJhbQoJCQkiM0YxNjg0NDAtQTVDMC00RjcxLThFNTEtM0ZERjkwMjVGNTFCIiwgLS0gdG9tZWsKCQkJIjZBOTcwNTJBLTYzNEUtNDdFMS04RDkwLTVFRTNDQTRBOTZGQSIsIC0tIHJhdmVuCgkJCSJGNTk3NUQ3RC0yQUM1LTQ0QUEtODAxRi04Mjc2MjVENkQ3NjMiLCAtLSBhbGV4aWEKCQkJIjQ4Mjg3MTgyLTlFNzctNEY5Ny1BNjU0LTk3MDY5RUQ4MTY2QyIsIC0tIGplc3MKCQkJIjc0ODlDQkFFLTc5ODYtNDVBOS1CRTQwLUEyMThFRENEMEYwMSIgLS0gY2VwaGFzCgkJfQoKCQlsb2NhbCBhbGxvd2VkVG9Ecm9wRlBTID0gdHJ1ZQoKCQlmb3IgaSwgdiBpbiBwYWlycyhsYWdnZXJzKSBkbwoJCQl2ID0gdjpsb3dlcigpCgoJCQlpZiAodiA9PSBjbGllbnRpZCkgdGhlbgoJCQkJYWxsb3dlZFRvRHJvcEZQUyA9IHRydWUKCQkJZW5kCgkJZW5kCgoJCWZ1bmN0aW9uIGdldEhSUChjaHIpCgkJCWxvY2FsIEhSUCA9IGNocjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIG9yIGNocjpGaW5kRmlyc3RDaGlsZCgiVG9yc28iKSBvciBjaHI6RmluZEZpcnN0Q2hpbGQoIlVwcGVyVG9yc28iKQoJCQlyZXR1cm4gSFJQCgkJZW5kCgoJCWZ1bmN0aW9uIGdldEhVTShjaHIpCgkJCWxvY2FsIEhVTSA9IGNocjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKQoJCQlyZXR1cm4gSFVNCgkJZW5kCgoJCWxvY2FsIGZ1bmN0aW9uIHJlc3Bhd24ocGxyKQoJCQlsb2NhbCBjaHIgPSBwbHIuQ2hhcmFjdGVyCgoJCQlpZiAoY2hyOkZpbmRGaXJzdENoaWxkT2ZDbGFzcygiSHVtYW5vaWQiKSkgdGhlbiBjaHI6RmluZEZpcnN0Q2hpbGRPZkNsYXNzKCJIdW1hbm9pZCIpOkNoYW5nZVN0YXRlKDE1KSBlbmQKCQkJY2hyOkNsZWFyQWxsQ2hpbGRyZW4oKQoKCQkJbG9jYWwgbmV3Y2hyID0gSW5zdGFuY2UubmV3KCJNb2RlbCIpCgkJCW5ld2Noci5QYXJlbnQgPSB3b3Jrc3BhY2UKCQkJcGxyLkNoYXJhY3RlciA9IG5ld2NocgoKCQkJd2FpdCgpCgoJCQlwbHIuQ2hhcmFjdGVyID0gY2hyCgkJCW5ld2NocjpEZXN0cm95KCkKCQllbmQKCgkJbG9jYWwgZnVuY3Rpb24gcmVmcmVzaChwbHIpCgkJCWxvY2FsIGh1bSA9IHBsci5DaGFyYWN0ZXIgYW5kIHBsci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGRPZkNsYXNzKCJIdW1hbm9pZCIsIHRydWUpCgkJCWxvY2FsIHBvcyA9IGh1bSBhbmQgaHVtLlJvb3RQYXJ0IGFuZCBodW0uUm9vdFBhcnQuQ0ZyYW1lCgkJCWxvY2FsIHBvczEgPSB3b3Jrc3BhY2UuQ3VycmVudENhbWVyYS5DRnJhbWUKCgkJCXJlc3Bhd24ocGxyKQoKCQkJc3Bhd24oZnVuY3Rpb24oKQoJCQkJcGxyLkNoYXJhY3RlckFkZGVkOldhaXQoKTpXYWl0Rm9yQ2hpbGQoIkh1bWFub2lkIikuUm9vdFBhcnQuQ0ZyYW1lLCB3b3Jrc3BhY2UuQ3VycmVudENhbWVyYS5DRnJhbWUgPSBwb3MsIHdhaXQoKSBhbmQgcG9zMQoJCQllbmQpCgkJZW5kCgoJCWxvY2FsIGZ1bmN0aW9uIHNwbGl0QXJncyhjb21tYW5kKQoJCQljb21tYW5kID0gc3RyaW5nLmdzdWIoY29tbWFuZCwgIiwiLCAiICIpCgkJCWNvbW1hbmQgPSBzdHJpbmcuc3BsaXQoY29tbWFuZCwgIiAiKQoKCQkJZm9yIGksIHYgaW4gaXBhaXJzKGNvbW1hbmQpIGRvCgkJCQl2ID0gc3RyaW5nLmdzdWIodiwgIiVzKyIsICIiKQoJCQkJaWYgdiA9PSAiIiB0aGVuCgkJCQkJdGFibGUucmVtb3ZlKGNvbW1hbmQsIGkpCgkJCQllbmQKCQkJZW5kCgoJCQlyZXR1cm4gY29tbWFuZAoJCWVuZAoKCQlsb2NhbCBmdW5jdGlvbiBmaW5kUGxheWVyKHRleHQpCgkJCWxvY2FsIHBsYXllcnMgPSBnYW1lLlBsYXllcnM6R2V0UGxheWVycygpCgkJCWxvY2FsIG1hdGNoZXMgPSB7fQoKCQkJZm9yIGksIFBsYXllciBpbiBpcGFpcnMocGxheWVycykgZG8KCQkJCWxvY2FsIG5hbWUgPSBQbGF5ZXIuTmFtZQoJCQkJdGV4dCA9IHN0cmluZy5sb3dlcih0ZXh0KQoJCQkJbmFtZSA9IHN0cmluZy5sb3dlcihuYW1lKQoKCQkJCWxvY2FsIG1hdGNoID0gc3RyaW5nLmZpbmQobmFtZSwgdGV4dCkKCgkJCQlpZiBtYXRjaCB0aGVuCgkJCQkJdGFibGUuaW5zZXJ0KG1hdGNoZXMsIFBsYXllci5OYW1lKQoJCQkJZW5kCgkJCWVuZAoKCQkJcmV0dXJuIG1hdGNoZXMKCQllbmQKCgkJbG9jYWwgZHJ1Z3NFbmFibGVkID0gZmFsc2UKCQlsb2NhbCBjb2xvcnNFbmFibGVkID0gZmFsc2UKCQlsb2NhbCBibGFja2Nhc3RFbmFibGVkID0gZmFsc2UKCQlsb2NhbCBjb2xvckV4Y2x1ZGUgPSB7IkhlYWQiLCJUb3JzbyIsIkxlZnQgQXJtIiwiTGVmdCBMZWciLCJSaWdodCBBcm0iLCJSaWdodCBMZWciLCJTaGFyZCIsIkRpYW1vbmQifQoKCQktLVtbOTgvMjU1LCAzNy8yNTUsIDIwOS8yNTVdXQoJCWxvY2FsIGNvbG9yMQoJCWxvY2FsIGNvbG9yMgoJCWxvY2FsIGNvbG9yMwoKCQlsb2NhbCBmdW5jdGlvbiB0ZXJtRUJHdWkoKQoJCQlidXR0b25zbWFpbjpUd2VlblBvc2l0aW9uKAoJCQkJVURpbTIubmV3KDEuMjUsIDAsIDAuNjUsIDApLAoJCQkJIkluIiwKCQkJCSJTaW5lIiwKCQkJCS41LAoJCQkJdHJ1ZQoJCQkpCgkJCWNvbW1hbmRzbWFpbjpUd2VlblBvc2l0aW9uKAoJCQkJVURpbTIubmV3KDEuMjUsIDAsIDAuNDUsIDApLAoJCQkJIkluIiwKCQkJCSJTaW5lIiwKCQkJCS41LAoJCQkJdHJ1ZQoJCQkpCgkJCXdhaXQoMSkKCQkJdGFyZ2V0ID0gcGxheWVyLk5hbWUJCQkKCQkJZm9yIGksIHYgaW4gcGFpcnMocGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCgkJCQlwY2FsbChVbmxvYWRDaGFyYWN0ZXIsIHYpCgkJCQlwY2FsbChVbmxvYWRQbGF5ZXIsIHYpCgkJCQlwY2FsbChHVW5sb2FkQ2hhcmFjdGVyLCB2KQoJCQkJcGNhbGwoR1VubG9hZFBsYXllciwgdikKCQkJZW5kCgkJCUVTUEVuYWJsZWQgPSBmYWxzZQoJCQlHRVNQRW5hYmxlZCA9IGZhbHNlCgkJCWViZ3VpOkRlc3Ryb3koKQoJCWVuZAoKCQlsb2NhbCBmdW5jdGlvbiBpbnB1dEJveCgpCgkJCWxvY2FsIHRleHQgPSBjb21tYW5kQm94LlRleHQKCQkJd2FpdCgpCgkJCWNvbW1hbmRCb3guVGV4dCA9ICIiCgoJCQlsb2NhbCBwcmVmaXggPSAiOyIKCQkJaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCAxKSA9PSAocHJlZml4KSB0aGVuCgkJCQl0ZXh0ID0gc3RyaW5nLmxvd2VyKHRleHQpCgoJCQkJLS1bW2lmIHN0cmluZy5zdWIodGV4dCwgMSwgMykgPT0gKHByZWZpeCAuLiAicmUiKSB0aGVuCgkJCQkJcmVmcmVzaChwbGF5ZXIpXV0KCQkJCWlmIHN0cmluZy5zdWIodGV4dCwgMSwgMykgPT0gKHByZWZpeCAuLiAidHAiKSB0aGVuCgkJCQkJbG9jYWwgdGVsZXBvcnR0bwoJCQkJCWxvY2FsIHRwbmFtZQoJCQkJCWxvY2FsIHBsYWNlID0gc3RyaW5nLnN1Yih0ZXh0LCA1KQoJCQkJCWxvY2FsIHBsYWNlcyA9IHsKCQkJCQkJNTY2Mzk5MjQ0LAoJCQkJCQkyNTY5NjI1ODA5LAoJCQkJCQk1NzAxNTgwODEsCgkJCQkJCTUzNzYwMDIwNCwKCQkJCQkJNTIwNTY4MjQwLAoJCQkJCQk1NTQ5NTU1NjAsCgkJCQkJCTYwMjA0ODU1MCwKCQkJCQkJNTc1NDU2NjQ2LAoJCQkJCQkxNzEzOTg2MTEyLAoJCQkJCQkxMjQzNjE1NjEyLAoJCQkJCQk2MzgwNjUzMDIsCgkJCQkJCTYzNDI0MDgyNiwKCQkJCQkJNjMzMDQyNzMxCgkJCQkJfQoKCQkJCQlpZiBwbGFjZSA9PSAic3RhbmRhcmRsb3ciIG9yIHBsYWNlID09ICI1NjYzOTkyNDQiIHRoZW4KCQkJCQkJdGVsZXBvcnR0byA9IHBsYWNlc1sxXQoJCQkJCQl0cG5hbWUgPSAiTG93YmllIFN0YW5kYXJkIgoJCQkJCWVsc2VpZiBwbGFjZSA9PSAic3RhbmRhcmQ0MCIgb3IgcGxhY2UgPT0gIjI1Njk2MjU4MDkiIHRoZW4KCQkJCQkJdGVsZXBvcnR0byA9IHBsYWNlc1syXQoJCQkJCQl0cG5hbWUgPSAiU3RhbmRhcmQiCgkJCQkJZWxzZWlmIHBsYWNlID09ICJsaWdodCIgb3IgcGxhY2UgPT0gIjU3MDE1ODA4MSIgdGhlbgoJCQkJCQl0ZWxlcG9ydHRvID0gcGxhY2VzWzNdCgkJCQkJCXRwbmFtZSA9ICJMaWdodCIKCQkJCQllbHNlaWYgcGxhY2UgPT0gImZpcmUiIG9yIHBsYWNlID09ICI1Mzc2MDAyMDQiIHRoZW4KCQkJCQkJdGVsZXBvcnR0byA9IHBsYWNlc1s0XQoJCQkJCQl0cG5hbWUgPSAiRmlyZSIKCQkJCQllbHNlaWYgcGxhY2UgPT0gIndhdGVyIiBvciBwbGFjZSA9PSAiNTIwNTY4MjQwIiB0aGVuCgkJCQkJCXRlbGVwb3J0dG8gPSBwbGFjZXNbNV0KCQkJCQkJdHBuYW1lID0gIldhdGVyIgoJCQkJCWVsc2VpZiBwbGFjZSA9PSAiZ3Jhc3MiIG9yIHBsYWNlID09ICI1NTQ5NTU1NjAiIHRoZW4KCQkJCQkJdGVsZXBvcnR0byA9IHBsYWNlc1s2XQoJCQkJCQl0cG5hbWUgPSAiR3Jhc3MiCgkJCQkJZWxzZWlmIHBsYWNlID09ICJoZWF2ZW4iIG9yIHBsYWNlID09ICI2MDIwNDg1NTAiIHRoZW4KCQkJCQkJdGVsZXBvcnR0byA9IHBsYWNlc1s3XQoJCQkJCQl0cG5hbWUgPSAiSGVhdmVuIgoJCQkJCWVsc2VpZiBwbGFjZSA9PSAibWluaWxvdmFuaWEiIG9yIHBsYWNlID09ICJzYW5zIiBvciBwbGFjZSA9PSAiNTc1NDU2NjQ2IiB0aGVuCgkJCQkJCXRlbGVwb3J0dG8gPSBwbGFjZXNbOF0KCQkJCQkJdHBuYW1lID0gIk1pbmlsb3ZhbmlhIgoJCQkJCWVsc2VpZiBwbGFjZSA9PSAiZGVmYXVsdCIgb3IgcGxhY2UgPT0gInRvdXJuYW1lbnQiIG9yIHBsYWNlID09ICIxNzEzOTg2MTEyIiB0aGVuCgkJCQkJCXRlbGVwb3J0dG8gPSBwbGFjZXNbOV0KCQkJCQkJdHBuYW1lID0gIlRvdXJuYW1lbnQiCgkJCQkJZWxzZWlmIHBsYWNlID09ICJzdXJ2aXZhbCIgb3IgcGxhY2UgPT0gIjEyNDM2MTU2MTIiIHRoZW4KCQkJCQkJdGVsZXBvcnR0byA9IHBsYWNlc1sxMF0KCQkJCQkJdHBuYW1lID0gIlN1cnZpdmFsIgoJCQkJCWVsc2VpZiBwbGFjZSA9PSAibWVnYXN0YW5kYXJkIiBvciBwbGFjZSA9PSAic3RhbmRhcmRtZWdhIiBvciBwbGFjZSA9PSAiNjM4MDY1MzAyIiB0aGVuCgkJCQkJCXRlbGVwb3J0dG8gPSBwbGFjZXNbMTFdCgkJCQkJCXRwbmFtZSA9ICJNZWdhIFN0YW5kYXJkIgoJCQkJCWVsc2VpZiBwbGFjZSA9PSAibWVnYWZpcmUiIG9yIHBsYWNlID09ICJmaXJlbWVnYSIgb3IgcGxhY2UgPT0gIjYzNDI0MDgyNiIgdGhlbgoJCQkJCQl0ZWxlcG9ydHRvID0gcGxhY2VzWzExXQoJCQkJCQl0cG5hbWUgPSAiTWVnYSBGaXJlIgoJCQkJCWVsc2VpZiBwbGFjZSA9PSAibWVnYWdyYXNzIiBvciBwbGFjZSA9PSAiZ3Jhc3NtZWdhIiBvciBwbGFjZSA9PSAiNjMzMDQyNzMxIiB0aGVuCgkJCQkJCXRlbGVwb3J0dG8gPSBwbGFjZXNbMTNdCgkJCQkJCXRwbmFtZSA9ICJNZWdhIEdyYXNzIgoJCQkJCWVsc2UKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlRoZSBwbGFjZSB3YXMgaW5jb3JyZWN0bHkgc3BlY2lmaWVkISIKCQkJCQllbmQKCgkJCQkJaWYgdGVsZXBvcnR0byB0aGVuCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJUZWxlcG9ydGluZyB0byAiIC4uIHRwbmFtZSAuLiAiISIKCQkJCQkJZ2FtZTpHZXRTZXJ2aWNlKCJUZWxlcG9ydFNlcnZpY2UiKTpUZWxlcG9ydCh0ZWxlcG9ydHRvKQoJCQkJCWVuZAoJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgOCkgPT0gKHByZWZpeCAuLiAiZGVjbHV0dGVyIikgdGhlbgoJCQkJCXBsYXllci5QbGF5ZXJHdWkuTWFpbi5GcmFtZTEuU2l6ZSA9IFVEaW0yLm5ldygwLjM3NSwgMCwgMC4zNzUsIDApCgkJCQkJcGxheWVyLlBsYXllckd1aS5NYWluLkZyYW1lMS5JbWFnZVRyYW5zcGFyZW5jeSA9IDEKCQkJCQlwbGF5ZXIuUGxheWVyR3VpLk1haW4uQ2hhcmFjdGVyLkltYWdlVHJhbnNwYXJlbmN5ID0gMQoJCQkJCXBsYXllci5QbGF5ZXJHdWkuTWFpbi5Cb29rLkltYWdlVHJhbnNwYXJlbmN5ID0gMQoJCQkJCXBsYXllci5QbGF5ZXJHdWkuTWFpbi5TaG9wLkltYWdlVHJhbnNwYXJlbmN5ID0gMQoJCQkJCXBsYXllci5QbGF5ZXJHdWkuTWFpbi5Ta2lsbHNCYXIuU2l6ZSA9IFVEaW0yLm5ldygwLjM3NSwgMCwgMC4zNzUsIDApCgkJCQkJcGxheWVyLlBsYXllckd1aS5NYWluLlNraWxsc0Jhci5JbWFnZVRyYW5zcGFyZW5jeSA9IDEKCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDUpID09IChwcmVmaXggLi4gInJhaW4iKSB0aGVuCgkJCQkJbG9jYWwgY3VycmVudENBTSA9IHdvcmtzcGFjZS5DdXJyZW50Q2FtZXJhCgkJCQkJbG9jYWwgcmFpblNvdW5kID0gSW5zdGFuY2UubmV3KCJTb3VuZCIpCgkJCQkJcmFpblNvdW5kLkxvb3BlZCA9IHRydWUKCQkJCQlyYWluU291bmQuU291bmRJZCA9ICJyYnhhc3NldGlkOi8vMjgzMTY0NTkzIgoJCQkJCXJhaW5Tb3VuZC5Wb2x1bWUgPSAxCgkJCQkJcmFpblNvdW5kLlBhcmVudCA9IHdvcmtzcGFjZQoJCQkJCXJhaW5Tb3VuZDpQbGF5KCkKCgkJCQkJbG9jYWwgcmFpblBhcnQgPSBJbnN0YW5jZS5uZXcoIlBhcnQiKQoJCQkJCXJhaW5QYXJ0LlNpemUgPSBWZWN0b3IzLm5ldygzMDAsIDMwMCwgMzAwKQoJCQkJCXJhaW5QYXJ0LlRyYW5zcGFyZW5jeSA9IDEKCQkJCQlyYWluUGFydC5BbmNob3JlZCA9IHRydWUKCQkJCQlyYWluUGFydC5DYW5Db2xsaWRlID0gZmFsc2UKCgkJCQkJbG9jYWwgcmFpbkVmZmVjdCA9IGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKTpXYWl0Rm9yQ2hpbGQoIkVmZmVjdHMiKTpXYWl0Rm9yQ2hpbGQoIlJhaW4iKQoJCQkJCXJhaW5FZmZlY3QuUmF0ZSA9IHJhaW5QYXJ0LlNpemUubWFnbml0dWRlCgkJCQkJcmFpbkVmZmVjdC5QYXJlbnQgPSByYWluUGFydAoKCQkJCQlsb2NhbCBpZ25vcmUgPSB3b3Jrc3BhY2U6V2FpdEZvckNoaWxkKCIuSWdub3JlIikKCQkJCQlyYWluUGFydC5QYXJlbnQgPSBpZ25vcmU6V2FpdEZvckNoaWxkKCIuU2VydmVyRWZmZWN0cyIpCgoJCQkJCWxvY2FsIGZvdiA9IDIgKiBtYXRoLnRhbihtYXRoLnJhZChjdXJyZW50Q0FNLkZpZWxkT2ZWaWV3KSAvIDIpCgkJCQkJbG9jYWwgbmV3UmF5ID0gUmF5Lm5ldwoJCQkJCWxvY2FsIGhlaWdodCA9IFZlY3RvcjMubmV3KDAsIDUwLCAwKQoJCQkJCWxvY2FsIGRlcHRoID0gQ0ZyYW1lLm5ldygwLCBmb3YgKiA1MCwgLTYwKQoKCQkJCQlnYW1lOkdldFNlcnZpY2UoIlJ1blNlcnZpY2UiKTpCaW5kVG9SZW5kZXJTdGVwKCJSYWluIiwgRW51bS5SZW5kZXJQcmlvcml0eS5DYW1lcmEuVmFsdWUsIGZ1bmN0aW9uKCkKCQkJCQkJbG9jYWwgcmMgPSB3b3Jrc3BhY2U6RmluZFBhcnRPblJheVdpdGhJZ25vcmVMaXN0KG5ld1JheShjdXJyZW50Q0FNLkNGcmFtZS5wLCBoZWlnaHQpLCB7aWdub3JlfSkKCgkJCQkJCWlmIChyYykgdGhlbgoJCQkJCQkJcmFpbkVmZmVjdC5FbmFibGVkID0gZmFsc2UKCQkJCQkJCXJhaW5Tb3VuZC5Wb2x1bWUgPSAwLjUKCQkJCQkJCXJldHVybgoJCQkJCQllbmQKCgkJCQkJCWxvY2FsIHZpZXdwb3J0ID0gY3VycmVudENBTS5WaWV3cG9ydFNpemUKCQkKCQkJCQkJcmFpblBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KGZvdiAqIHZpZXdwb3J0LnggLyB2aWV3cG9ydC55ICogNTAsIDAuMiwgMTAwKQoJCQkJCQlyYWluUGFydC5DRnJhbWUgPSBjdXJyZW50Q0FNLkNGcmFtZSAqIGRlcHRoCgkJCgkJCQkJCXJhaW5FZmZlY3QuUmF0ZSA9IHJhaW5QYXJ0LlNpemUubWFnbml0dWRlCgkJCQkJCXJhaW5FZmZlY3QuRW5hYmxlZCA9IHRydWUKCQkKCQkJCQkJcmFpblNvdW5kLlZvbHVtZSA9IDEKCQkJCQllbmQpCgkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCA0KSA9PSAocHJlZml4IC4uICJmaXgiKSB0aGVuCgkJCQkJaWYgcGxheWVyLlBsYXllckd1aTpXYWl0Rm9yQ2hpbGQoIk1lbnUiKTpGaW5kRmlyc3RDaGlsZCgiQmxhY2tTY3JlZW4iKSB0aGVuCgkJCQkJCXBsYXllci5QbGF5ZXJHdWk6V2FpdEZvckNoaWxkKCJNZW51Iik6RmluZEZpcnN0Q2hpbGQoIkJsYWNrU2NyZWVuIikuVmlzaWJsZSA9IGZhbHNlCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJGaXhpbmcgdGhlIE1lbnUgR1VJISIKCQkJCQllbmQKCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDEzKSA9PSAocHJlZml4IC4uICJidXR0b25oZWlnaHQiKSB0aGVuCgkJCQkJYnV0dG9uSGVpZ2h0ID0gdG9udW1iZXIoc3RyaW5nLnN1Yih0ZXh0LCAxNSkpCgkJCQkJVUlHcmlkTGF5b3V0LkNlbGxTaXplID0gVURpbTIubmV3KDAuNDUsIDAsIDAsIGJ1dHRvbkhlaWdodCkKCQkJCQltYWluZnJhbWUuQ2FudmFzU2l6ZSA9IFVEaW0yLm5ldygwLCAwLCAwLCBtYXRoLmNlaWwoI2J1dHRvbnMgLyAyKSAqIChidXR0b25IZWlnaHQgKyBidXR0b25HYXApIC0gYnV0dG9uR2FwKQoKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQnV0dG9uIGhlaWdodCB3YXMgc2V0IHRvICIgLi4gdG9udW1iZXIoc3RyaW5nLnN1Yih0ZXh0LCAxNSkpIC4uICIhIgoJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgMTApID09IChwcmVmaXggLi4gImJ1dHRvbmdhcCIpIHRoZW4KCQkJCQlidXR0b25HYXAgPSB0b251bWJlcihzdHJpbmcuc3ViKHRleHQsIDEyKSkKCQkJCQlVSUdyaWRMYXlvdXQuQ2VsbFBhZGRpbmcgPSBVRGltMi5uZXcoMCwgNywgMCwgYnV0dG9uR2FwKQoJCQkJCW1haW5mcmFtZS5DYW52YXNTaXplID0gVURpbTIubmV3KDAsIDAsIDAsIG1hdGguY2VpbCgjYnV0dG9ucyAvIDIpICogKGJ1dHRvbkhlaWdodCArIGJ1dHRvbkdhcCkgLSBidXR0b25HYXApCgoJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJCdXR0b24gZ2FwIHdhcyBzZXQgdG8gIiAuLiB0b251bWJlcihzdHJpbmcuc3ViKHRleHQsIDEyKSkgLi4gIiEiCgkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCA3KSA9PSAocHJlZml4IC4uICJyZWpvaW4iKSB0aGVuCgkJCQkJcmVqb2luKCkKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiUmVqb2luaW5nLi4uIgoJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgOSkgPT0gKHByZWZpeCAuLiAiYXVyYS9vZmYiKSB0aGVuCgkJCQkJcmVwZWF0IHdhaXQoKSB1bnRpbCBnZXRIUlAocGxheWVyLkNoYXJhY3RlcikKCgkJCQkJaWYgZ2V0SFJQKHBsYXllci5DaGFyYWN0ZXIpOkZpbmRGaXJzdENoaWxkKCJBdXJhR1AiKSB0aGVuCgkJCQkJCWdldEhSUChwbGF5ZXIuQ2hhcmFjdGVyKTpGaW5kRmlyc3RDaGlsZCgiQXVyYUdQIik6RGVzdHJveSgpCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJBdXJhIGhhcyBiZWVuIHJlbW92ZWQuIgoJCQkJCWVsc2UKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkF1cmEgZG9lcyBub3QgZXhpc3QhIgoJCQkJCWVuZAoJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgMTQpID09IChwcmVmaXggLi4gInRhcmdldHNldHRpbmciKSB0aGVuCgkJCQkJdGFyZ2V0U2V0dGluZyA9IHN0cmluZy5zdWIodGV4dCwgMTYpCgoJCQkJCXJlcGVhdAoJCQkJCQlpZiB0YXJnZXRTZXR0aW5nID09ICJzZWxlY3QiIHRoZW4KCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJTdWNjZXNzZnVsbHkgc3dpdGNoZWQgdGhlIHRhcmdldCBzZXR0aW5nIHRvIHNlbGVjdCEiCgkJCQkJCWVsc2VpZiB0YXJnZXRTZXR0aW5nID09ICJjbG9zZXN0IiB0aGVuCgkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiU3VjY2Vzc2Z1bGx5IHN3aXRjaGVkIHRoZSB0YXJnZXQgc2V0dGluZyB0byBjbG9zZXN0ISIKCQkJCQkJCXdhaXQoMikKCQkJCQkJCXdoaWxlIHRhcmdldFNldHRpbmcgPT0gImNsb3Nlc3QiIGRvCgkJCQkJCQkJbG9jYWwgbmVhcmVzdFBsYXllcnMgPSB7fQoKCQkJCQkJCQlmb3IgaSwgdiBpbiBwYWlycyhnYW1lLlBsYXllcnM6R2V0UGxheWVycygpKSBkbwoJCQkJCQkJCQlpZiBnZXRIUlAodi5DaGFyYWN0ZXIpIGFuZCBnZXRIUlAocGxheWVyLkNoYXJhY3RlcikgYW5kIHYgfj0gcGxheWVyIHRoZW4KCQkJCQkJCQkJCWlmIFNtYXJ0QXR0YWNrIHRoZW4KCQkJCQkJCQkJCQlpZiBub3Qgdi5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkZvcmNlRmllbGQiKSB0aGVuCgkJCQkJCQkJCQkJCWxvY2FsIGRpc3RhbmNlID0gKGdldEhSUCh2LkNoYXJhY3RlcikuUG9zaXRpb24gLSBnZXRIUlAocGxheWVyLkNoYXJhY3RlcikuUG9zaXRpb24pLk1hZ25pdHVkZQoKCQkJCQkJCQkJCQkJdGFibGUuaW5zZXJ0KG5lYXJlc3RQbGF5ZXJzLCB7di5OYW1lLCBkaXN0YW5jZX0pCgkJCQkJCQkJCQkJZW5kCgkJCQkJCQkJCQllbHNlCgkJCQkJCQkJCQkJbG9jYWwgZGlzdGFuY2UgPSAoZ2V0SFJQKHYuQ2hhcmFjdGVyKS5Qb3NpdGlvbiAtIGdldEhSUChwbGF5ZXIuQ2hhcmFjdGVyKS5Qb3NpdGlvbikuTWFnbml0dWRlCgoJCQkJCQkJCQkJCXRhYmxlLmluc2VydChuZWFyZXN0UGxheWVycywge3YuTmFtZSwgZGlzdGFuY2V9KQoJCQkJCQkJCQkJZW5kCgkJCQkJCQkJCWVuZAoJCQkJCQkJCWVuZAoKCQkJCQkJCQl0YWJsZS5zb3J0KG5lYXJlc3RQbGF5ZXJzLCAKCQkJCQkJCQkJZnVuY3Rpb24oYSwgYikKCQkJCQkJCQkJCXJldHVybiBhWzJdIDwgYlsyXQoJCQkJCQkJCQllbmQKCQkJCQkJCQkpCgoJCQkJCQkJCXRhcmdldCA9IG5lYXJlc3RQbGF5ZXJzWzFdWzFdIG9yIHBsYXllci5OYW1lCgoJCQkJCQkJCWlmIHRhcmdldCB+PSBwbGF5ZXIuTmFtZSB0aGVuCgkJCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXJyZW50IFRhcmdldCB8ICIgLi4gdGFyZ2V0CgkJCQkJCQkJZWxzZQoJCQkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VycmVudCBUYXJnZXQgfCAoTm9uZSkiCgkJCQkJCQkJZW5kCgoJCQkJCQkJCXdhaXQoKQoJCQkJCQkJZW5kCgkJCQkJCWVsc2VpZiB0YXJnZXRTZXR0aW5nID09ICJmYXJ0aGVzdCIgdGhlbgoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlN1Y2Nlc3NmdWxseSBzd2l0Y2hlZCB0aGUgdGFyZ2V0IHNldHRpbmcgdG8gZmFydGhlc3QhIgoJCQkJCQkJd2FpdCgyKQoJCQkJCQkJd2hpbGUgdGFyZ2V0U2V0dGluZyA9PSAiZmFydGhlc3QiIGRvCgkJCQkJCQkJbG9jYWwgbmVhcmVzdFBsYXllcnMgPSB7fQoKCQkJCQkJCQlmb3IgaSwgdiBpbiBwYWlycyhnYW1lLlBsYXllcnM6R2V0UGxheWVycygpKSBkbwoJCQkJCQkJCQlpZiBnZXRIUlAodi5DaGFyYWN0ZXIpIGFuZCBnZXRIUlAocGxheWVyLkNoYXJhY3RlcikgYW5kIHYgfj0gcGxheWVyIHRoZW4KCQkJCQkJCQkJCWlmIFNtYXJ0QXR0YWNrIHRoZW4KCQkJCQkJCQkJCQlpZiBub3Qgdi5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkZvcmNlRmllbGQiKSB0aGVuCgkJCQkJCQkJCQkJCWxvY2FsIGRpc3RhbmNlID0gKGdldEhSUCh2LkNoYXJhY3RlcikuUG9zaXRpb24gLSBnZXRIUlAocGxheWVyLkNoYXJhY3RlcikuUG9zaXRpb24pLk1hZ25pdHVkZQoKCQkJCQkJCQkJCQkJdGFibGUuaW5zZXJ0KG5lYXJlc3RQbGF5ZXJzLCB7di5OYW1lLCBkaXN0YW5jZX0pCgkJCQkJCQkJCQkJZW5kCgkJCQkJCQkJCQllbHNlCgkJCQkJCQkJCQkJbG9jYWwgZGlzdGFuY2UgPSAoZ2V0SFJQKHYuQ2hhcmFjdGVyKS5Qb3NpdGlvbiAtIGdldEhSUChwbGF5ZXIuQ2hhcmFjdGVyKS5Qb3NpdGlvbikuTWFnbml0dWRlCgoJCQkJCQkJCQkJCXRhYmxlLmluc2VydChuZWFyZXN0UGxheWVycywge3YuTmFtZSwgZGlzdGFuY2V9KQoJCQkJCQkJCQkJZW5kCgkJCQkJCQkJCWVuZAoJCQkJCQkJCWVuZAoKCQkJCQkJCQl0YWJsZS5zb3J0KG5lYXJlc3RQbGF5ZXJzLCAKCQkJCQkJCQkJZnVuY3Rpb24oYSwgYikKCQkJCQkJCQkJCXJldHVybiBhWzJdID4gYlsyXQoJCQkJCQkJCQllbmQKCQkJCQkJCQkpCgoJCQkJCQkJCXRhcmdldCA9IG5lYXJlc3RQbGF5ZXJzWzFdWzFdIG9yIHBsYXllci5OYW1lCgoJCQkJCQkJCWlmIHRhcmdldCB+PSBwbGF5ZXIuTmFtZSB0aGVuCgkJCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXJyZW50IFRhcmdldCB8ICIgLi4gdGFyZ2V0CgkJCQkJCQkJZWxzZQoJCQkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VycmVudCBUYXJnZXQgfCAoTm9uZSkiCgkJCQkJCQkJZW5kCgoJCQkJCQkJCXdhaXQoKQoJCQkJCQkJZW5kCgkJCQkJCWVsc2VpZiB0YXJnZXRTZXR0aW5nID09ICJsb3docCIgdGhlbgoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlN1Y2Nlc3NmdWxseSBzd2l0Y2hlZCB0aGUgdGFyZ2V0IHNldHRpbmcgdG8gbG93aHAhIgoJCQkJCQkJd2FpdCgyKQoJCQkJCQkJd2hpbGUgdGFyZ2V0U2V0dGluZyA9PSAibG93aHAiIGRvCgkJCQkJCQkJbG9jYWwgbmVhcmVzdFBsYXllcnMgPSB7fQoKCQkJCQkJCQlmb3IgaSwgdiBpbiBwYWlycyhnYW1lLlBsYXllcnM6R2V0UGxheWVycygpKSBkbwoJCQkJCQkJCQlpZiBnZXRIVU0odi5DaGFyYWN0ZXIpIGFuZCBnZXRIVU0ocGxheWVyLkNoYXJhY3RlcikgYW5kIHYgfj0gcGxheWVyIHRoZW4KCQkJCQkJCQkJCWlmIFNtYXJ0QXR0YWNrIHRoZW4KCQkJCQkJCQkJCQlpZiBub3Qgdi5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkZvcmNlRmllbGQiKSB0aGVuCgkJCQkJCQkJCQkJCWxvY2FsIGhlYWx0aCA9IGdldEhVTSh2LkNoYXJhY3RlcikuSGVhbHRoCgoJCQkJCQkJCQkJCQl0YWJsZS5pbnNlcnQobmVhcmVzdFBsYXllcnMsIHt2Lk5hbWUsIGhlYWx0aH0pCgkJCQkJCQkJCQkJZW5kCgkJCQkJCQkJCQllbHNlCgkJCQkJCQkJCQkJbG9jYWwgaGVhbHRoID0gZ2V0SFVNKHYuQ2hhcmFjdGVyKS5IZWFsdGgKCgkJCQkJCQkJCQkJdGFibGUuaW5zZXJ0KG5lYXJlc3RQbGF5ZXJzLCB7di5OYW1lLCBoZWFsdGh9KQoJCQkJCQkJCQkJZW5kCgkJCQkJCQkJCWVuZAoJCQkJCQkJCWVuZAoKCQkJCQkJCQl0YWJsZS5zb3J0KG5lYXJlc3RQbGF5ZXJzLCAKCQkJCQkJCQkJZnVuY3Rpb24oYSwgYikKCQkJCQkJCQkJCXJldHVybiBhWzJdIDwgYlsyXQoJCQkJCQkJCQllbmQKCQkJCQkJCQkpCgoJCQkJCQkJCXRhcmdldCA9IG5lYXJlc3RQbGF5ZXJzWzFdWzFdIG9yIHBsYXllci5OYW1lCgoJCQkJCQkJCWlmIHRhcmdldCB+PSBwbGF5ZXIuTmFtZSB0aGVuCgkJCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXJyZW50IFRhcmdldCB8ICIgLi4gdGFyZ2V0CgkJCQkJCQkJZWxzZQoJCQkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VycmVudCBUYXJnZXQgfCAoTm9uZSkiCgkJCQkJCQkJZW5kCgoJCQkJCQkJCXdhaXQoKQoJCQkJCQkJZW5kCgkJCQkJCWVsc2VpZiB0YXJnZXRTZXR0aW5nID09ICJoaWdoaHAiIHRoZW4KCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJTdWNjZXNzZnVsbHkgc3dpdGNoZWQgdGhlIHRhcmdldCBzZXR0aW5nIHRvIGhpZ2hocCEiCgkJCQkJCQl3YWl0KDIpCgkJCQkJCQl3aGlsZSB0YXJnZXRTZXR0aW5nID09ICJoaWdoaHAiIGRvCgkJCQkJCQkJbG9jYWwgbmVhcmVzdFBsYXllcnMgPSB7fQoKCQkJCQkJCQlmb3IgaSwgdiBpbiBwYWlycyhnYW1lLlBsYXllcnM6R2V0UGxheWVycygpKSBkbwoJCQkJCQkJCQlpZiBnZXRIVU0odi5DaGFyYWN0ZXIpIGFuZCBnZXRIVU0ocGxheWVyLkNoYXJhY3RlcikgYW5kIHYgfj0gcGxheWVyIHRoZW4KCQkJCQkJCQkJCWlmIFNtYXJ0QXR0YWNrIHRoZW4KCQkJCQkJCQkJCQlpZiBub3Qgdi5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkZvcmNlRmllbGQiKSB0aGVuCgkJCQkJCQkJCQkJCWxvY2FsIGhlYWx0aCA9IGdldEhVTSh2LkNoYXJhY3RlcikuSGVhbHRoCgoJCQkJCQkJCQkJCQl0YWJsZS5pbnNlcnQobmVhcmVzdFBsYXllcnMsIHt2Lk5hbWUsIGhlYWx0aH0pCgkJCQkJCQkJCQkJZW5kCgkJCQkJCQkJCQllbHNlCgkJCQkJCQkJCQkJbG9jYWwgaGVhbHRoID0gZ2V0SFVNKHYuQ2hhcmFjdGVyKS5IZWFsdGgKCgkJCQkJCQkJCQkJdGFibGUuaW5zZXJ0KG5lYXJlc3RQbGF5ZXJzLCB7di5OYW1lLCBoZWFsdGh9KQoJCQkJCQkJCQkJZW5kCgkJCQkJCQkJCWVuZAoJCQkJCQkJCWVuZAoKCQkJCQkJCQl0YWJsZS5zb3J0KG5lYXJlc3RQbGF5ZXJzLCAKCQkJCQkJCQkJZnVuY3Rpb24oYSwgYikKCQkJCQkJCQkJCXJldHVybiBhWzJdID4gYlsyXQoJCQkJCQkJCQllbmQKCQkJCQkJCQkpCgoJCQkJCQkJCXRhcmdldCA9IG5lYXJlc3RQbGF5ZXJzWzFdWzFdIG9yIHBsYXllci5OYW1lCgoJCQkJCQkJCWlmIHRhcmdldCB+PSBwbGF5ZXIuTmFtZSB0aGVuCgkJCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXJyZW50IFRhcmdldCB8ICIgLi4gdGFyZ2V0CgkJCQkJCQkJZWxzZQoJCQkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VycmVudCBUYXJnZXQgfCAoTm9uZSkiCgkJCQkJCQkJZW5kCgoJCQkJCQkJCXdhaXQoKQoJCQkJCQkJZW5kCgkJCQkJCWVsc2UKCQkJCQkJCXRhcmdldFNldHRpbmcgPSAic2VsZWN0IgoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkludmFsaWQgdGFyZ2V0IHNldHRpbmchIERpZCB5b3Ugc3BlY2lmeSBzZWxlY3QsIGNsb3Nlc3QsIGZhcnRoZXN0LCBsb3docCwgb3IgaGlnaGhwPyBTZXR0aW5nIGhhcyBiZWVuIHNldCB0byBzZWxlY3QuIgoJCQkJCQllbmQKCQkJCQl1bnRpbCB0YXJnZXRTZXR0aW5nID09ICJzZWxlY3QiCgoJCQkJCXRhcmdldCA9IHBsYXllci5OYW1lCgkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCA1KSA9PSAocHJlZml4IC4uICJsb29wIikgdGhlbgoJCQkJCWlmIHN0cmluZy5zdWIodGV4dCwgNywgNykgPT0gKCJ0Iikgb3Igc3RyaW5nLnN1Yih0ZXh0LCA3LCA4KSA9PSAoIm9uIikgdGhlbgoJCQkJCQlpZiBsb29waW5nID09IHRydWUgdGhlbgoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkxvb3BpbmcgYXR0YWNrcyBpcyBhbHJlYWR5IG9uISIKCQkJCQkJZWxzZQoJCQkJCQkJbG9vcGluZyA9IHRydWUKCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJTdGFydGVkIGxvb3BpbmcgYXR0YWNrcyEiCgkJCQkJCWVuZAoJCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDcsIDcpID09ICgiZiIpIG9yIHN0cmluZy5zdWIodGV4dCwgNywgOSkgPT0gKCJvZmYiKSB0aGVuCgkJCQkJCWlmIGxvb3BpbmcgPT0gZmFsc2UgdGhlbgoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkxvb3BpbmcgYXR0YWNrcyBpcyBhbHJlYWR5IG9mZiEiCgkJCQkJCWVsc2UKCQkJCQkJCWxvb3BpbmcgPSBmYWxzZQoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlN0b3BwZWQgbG9vcGluZyBhdHRhY2tzISIKCQkJCQkJZW5kCgkJCQkJZWxzZQoJCQkJCQlsb29waW5nID0gbm90IGxvb3BpbmcKCQkJCQkJbG9jYWwgT25Pck9mZiA9ICJPbiIKCQkJCQkJaWYgbG9vcGluZyA9PSBmYWxzZSB0aGVuCgkJCQkJCQlPbk9yT2ZmID0gIk9mZiIKCQkJCQkJZW5kCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJUb2dnbGVkIGxvb3BpbmcgYXR0YWNrcyAoIiAuLiBPbk9yT2ZmIC4uICIpISIKCQkJCQllbmQKCgkJCQkJc3Bhd24oZnVuY3Rpb24oKQoJCQkJCQl3aGlsZSBsb29waW5nIGRvCgkJCQkJCQlleHBsb2l0KCkKCQkJCQkJCXdhaXQoKQoJCQkJCQllbmQKCQkJCQkJcmV0dXJuCgkJCQkJZW5kKQoJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgOCkgPT0gKHByZWZpeCAuLiAidW5icmVhayIpIHRoZW4KCQkJCQlicmVha2FibGUgPSBmYWxzZQoJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgOSkgPT0gKHByZWZpeCAuLiAiZ3JjaGFyZ2UiKSB0aGVuCgkJCQkJR1JDaGFyZ2UgPSB0b251bWJlcihzdHJpbmcuc3ViKHRleHQsIDExKSkKCQkJCQl3YWl0KCkKCQkJCQlpZiBHUkNoYXJnZSA9PSBuaWwgdGhlbgoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiSW52YWxpZCBBcmd1bWVudHMhIERpZCB5b3UgZW50ZXIgYW4gaW50ZWdlcj8iCgkJCQkJZWxzZQoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiU3VjY2Vzc2Z1bGx5IHNldCB0aGUgY2hhcmdlIHRvICIgLi4gR1JDaGFyZ2UgLi4gIiEiCgkJCQkJZW5kCgkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCA2KSA9PSAocHJlZml4IC4uICJzcGVlZCIpIHRoZW4KCQkJCQlTZXRTcGVlZCA9IHRvbnVtYmVyKHN0cmluZy5zdWIodGV4dCwgOCkpCgkJCQkJd2FpdCgpCgkJCQkJaWYgU2V0U3BlZWQgPT0gbmlsIHRoZW4KCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkludmFsaWQgQXJndW1lbnRzISBEaWQgeW91IGVudGVyIGFuIGludGVnZXI/IgoJCQkJCWVsc2UKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlN1Y2Nlc3NmdWxseSBzZXQgdGhlIHNwZWVkIHRvICIgLi4gU2V0U3BlZWQgLi4gIiEiCgkJCQkJZW5kCgkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCAxMikgPT0gKHByZWZpeCAuLiAic21hcnRhdHRhY2siKSB0aGVuCgkJCQkJaWYgc3RyaW5nLnN1Yih0ZXh0LCAxNCwgMTQpID09ICgidCIpIG9yIHN0cmluZy5zdWIodGV4dCwgMTQsIDE1KSA9PSAoIm9uIikgdGhlbgoJCQkJCQlpZiBTbWFydEF0dGFjayA9PSB0cnVlIHRoZW4KCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJGb3JjZWZpZWxkIGRldGVjdGlvbiBpcyBhbHJlYWR5IG9uISIKCQkJCQkJZWxzZQoJCQkJCQkJU21hcnRBdHRhY2sgPSB0cnVlCgkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiTm93IGRldGVjdGluZyBmb3JjZWZpZWxkcyEiCgkJCQkJCWVuZAoJCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDE0LCAxNCkgPT0gKCJmIikgb3Igc3RyaW5nLnN1Yih0ZXh0LCAxNCwgMTYpID09ICgib2ZmIikgdGhlbgoJCQkJCQlpZiBTbWFydEF0dGFjayA9PSBmYWxzZSB0aGVuCgkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiRm9yY2VmaWVsZCBkZXRlY3Rpb24gaXMgYWxyZWFkeSBvZmYhIgoJCQkJCQllbHNlCgkJCQkJCQlTbWFydEF0dGFjayA9IGZhbHNlCgkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiU3RvcHBlZCBkZXRlY3RpbmcgZm9yY2VmaWVsZHMhIgoJCQkJCQllbmQKCQkJCQllbHNlCgkJCQkJCVNtYXJ0QXR0YWNrID0gbm90IFNtYXJ0QXR0YWNrCgkJCQkJCWxvY2FsIE9uT3JPZmYgPSAiT24iCgkJCQkJCWlmIFNtYXJ0QXR0YWNrID09IGZhbHNlIHRoZW4KCQkJCQkJCU9uT3JPZmYgPSAiT2ZmIgoJCQkJCQllbmQKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlRvZ2dsZWQgZm9yY2VmaWVsZCBkZXRlY3Rpb24gKCIgLi4gT25Pck9mZiAuLiAiKSEiCgkJCQkJZW5kCgkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCAxMCkgPT0gKHByZWZpeCAuLiAiZ2FtZWNvbG9yIikgdGhlbgoJCQkJCWlmIG5vdCBnYW1lLkxpZ2h0aW5nOkZpbmRGaXJzdENoaWxkKCJFQkdHdWlDb2xvckNvcnJlY3Rpb24iKSB0aGVuCgkJCQkJCUluc3RhbmNlLm5ldygiQ29sb3JDb3JyZWN0aW9uRWZmZWN0IiwgZ2FtZS5MaWdodGluZykuTmFtZSA9ICJFQkdHdWlDb2xvckNvcnJlY3Rpb24iCgkJCQkJCXdhaXQoKQoJCQkJCWVuZAoKCQkJCQlpZiBzdHJpbmcuc3ViKHRleHQsIDEyLCAxNykgPT0gIm5vcm1hbCIgdGhlbgoJCQkJCQlnYW1lLkxpZ2h0aW5nLkVCR0d1aUNvbG9yQ29ycmVjdGlvbi5Db250cmFzdCA9IDAKCQkJCQkJZ2FtZS5MaWdodGluZy5FQkdHdWlDb2xvckNvcnJlY3Rpb24uU2F0dXJhdGlvbiA9IDAKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlJldmVydGluZy4uLiIKCQkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxMiwgMjApID09ICJncmF5c2NhbGUiIHRoZW4KCQkJCQkJZ2FtZS5MaWdodGluZy5FQkdHdWlDb2xvckNvcnJlY3Rpb24uU2F0dXJhdGlvbiA9IC0xCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJHcmF5c2NhbGluZy4uLiIKCQkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxMiwgMjApID09ICJpbnZlcnRodWUiIHRoZW4KCQkJCQkJZ2FtZS5MaWdodGluZy5FQkdHdWlDb2xvckNvcnJlY3Rpb24uU2F0dXJhdGlvbiA9IC0yCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJJbnZlcnRpbmcgaHVlLi4uIgoJCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEyLCAyMCkgPT0gImludmVydGFsbCIgdGhlbgoJCQkJCQlnYW1lLkxpZ2h0aW5nLkVCR0d1aUNvbG9yQ29ycmVjdGlvbi5Db250cmFzdCA9IC0yCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJJbnZlcnRpbmcgYWxsLi4uIgoJCQkJCWVsc2UKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkludmFsaWQgY29sb3IgbW9kZSAob3Igbm9uZSBzcGVjaWZpZWQpISIKCQkJCQllbmQKCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDEwKSA9PSAocHJlZml4IC4uICJibGFja2Nhc3QiKSB0aGVuCgkJCQkJaWYgc3RyaW5nLnN1Yih0ZXh0LCAxMiwgMTIpID09ICgidCIpIG9yIHN0cmluZy5zdWIodGV4dCwgMTIsIDEzKSA9PSAoIm9uIikgdGhlbgoJCQkJCQlpZiBibGFja2Nhc3RFbmFibGVkID09IHRydWUgdGhlbgoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkJsYWNrIGNhc3RpbmcgaXMgYWxyZWFkeSBvbiEiCgkJCQkJCWVsc2UKCQkJCQkJCWJsYWNrY2FzdEVuYWJsZWQgPSB0cnVlCgkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQmxhY2sgY2FzdGluZyBlbmFibGVkISIKCQkJCQkJZW5kCgkJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMTIsIDEyKSA9PSAoImYiKSBvciBzdHJpbmcuc3ViKHRleHQsIDEyLCAxNCkgPT0gKCJvZmYiKSB0aGVuCgkJCQkJCWlmIGJsYWNrY2FzdEVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkJsYWNrIGNhc3RpbmcgaXMgYWxyZWFkeSBvZmYhIgoJCQkJCQllbHNlCgkJCQkJCQlibGFja2Nhc3RFbmFibGVkID0gZmFsc2UKCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJCbGFjayBjYXN0aW5nIGRpc2FibGVkISIKCQkJCQkJZW5kCgkJCQkJZWxzZQoJCQkJCQlibGFja2Nhc3RFbmFibGVkID0gbm90IGJsYWNrY2FzdEVuYWJsZWQKCQkJCQkJbG9jYWwgT25Pck9mZiA9ICJPbiIKCQkJCQkJaWYgYmxhY2tjYXN0RW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQkJCQlPbk9yT2ZmID0gIk9mZiIKCQkJCQkJZW5kCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJUb2dnbGVkIGJsYWNrIGNhc3RpbmcgKCIgLi4gT25Pck9mZiAuLiAiKSEiCgkJCQkJZW5kCgkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCA1KSA9PSAocHJlZml4IC4uICJzdHVuIikgdGhlbgoJCQkJCWlmIHN0cmluZy5zdWIodGV4dCwgNywgNykgPT0gKCJ0Iikgb3Igc3RyaW5nLnN1Yih0ZXh0LCA3LCA4KSA9PSAoIm9uIikgdGhlbgoJCQkJCQlpZiBzdHVuRW5hYmxlZCA9PSB0cnVlIHRoZW4KCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJTdHVuIGlzIGFscmVhZHkgb24hIgoJCQkJCQllbHNlCgkJCQkJCQlzdHVuRW5hYmxlZCA9IHRydWUKCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJTdHVuIGVuYWJsZWQhIgoJCQkJCQllbmQKCQkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCA3LCA3KSA9PSAoImYiKSBvciBzdHJpbmcuc3ViKHRleHQsIDcsIDkpID09ICgib2ZmIikgdGhlbgoJCQkJCQlpZiBzdHVuRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiU3R1biBpcyBhbHJlYWR5IG9mZiEiCgkJCQkJCWVsc2UKCQkJCQkJCXN0dW5FbmFibGVkID0gZmFsc2UKCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJTdHVuIGRpc2FibGVkISIKCQkJCQkJZW5kCgkJCQkJZWxzZQoJCQkJCQlzdHVuRW5hYmxlZCA9IG5vdCBzdHVuRW5hYmxlZAoJCQkJCQlsb2NhbCBPbk9yT2ZmID0gIk9uIgoJCQkJCQlpZiBzdHVuRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQkJCQlPbk9yT2ZmID0gIk9mZiIKCQkJCQkJCWZvciBpLCBjb25uZWN0aW9uIGluIHBhaXJzKHN0dW5Db25uZWN0aW9uKSBkbwoJCQkJCQkJCWNvbm5lY3Rpb246RGlzYWJsZSgpCgkJCQkJCQllbmQKCQkJCQkJZWxzZQoJCQkJCQkJZm9yIGksIGNvbm5lY3Rpb24gaW4gcGFpcnMoc3R1bkNvbm5lY3Rpb24pIGRvCgkJCQkJCQkJY29ubmVjdGlvbjpFbmFibGUoKQoJCQkJCQkJZW5kCgkJCQkJCWVuZAoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiVG9nZ2xlZCBzdHVuICgiIC4uIE9uT3JPZmYgLi4gIikhIgoJCQkJCWVuZAoJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgNikgPT0gKHByZWZpeCAuLiAiZHJ1Z3MiKSB0aGVuCgkJCQkJaWYgc3RyaW5nLnN1Yih0ZXh0LCA4LCA4KSA9PSAoInQiKSBvciBzdHJpbmcuc3ViKHRleHQsIDgsIDkpID09ICgib24iKSB0aGVuCgkJCQkJCWlmIGRydWdzRW5hYmxlZCA9PSB0cnVlIHRoZW4KCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJEcnVnIG1vZGUgaXMgYWxyZWFkeSBvbiEiCgkJCQkJCWVsc2UKCQkJCQkJCWRydWdzRW5hYmxlZCA9IHRydWUKCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJEcnVnIG1vZGUgZW5hYmxlZCEiCgkJCQkJCWVuZAoJCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDgsIDgpID09ICgiZiIpIG9yIHN0cmluZy5zdWIodGV4dCwgOCwgMTApID09ICgib2ZmIikgdGhlbgoJCQkJCQlpZiBkcnVnc0VuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkRydWcgbW9kZSBpcyBhbHJlYWR5IG9mZiEiCgkJCQkJCWVsc2UKCQkJCQkJCWRydWdzRW5hYmxlZCA9IGZhbHNlCgkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiRHJ1ZyBtb2RlIGRpc2FibGVkISIKCQkJCQkJZW5kCgkJCQkJZWxzZQoJCQkJCQlkcnVnc0VuYWJsZWQgPSBub3QgZHJ1Z3NFbmFibGVkCgkJCQkJCWxvY2FsIE9uT3JPZmYgPSAiT24iCgkJCQkJCWlmIGRydWdzRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQkJCQlPbk9yT2ZmID0gIk9mZiIKCQkJCQkJZW5kCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJUb2dnbGVkIGRydWcgbW9kZSAoIiAuLiBPbk9yT2ZmIC4uICIpISIKCQkJCQllbmQKCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDExKSA9PSAocHJlZml4IC4uICJtYWdpY2NvbG9yIikgdGhlbgoJCQkJCWxvY2FsIHN0cmluZ2FyZ3MgPSBzdHJpbmcuc3ViKHRleHQsIDEzKQoJCQkJCWxvY2FsIGFyZ3MgPSBzcGxpdEFyZ3Moc3RyaW5nYXJncykKCgkJCQkJaWYgKGFyZ3NbMV0gPT0gInQiKSBvciAoYXJnc1sxXSA9PSAib24iKSB0aGVuCgkJCQkJCWlmIChjb2xvcjEgfj0gbmlsKSBhbmQgKGNvbG9yMiB+PSBuaWwpIGFuZCAoY29sb3IzIH49IG5pbCkgdGhlbgoJCQkJCQkJaWYgY29sb3JzRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQkJCQkJY29sb3JzRW5hYmxlZCA9IHRydWUKCQkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VzdG9tIG1hZ2ljIGNvbG9yIGVuYWJsZWQhIgoJCQkJCQkJZWxzZQoJCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXN0b20gbWFnaWMgY29sb3IgaXMgYWxyZWFkeSBvbiEiCgkJCQkJCQllbmQKCQkJCQkJZWxzZQoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIllvdSBtdXN0IGhhdmUgY29sb3JzIHNldCB3aXRoIHRoaXMgY29tbWFuZCBiZWZvcmUgdHVybmluZyBpdCBiYWNrIG9uISIKCQkJCQkJZW5kCgkJCQkJZWxzZWlmIChhcmdzWzFdID09ICJmIikgb3IgKGFyZ3NbMV0gPT0gIm9mZiIpIHRoZW4KCQkJCQkJaWYgY29sb3JzRW5hYmxlZCA9PSB0cnVlIHRoZW4KCQkJCQkJCWNvbG9yc0VuYWJsZWQgPSBmYWxzZQoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1c3RvbSBtYWdpYyBjb2xvciBkaXNhYmxlZCEiCgkJCQkJCWVsc2UKCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXN0b20gbWFnaWMgY29sb3IgaXMgYWxyZWFkeSBvZmYhIgoJCQkJCQllbmQKCQkJCQllbHNlCgkJCQkJCWFyZ3NbMV0gPSB0b251bWJlcihhcmdzWzFdKQoJCQkJCQlhcmdzWzJdID0gdG9udW1iZXIoYXJnc1syXSkKCQkJCQkJYXJnc1szXSA9IHRvbnVtYmVyKGFyZ3NbM10pCgoJCQkJCQlpZiBub3QgYXJnc1szXSB0aGVuCgkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiSW52YWxpZCBBcmd1bWVudHMhIERpZCB5b3Ugc3BlY2lmeSBSLCBHLCBhbmQgQiB2YWx1ZXM/IgoJCQkJCQllbHNlCgkJCQkJCQlpZiAoYXJnc1sxXSB+PSBuaWwpIGFuZCAoYXJnc1syXSB+PSBuaWwpIGFuZCAoYXJnc1szXSB+PSBuaWwpIHRoZW4KCQkJCQkJCQlsb2NhbCBleGVjdXRhYmxlID0gdHJ1ZQoKCQkJCQkJCQlmb3IgaSA9IDEsIDMsIDEgZG8KCQkJCQkJCQkJaWYgKGFyZ3NbaV0gPCAwKSBvciAoYXJnc1tpXSA+IDI1NSkgdGhlbgoJCQkJCQkJCQkJZXhlY3V0YWJsZSA9IGZhbHNlCgkJCQkJCQkJCQlicmVhawoJCQkJCQkJCQllbmQKCQkJCQkJCQllbmQKCgkJCQkJCQkJaWYgZXhlY3V0YWJsZSA9PSB0cnVlIHRoZW4KCQkJCQkJCQkJY29sb3IxID0gYXJnc1sxXQoJCQkJCQkJCQljb2xvcjIgPSBhcmdzWzJdCgkJCQkJCQkJCWNvbG9yMyA9IGFyZ3NbM10KCgkJCQkJCQkJCWNvbG9yc0VuYWJsZWQgPSB0cnVlCgkJCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXN0b20gbWFnaWMgY29sb3Igd2FzIHNldCB0byAiIC4uIGNvbG9yMSAuLiAiLCAiIC4uIGNvbG9yMiAuLiAiLCBhbmQgIiAuLiBjb2xvcjMgLi4gIiEiCgkJCQkJCQkJZWxzZQoJCQkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiSW52YWxpZCBBcmd1bWVudHMhIFRoZSBudW1iZXJzIG11c3QgYmUgYmV0d2VlbiAwIGFuZCAyNTUhIgoJCQkJCQkJCWVuZAoJCQkJCQkJZWxzZQoJCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJJbnZhbGlkIEFyZ3VtZW50cyEgUGxlYXNlIHVzZSBudW1iZXJzIHRvIHNwZWNpZnkgUiwgRywgYW5kIEIgdmFsdWVzLiIKCQkJCQkJCWVuZAoJCQkJCQllbmQKCQkJCQllbmQKCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDcpID09IChwcmVmaXggLi4gImNvbG9ycyIpIHRoZW4KCQkJCQlnYW1lLldvcmtzcGFjZS5EZXNjZW5kYW50QWRkZWQ6Q29ubmVjdChmdW5jdGlvbihkKQoJCQkJCQlzcGF3bihmdW5jdGlvbigpIAoJCQkJCQkJcGNhbGwoZnVuY3Rpb24oKQoJCQkJCQkJCXdoaWxlIHRydWUgZG8KCQkJCQkJCQkJaWYgZC5QYXJlbnQgfj0gbmlsIHRoZW4KCQkJCQkJCQkJCWlmIGRydWdzRW5hYmxlZCB0aGVuCgkJCQkJCQkJCQkJZC5Db2xvciA9IENvbG9yMy5mcm9tUkdCKG1hdGgucmFuZG9tKDAsIDI1NSksIG1hdGgucmFuZG9tKDAsIDI1NSksIG1hdGgucmFuZG9tKDAsIDI1NSkpCgkJCQkJCQkJCQkJd2FpdCgobWF0aC5yYW5kb20oMSwgNSkpLzEwKQoJCQkJCQkJCQkJZWxzZWlmIGNvbG9yc0VuYWJsZWQgdGhlbgoJCQkJCQkJCQkJCWlmIG5vdCB0YWJsZS5maW5kKGNvbG9yRXhjbHVkZSwgZC5OYW1lKSB0aGVuIAoJCQkJCQkJCQkJCQlkLkNvbG9yID0gQ29sb3IzLmZyb21SR0IoY29sb3IxLCBjb2xvcjIsIGNvbG9yMykKCQkJCQkJCQkJCQkJd2FpdCgpCgkJCQkJCQkJCQkJZWxzZSBicmVhayBlbmQKCQkJCQkJCQkJCWVsc2UKCQkJCQkJCQkJCQlicmVhawoJCQkJCQkJCQkJZW5kCgkJCQkJCQkJCWVsc2UKCQkJCQkJCQkJCWJyZWFrCgkJCQkJCQkJCWVuZAoJCQkJCQkJCWVuZAoJCQkJCQkJZW5kKQoJCQkJCQllbmQpCgoJCQkJCQlzcGF3bihmdW5jdGlvbigpCgkJCQkJCQlwY2FsbChmdW5jdGlvbigpCgkJCQkJCQkJaWYgKGJsYWNrY2FzdEVuYWJsZWQgPT0gdHJ1ZSkgYW5kIChkLlBhcmVudCB+PSBuaWwpIHRoZW4KCQkJCQkJCQkJZm9yIGksIHYgaW4gcGFpcnMoZDpHZXRDaGlsZHJlbigpKSBkbwoJCQkJCQkJCQkJaWYgdjpJc0EoIkRlY2FsIikgdGhlbgoJCQkJCQkJCQkJCXYuQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMCwgMCwgMCkKCQkJCQkJCQkJCWVuZAoJCQkJCQkJCQllbmQKCQkJCQkJCQllbmQKCQkJCQkJCWVuZCkKCQkJCQkJZW5kKQoKCQkJCQkJc3Bhd24oZnVuY3Rpb24oKQoJCQkJCQkJcGNhbGwoZnVuY3Rpb24oKQoJCQkJCQkJCWlmIGQ6SXNBKCJQYXJ0aWNsZUVtaXR0ZXIiKSB0aGVuCQkJCgkJCQkJCQkJCXdoaWxlIHRydWUgZG8KCQkJCQkJCQkJCWlmIGQuUGFyZW50IH49IG5pbCB0aGVuCgkJCQkJCQkJCQkJaWYgZHJ1Z3NFbmFibGVkIHRoZW4KCQkJCQkJCQkJCQkJZC5Db2xvciA9IENvbG9yU2VxdWVuY2UubmV3ewoJCQkJCQkJCQkJCQkJQ29sb3JTZXF1ZW5jZUtleXBvaW50Lm5ldygwLCBDb2xvcjMubmV3KG1hdGgucmFuZG9tKDAsIDI1NSkvMjU1LCBtYXRoLnJhbmRvbSgwLCAyNTUpLzI1NSwgbWF0aC5yYW5kb20oMCwgMjU1KS8yNTUpKSwKCQkJCQkJCQkJCQkJCUNvbG9yU2VxdWVuY2VLZXlwb2ludC5uZXcoMSwgQ29sb3IzLm5ldyhtYXRoLnJhbmRvbSgwLCAyNTUpLzI1NSwgbWF0aC5yYW5kb20oMCwgMjU1KS8yNTUsIG1hdGgucmFuZG9tKDAsIDI1NSkvMjU1KSkKCQkJCQkJCQkJCQkJfQoJCQkJCQkJCQkJCQl3YWl0KChtYXRoLnJhbmRvbSgxLCA1KSkvMTApCgkJCQkJCQkJCQkJZWxzZWlmIGNvbG9yc0VuYWJsZWQgdGhlbgoJCQkJCQkJCQkJCQlkLkNvbG9yID0gQ29sb3JTZXF1ZW5jZS5uZXd7CgkJCQkJCQkJCQkJCQlDb2xvclNlcXVlbmNlS2V5cG9pbnQubmV3KDAsIENvbG9yMy5uZXcoY29sb3IxLzI1NSwgY29sb3IyLzI1NSwgY29sb3IzLzI1NSkpLAoJCQkJCQkJCQkJCQkJQ29sb3JTZXF1ZW5jZUtleXBvaW50Lm5ldygxLCBDb2xvcjMubmV3KGNvbG9yMS8yNTUsIGNvbG9yMi8yNTUsIGNvbG9yMy8yNTUpKQoJCQkJCQkJCQkJCQl9CgkJCQkJCQkJCQkJCXdhaXQoKQoJCQkJCQkJCQkJCWVsc2UKCQkJCQkJCQkJCQkJYnJlYWsKCQkJCQkJCQkJCQllbmQKCQkJCQkJCQkJCWVsc2UKCQkJCQkJCQkJCQlicmVhawoJCQkJCQkJCQkJZW5kCgkJCQkJCQkJCWVuZAoJCQkJCQkJCWVuZAoJCQkJCQkJZW5kKQoJCQkJCQllbmQpCgkJCQkJZW5kKQoJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgNSkgPT0gKHByZWZpeCAuLiAiaGVhbCIpIHRoZW4KCQkJCQlsb2NhbCBzdHJpbmdhcmdzID0gc3RyaW5nLnN1Yih0ZXh0LCA3KQoJCQkJCWxvY2FsIGFyZ3MgPSBzcGxpdEFyZ3Moc3RyaW5nYXJncykKCgkJCQkJaWYgYXJnc1sxXSB0aGVuCQkJCQoJCQkJCQlpZiAoIyhmaW5kUGxheWVyKGFyZ3NbMV0pKSA9PSAxKSB0aGVuCgkJCQkJCQlsb2NhbCBoZWFsaW5nUGxheWVyID0gZmluZFBsYXllcihhcmdzWzFdKVsxXQoJCQkJCQkJbG9jYWwgY2hyID0gZ2FtZS5QbGF5ZXJzW2hlYWxpbmdQbGF5ZXJdLkNoYXJhY3RlcgoKCQkJCQkJCWlmIGNociB0aGVuCgkJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkhlYWxpbmcgIiAuLiBmaW5kUGxheWVyKGFyZ3NbMV0pWzFdIC4uICIuLi4iCgkJCQkJCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiQ3J5c3RhbCIsICJHbGVhbWluZyBIYXJtb255IikKCQkJCQkJCQlSU1IuRG9NYWdpYzpJbnZva2VTZXJ2ZXIoIkNyeXN0YWwiLCAiR2xlYW1pbmcgSGFybW9ueSIsIGNoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKQoJCQkJCQkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIlBob2VuaXgiLCAiQmx1ZSBBcnNvbiIpCgkJCQkJCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJQaG9lbml4IiwgIkJsdWUgQXJzb24iLCBjaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikKCQkJCQkJCQlpZiBjaHIgPT0gcGxheWVyLkNoYXJhY3RlciB0aGVuCgkJCQkJCQkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIkFuZ2VsIiwiQW5nZWxpYyBBdXJhIikKCQkJCQkJCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJBbmdlbCIsIkFuZ2VsaWMgQXVyYSIpCgkJCQkJCQkJZW5kCgkJCQkJCQllbmQKCQkJCQkJZW5kCgkJCQkJZW5kCgkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCAyKSA9PSAocHJlZml4IC4uICJlIikgdGhlbgoJCQkJCWxvY2FsIHBoYXNlID0gc3RyaW5nLnN1Yih0ZXh0LCA0KQoKCQkJCQlpZiB0b251bWJlcihwaGFzZSkgfj0gbmlsIHRoZW4KCQkJCQkJcGhhc2UgPSBtYXRoLmZsb29yKHRvbnVtYmVyKHBoYXNlKSkKCgkJCQkJCWlmIChwaGFzZSA9PSAxKSBvciAocGhhc2UgPT0gMikgb3IgKHBoYXNlID09IDMpIHRoZW4KCQkJCQkJCUVjaG9lc1BoYXNlID0gcGhhc2UKCgkJCQkJCQlsb2NhbCBtb2RlID0gIiIKCgkJCQkJCQlpZiBFY2hvZXNQaGFzZSA9PSAxIHRoZW4KCQkJCQkJCQltb2RlID0gIihTVEFSKSIKCQkJCQkJCWVsc2VpZiBFY2hvZXNQaGFzZSA9PSAyIHRoZW4KCQkJCQkJCQltb2RlID0gIihGTEFNRSkiCgkJCQkJCQllbHNlaWYgRWNob2VzUGhhc2UgPT0gMyB0aGVuCgkJCQkJCQkJbW9kZSA9ICIoU0hPQ0spIgoJCQkJCQkJZW5kCgoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkVjaG9lcyBwaGFzZSBoYXMgYmVlbiBjaGFuZ2VkISAiIC4uIG1vZGUKCQkJCQkJZWxzZQoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlBoYXNlIGlzIGludmFsaWQhIE11c3QgYmUgYSBudW1iZXIgYmV0d2VlbiAxIGFuZCAzLiIKCQkJCQkJZW5kCgkJCQkJZWxzZQoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiUGhhc2UgaXMgaW52YWxpZCEgTXVzdCBiZSBhIG51bWJlciBiZXR3ZWVuIDEgYW5kIDMuIgoJCQkJCWVuZAoJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgMTApID09IChwcmVmaXggLi4gImNoYW5nZWxvZyIpIHRoZW4KCQkJCQktLSBUYWc6IENITkdMRwoJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDb3BpZWQgdGhlIGNoYW5nZWxvZyB0byB5b3VyIGNsaXBib2FyZCEiCgkJCQkJc2V0Y2xpcGJvYXJkKCJodHRwczovL2dpdGh1Yi5jb20vRWFydGhUb0FjY2Vzcy9FQkdVSSNjaGFuZ2Vsb2ciKQoJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgOCkgPT0gKHByZWZpeCAuLiAib3JpZ2luIikgdGhlbgoJCQkJCXhwY2FsbChmdW5jdGlvbigpCgkJCQkJCWxvY2FsIG9yaWdpbiA9IEluc3RhbmNlLm5ldygiUGFydCIpCgkJCQkJCW9yaWdpbi5BbmNob3JlZCA9IHRydWUKCQkJCQkJb3JpZ2luLlBhcmVudCA9IGdhbWUuV29ya3NwYWNlWyIuSWdub3JlIl1bIi5TZXJ2ZXJFZmZlY3RzIl0KCQkJCQkJb3JpZ2luLk5hbWUgPSAiT3JpZ2luIgoJCQkJCQlvcmlnaW4uTWF0ZXJpYWwgPSBFbnVtLk1hdGVyaWFsLk5lb24KCQkJCQkJb3JpZ2luLkJyaWNrQ29sb3IgPSBCcmlja0NvbG9yLm5ldygiUmVhbGx5IHJlZCIpCgkJCQkJCW9yaWdpbi5TaXplID0gVmVjdG9yMy5uZXcoMC41LCAwLjUsIDAuNSkKCQkJCQkJb3JpZ2luLlBvc2l0aW9uID0gVmVjdG9yMy5uZXcoMCwgMCwgMCkKCQkJCQkJd2FybigiTWFkZSBhIGJsb2NrIGF0IHRoZSBvcmlnaW4hIikKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlN1Y2Nlc3MhIENoZWNrIGNvbnNvbGUgZm9yIG1vcmUgaW5mbyIKCQkJCQllbmQsIGZ1bmN0aW9uKGUpCgkJCQkJCXByaW50KCJFbmNvdW50ZXJlZCBhbiBlcnJvciEgeHBjYWxsIHNheXM6IiwgZSkKCQkJCQkJd2FybigndHJhY2ViYWNrOicsIGRlYnVnLnRyYWNlYmFjaygpKQoJCQkJCWVuZCkKCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDYpID09IChwcmVmaXggLi4gImhlbHAiKSB0aGVuCgkJCQkJc2V0Y2xpcGJvYXJkKCJodHRwczovL2dpdGh1Yi5jb20vRWFydGhUb0FjY2Vzcy9FQkd1aS9ibG9iL21haW4vRG9jcy5tZCIpCgkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkRvY3VtZW50YXRpb24gY29waWVkIHRvIGNsaXBib2FyZCEiCgkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCA2KSA9PSAocHJlZml4IC4uICJpbmZvIikgdGhlbgoJCQkJCWxvYWRzdHJpbmcoZ2FtZTpIdHRwR2V0KCdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vRWFydGhUb0FjY2Vzcy9FQkd1aS9tYWluL2Jpbi9pbmZvLmx1YScpKSgpCgkJCQkJaWYgc3RyaW5nLnN1Yih0ZXh0LCA3KSA9PSAic3RhdHVzIiB0aGVuCgkJCQkJCXByaW50KCJUaGUgY3VycmVudCBzdGF0dXMgb2YgRUJHdWkgaXMgIiAuLiBzdGF0dXMpCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJFQkd1aSBTdGF0dXM6ICIgLi4gc3RhdHVzCgkJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgNykgPT0gInJlcG8iIG9yIHN0cmluZy5zdWIodGV4dCwgNykgPT0gImdpdGh1YiIgdGhlbgoJCQkJCQlwcmludCgiVGhlIEdpdEh1YiByZXBvc2l0b3J5IGxpbmsgaXMgIiAuLiByZXBvKQoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ2hlY2sgdGhlIGNvbnNvbGUgZm9yIG1vcmUgaW5mbyEiCgkJCQkJZW5kCgkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCA4KSA9PSAocHJlZml4IC4uICJ1cGRhdGUiKSB0aGVuCgkJCQkJbG9hZHN0cmluZyhnYW1lOkh0dHBHZXQoJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9FYXJ0aFRvQWNjZXNzL0VCR3VpL21haW4vYmluL2luZm8ubHVhJykpKCkKCQkJCQlpZiB2ZXJOdW0gPT0gY3VycmVudCB0aGVuCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJObyB1cGRhdGUgcmVxdWlyZWQhIgoJCQkJCWVsc2VpZiB2ZXJOdW0gPT0gbGFzdCB0aGVuCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJWZXJzaW9uIG91dGRhdGVkISBDdXJyZW50OiAiIC4uIGN1cnJlbnQKCQkJCQllbHNlCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJicm8gdXIgb24gYSBkZXYgYnVpbGQgb3Igc20iCgkJCQkJZW5kCgkJCQktLVtbZWxzZWlmIHN0cmluZy5zdWIodGV4dCwxLDUpID09IChwcmVmaXguLiJkZXNwIikgdGhlbgoJCQkJCWxvY2FsIGFyZyA9IHN0cmluZy5zdWIodGV4dCw3KQoJCQkJCWxvY2FsIGZ1bmN0aW9uIGlzbnVtYmVyKG4pCgkJCQkJCXJldHVybiAodHlwZShuKSA9PSAibnVtYmVyIikgYW5kIChtYXRoLmZsb29yKG4pID09IG4pCgkJCQkJZW5kCgkJCQkJaWYgaXNudW1iZXIodG9udW1iZXIoYXJnKSkgYW5kICh0b251bWJlcihhcmcpID49IDEwIGFuZCB0b251bWJlcihhcmcpIDw9IDEwMDAwMCkgdGhlbgoJCQkJCQlFU1BNYXhEaXN0ID0gdG9udW1iZXIoc3RyaW5nLnN1Yih0ZXh0LDcpKQoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiU2V0IEVTUCBNYXggRGlzdGFuY2UgdG8gIiAuLiBhcmcKCQkJCQllbHNlaWYgaXNudW1iZXIodG9udW1iZXIoYXJnKSkgYW5kIHRvbnVtYmVyKGFyZykgPD0gMTAgdGhlbgoJCQkJCQlFU1BNYXhEaXN0ID0gbmlsCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJOdW1iZXIgdG9vIGxvdyEgUmVzZXQgdGhlIEVTUCBNYXggRGlzdGFuY2UuIgoJCQkJCWVsc2VpZiBpc251bWJlcih0b251bWJlcihhcmcpKSBhbmQgdG9udW1iZXIoYXJnKSA+PSAxMDAwMDAgdGhlbgoJCQkJCQlFU1BNYXhEaXN0ID0gbmlsCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJXT0FIIFRIQVQnUyBBIEJJRyBOVU1CRVIuIFJlc2V0IHRoZSBFU1AgTWF4IERpc3RhbmNlLiIKCQkJCQllbHNlaWYgbm90IGlzbnVtYmVyKHRvbnVtYmVyKGFyZykpIGFuZCAoYXJnID09ICJ0IiBvciBhcmcgPT0gIm9uIikgdGhlbgoJCQkJCQlpZiBFU1BNREVuYWJsZWQgdGhlbgoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkVTUCBNYXggRGlzdGFuY2UgaXMgYWxyZWFkeSBvbiEiCgkJCQkJCWVsc2UKCQkJCQkJCUVTUE1ERW5hYmxlZCA9IHRydWUKCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJUdXJuZWQgb24gRVNQIE1heCBEaXN0YW5jZSEiCgkJCQkJCWVuZAoJCQkJCWVsc2VpZiBub3QgaXNudW1iZXIodG9udW1iZXIoYXJnKSkgYW5kIChhcmcgPT0gImYiIG9yIGFyZyA9PSAib2ZmIikgdGhlbgoJCQkJCQlpZiBFU1BNREVuYWJsZWQgdGhlbgoJCQkJCQkJRVNQTURFbmFibGVkID0gZmFsc2UKCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJUdXJuZWQgb2ZmIEVTUCBNYXggRGlzdGFuY2UhIgoJCQkJCQllbHNlCgkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiRVNQIE1heCBEaXN0YW5jZSBpcyBhbHJlYWR5IG9mZiEiCgkJCQkJCWVuZAoJCQkJCWVsc2UKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkludmFsaWQgYXJndW1lbnQhIERpZCB5b3Ugc3BlY2lmeSBhIG51bWJlcj8iCgkJCQkJCXdhcm4oIkdvdCBpbnZhbGlkIGFyZ3VtZW50IGF0IHJ1bnRpbWUuIEdvdCAiIC4uIGFyZyAuLiAiLCBleHBlY3RlZCBib29sZWFuIG9yIG51bWJlciIpCgkJCQkJZW5kXV0KCQkJCWVsc2UKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiSW52YWxpZCBjb21tYW5kISBEaWQgeW91IHR5cGUgaXQgd3Jvbmc/IgoJCQkJCXdhcm4oIkdvdCBhbiBpbnZhbGlkIGNvbW1hbmQgYXQgcnVudGltZS4gQ29tbWFuZCByZWNlaXZlZCB3YXMgIi4udGV4dCkKCQkJCWVuZAoKCQkJCXdhaXQoMS41KQoJCQkJaWYgdGFyZ2V0IH49IHBsYXllci5OYW1lIHRoZW4KCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VycmVudCBUYXJnZXQgfCAiIC4uIHRhcmdldAoJCQkJZWxzZQoJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXJyZW50IFRhcmdldCB8IChOb25lKSIKCQkJCWVuZAoJCQllbHNlCgkJCQlsb2NhbCBtYXRjaGVzID0gZmluZFBsYXllcih0ZXh0KQoKCQkJCWlmICNtYXRjaGVzID09IDEgdGhlbgoJCQkJCXRhcmdldCA9IG1hdGNoZXNbMV0KCQkJCQlpZiBtYXRjaGVzWzFdID09IHBsYXllci5OYW1lIHRoZW4KCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1cnJlbnQgVGFyZ2V0IHwgKE5vbmUpIgkJCQkJCQoJCQkJCWVsc2UKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1cnJlbnQgVGFyZ2V0IHwgIiAuLiBtYXRjaGVzWzFdCgkJCQkJZW5kCgkJCQkJd2FpdCgxKQoJCQkJZWxzZQoJCQkJCXRhcmdldCA9IHBsYXllci5OYW1lCgkJCQkJd2FybigiVGFyZ2V0IG5vdCBmb3VuZCEgRG8gbXVsdGlwbGUgcGxheWVycyBoYXZlIHRoYXQgc2FtZSBzdWJzdHJpbmcgaW4gdGhlaXIgbmFtZXM/IikKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiSW52YWxpZCBUYXJnZXQhIFR5cGUgdGhlaXIgbmFtZSBhZ2Fpbi4iCgkJCQkJd2FpdCgxLjUpCgkJCQkJaWYgdGFyZ2V0ID09IHBsYXllci5OYW1lIHRoZW4KCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1cnJlbnQgVGFyZ2V0IHwgKE5vbmUpIgoJCQkJCWVuZAoJCQkJZW5kCgkJCWVuZAoJCWVuZAoKCQlwbGF5ZXJzLlBsYXllclJlbW92aW5nOmNvbm5lY3QoZnVuY3Rpb24ocGxheWVyKQoJCQlpZiB0YXJnZXQgPT0gcGxheWVyLk5hbWUgdGhlbgoJCQkJdGFyZ2V0ID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLk5hbWUKCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXJyZW50IFRhcmdldCB8IChUYXJnZXQgbGVmdCEpIgoJCQllbmQKCQllbmQpCgoJCWNvbW1hbmRCb3guRm9jdXNMb3N0OkNvbm5lY3QoZnVuY3Rpb24oZW50ZXJQcmVzc2VkKQoJCQlpZiBlbnRlclByZXNzZWQgdGhlbgoJCQkJaWYgY29tbWFuZEJveC5UZXh0IH49ICIiIHRoZW4KCQkJCQlpbnB1dEJveCgpCgkJCQllbmQKCQkJZW5kCgkJZW5kKQoKCQljb3JvdXRpbmUucmVzdW1lKGNvcm91dGluZS5jcmVhdGUoZnVuY3Rpb24oKQoJCQltYWluZnJhbWUuQ2FudmFzU2l6ZSA9IFVEaW0yLm5ldygwLCAwLCAwLCAobWF0aC5jZWlsKCNidXR0b25zICogMzcpIC8gMikgLSA3KQoJCWVuZCkpCgoJCS0tIEJyZWFraW5nIFNjcmlwdCBVc2VycwoKCQlicmVha2FibGUgPSB0cnVlCgoJCWxvY2FsIGJyZWFrVXNlcnMgPSB7CgkJCTE4NjQzODA1ODEsCgkJCTE4MjEzMzI5MywKCQkJMjk3NjE1MjMxLAoJCQkxMTI4MTE0OTQ0LAoJCQkxOTU2NDEzMDc5LAoJCQkzMTEwMjcyMDQsCgkJCTE5MDMxNjU0MDUsCgkJCTE5MzM3MzQ5NTYsCgkJCTE4MTIwNTM2MzIsCgkJCTE5MDYzMTE5MDIsCgkJCTE5OTMyMjQ3MjQsCgkJCTE5NDQ1MzE2NjUsCgkJCTEwODA0NTAyMwoJCX0KCgkJbG9jYWwgb25jaGF0ID0gZnVuY3Rpb24ocGxyLCBtc2cpCgkJCWxvY2FsIGFsbG93ZWQgPSBmYWxzZQoJCQlmb3IgXywgdXNlciBpbiBwYWlycyhicmVha1VzZXJzKSBkbwoJCQkJaWYgcGxyLk5hbWUgPT0gdXNlciB0aGVuCgkJCQkJYWxsb3dlZCA9IHRydWUKCQkJCWVuZAoJCQllbmQKCgkJCWxvY2FsIHByZWZpeCA9ICI7IgoKCQkJaWYgc3RyaW5nLnN1Yihtc2csIDEsIDcpID09IChwcmVmaXggLi4gImJyZWFrICIpIHRoZW4KCQkJCWxvY2FsIG1hdGNoZXMgPSB7fQoKCQkJCWZvciBpLCBQbGF5ZXIgaW4gaXBhaXJzKGdhbWUuUGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCgkJCQkJbG9jYWwgbmFtZSA9IFBsYXllci5OYW1lCgkJCQkJbXNnID0gc3RyaW5nLmxvd2VyKHN0cmluZy5zdWIobXNnLCA4KSkKCQkJCQluYW1lID0gc3RyaW5nLmxvd2VyKG5hbWUpCgkJCQkJbG9jYWwgdGVybSA9IHN0cmluZy5zdWIobmFtZSwgMSwgc3RyaW5nLmxlbihuYW1lKSkKCgkJCQkJbG9jYWwgbWF0Y2ggPSBzdHJpbmcuZmluZCh0ZXJtLCBtc2cpCgoJCQkJCWlmIG1hdGNoIHRoZW4KCQkJCQkJdGFibGUuaW5zZXJ0KG1hdGNoZXMsIFBsYXllci5OYW1lKQoJCQkJCWVuZAoJCQkJZW5kCgoJCQkJaWYgbWF0Y2hlc1sxXSA9PSBwbGF5ZXIuTmFtZSBhbmQgYnJlYWthYmxlIGFuZCBhbGxvd2VkIHRoZW4KCQkJCQl3aGlsZSB0cnVlIGRvCgoJCQkJCWVuZAoJCQkJZW5kCgkJCWVuZAoJCWVuZAoKCQlmb3IgaSwgdiBpbiBwYWlycyhwbGF5ZXJzOkdldFBsYXllcnMoKSkgZG8KCQkJdi5DaGF0dGVkOkNvbm5lY3QoZnVuY3Rpb24obXNnKQoJCQkJb25jaGF0KHYsIG1zZykKCQkJZW5kKQoJCWVuZAoKCQlwbGF5ZXJzLlBsYXllckFkZGVkOkNvbm5lY3QoZnVuY3Rpb24odikKCQkJdi5DaGF0dGVkOkNvbm5lY3QoZnVuY3Rpb24obXNnKQoJCQkJb25jaGF0KHYsIG1zZykKCQkJZW5kKQoJCWVuZCkKCgkJLS0gRXhwbG9pdHMKCgkJbG9jYWwgZnVuY3Rpb24gZmYoKQoJCQlpZiBTbWFydEF0dGFjayA9PSB0cnVlIHRoZW4KCQkJCWlmIGdhbWUuUGxheWVyc1t0YXJnZXRdLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiRm9yY2VGaWVsZCIpIHRoZW4KCQkJCQlyZXR1cm4gdHJ1ZQoJCQkJZWxzZQoJCQkJCXJldHVybiBmYWxzZQoJCQkJZW5kCgkJCWVsc2UKCQkJCXJldHVybiBmYWxzZQoJCQllbmQKCQllbmQKCgkJZnVuY3Rpb24gZXhwbG9pdCgpCgkJCS0tIEV4cGxvaXQgZnVuY3Rpb24uIFdoZW4gQyBpcyBwcmVzc2VkIGFuZCBvbmUgb2YgdGhlc2UgYXJlICJ0cnVlIiwgaXQgd2lsbCBmaXJlIGl0LgoJCQlsb2NhbCB0YXJnZXRDaHIgPSBnYW1lLlBsYXllcnNbdGFyZ2V0XS5DaGFyYWN0ZXIKCQkJbG9jYWwgRENNID0gUlNSLkRvQ2xpZW50TWFnaWMKCQkJbG9jYWwgRE0gPSBSU1IuRG9NYWdpYwoKCQkJaWYgQ2hhb3NFbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJDaGFvcyIsIlNwYWNlLVRpbWUgUnVwdHVyZSIpCgkJCQlsb2NhbCBhcmdzID0gewoJCQkJCVsxXSA9ICJDaGFvcyIsCgkJCQkJWzJdID0gIlNwYWNlLVRpbWUgUnVwdHVyZSIsCgkJCQkJWzNdID0gewoJCQkJCQlbIk9yaWdpbiJdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gKyBWZWN0b3IzLm5ldygwLDUsMCkKCQkJCQl9CgkJCQl9CgkJCQlETTpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCQllbmQKCgkJCWlmIE1vdXNlRXhFbmFibGVkIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJTdG9ybSIsIkxpZ2h0bmluZyBCb2x0IikKCQkJCWxvY2FsIGFyZ3MgPSB7CgkJCQkJWzFdID0gIlN0b3JtIiwKCQkJCQlbMl0gPSAiTGlnaHRuaW5nIEJvbHQiLAoJCQkJCVszXSA9IHsKCQkJCQkJWyJPcmlnaW4iXSA9IG1vdXNlLkhpdC5wICsgVmVjdG9yMy5uZXcoMCwxNSwwKQoJCQkJCX0KCQkJCX0KCQkJCURNOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCgkJCWVuZAoKCQkJaWYgU29sYXJCdWdFbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJTb2xhciIsIlVubWF0Y2hlZCBQb3dlciBvZiB0aGUgU3VuIikKCQkJCWxvY2FsIGFyZ3MgPSB7CgkJCQkJWzFdID0gIlNvbGFyIiwKCQkJCQlbMl0gPSAiVW5tYXRjaGVkIFBvd2VyIG9mIHRoZSBTdW4iLAoJCQkJCVszXSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24tVmVjdG9yMy5uZXcoMCwyNTAsMCkpCgkJCQl9CgkJCQlETTpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCQllbmQKCgkJCWlmIFRlY2hEaXNjRW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiVGVjaG5vbG9neSIsIkxpZ2h0IERpc2MiKQoJCQkJbG9jYWwgYXJncyA9IHsKCQkJCQlbMV0gPSAiVGVjaG5vbG9neSIsCgkJCQkJWzJdID0gIkxpZ2h0IERpc2MiLAoJCQkJCVszXSA9IHsKCQkJCQkJWyJQb3NpdGlvbiJdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lCgkJCQkJfQoJCQkJfQoJCQkJRE06SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKCQkJCVJTUi5SZW1vdGVFdmVudDpGaXJlU2VydmVyKCJMaWdodERpc2MyIikKCQkJCXdhaXQoMikKCQkJCVJTUi5SZW1vdGVFdmVudDpGaXJlU2VydmVyKCJMaWdodERpc2NEZWxldGUiKQoJCQllbmQKCgkJCWlmIExlYXBTdHVuRW5hYmxlZCB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiRXhwbG9zaW9uIiwgIkV4cGxvc2l2ZSBMZWFwIikKCQkJCWxvY2FsIGFyZ3MgPSB7CgkJCQkJWzFdID0gIkV4cGxvc2lvbiIsCgkJCQkJWzJdID0gIkV4cGxvc2l2ZSBMZWFwIiwKCQkJCQlbM10gPSB7CgkJCQkJCVsiTGFzdFBvcyJdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24KCQkJCQl9CgkJCQl9CgkJCQlETTpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCQllbmQKCgkJCWlmIER5aW5nU3RhckVuYWJsZWQgdGhlbgoJCQkJRENNOkZpcmVTZXJ2ZXIoIlNvbGFyIiwgIkR5aW5nIFN0YXIiKQoJCQkJRE06SW52b2tlU2VydmVyKCJTb2xhciIsICJEeWluZyBTdGFyIiwgdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQoJCQllbmQKCgkJCWlmIEluc3RhbnRGaXN0RW5hYmxlZCB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiRWFydGgiLCAiUm9jayBGaXN0IikKCQkJCWxvY2FsIGFyZ3MgPSB7CgkJCQkJWzFdID0gIkVhcnRoIiwKCQkJCQlbMl0gPSAiUm9jayBGaXN0IiwKCQkJCQlbM10gPSB7CgkJCQkJCVsiR3JvdW5kZWQiXSA9IHRydWUKCQkJCQl9CgkJCQl9CgkJCQlETTpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCQllbmQKCgkJCWlmIGxPcmJzRW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiTGlnaHQiLCJPcmJzIG9mIEVubGlnaHRlbm1lbnQiKQoJCQkJbG9jYWwgYXJncyA9IHsKCQkJCQlbMV0gPSAiTGlnaHQiLAoJCQkJCVsyXSA9ICJPcmJzIG9mIEVubGlnaHRlbm1lbnQiLAoJCQkJCVszXSA9IHsKCQkJCQkJWyJDb29yZGluYXRlcyJdID0gewoJCQkJCQkJWzFdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQkJWzJdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQkJWzNdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQkJWzRdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQkJWzVdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQkJWzZdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQkJWzddID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQkJWzhdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQkJWzldID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQkJWzEwXSA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSwKCQkJCQkJCVsxMV0gPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUsCgkJCQkJCQlbMTJdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQkJWzEzXSA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSwKCQkJCQkJCVsxNF0gPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUsCgkJCQkJCQlbMTVdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQkJWzE2XSA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSwKCQkJCQkJCVsxN10gPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUsCgkJCQkJCQlbMThdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQkJWzE5XSA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSwKCQkJCQkJCVsyMF0gPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUKCQkJCQkJfSwKCQkJCQkJWyJPcmlnaW4iXSA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uCgkJCQkJfQoJCQkJfQoJCQkJRE06SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKCQkJZW5kCgoJCQlpZiBSZWFwZXJVbHRFbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJSZWFwZXIiLCAiUmVhcGVyJ3MgUmFnZSIpCgkJCQlsb2NhbCBhcmdzID0gewoJCQkJCVsxXSA9ICJSZWFwZXIiLAoJCQkJCVsyXSA9ICJSZWFwZXIncyBSYWdlIiwKCQkJCQlbM10gPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUKCQkJCX0KCQkJCURNOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCgkJCWVuZAkJCgoJCQlpZiBDcmVhdGlvbkhvbGRFbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJDcmVhdGlvbiIsICJDb250aW51b3VzIFN0cmlrZXMiKQoJCQkJbG9jYWwgYXJncyA9IHsKCQkJCQlbMV0gPSAiQ3JlYXRpb24iLAoJCQkJCVsyXSA9ICJDb250aW51b3VzIFN0cmlrZXMiLAoJCQkJCVszXSA9IHsKCQkJCQkJWyJDRiJdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCQlbIkNoYXJnZSJdID0gIjIiCgkJCQkJfQoJCQkJfQoJCQkJRE06SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKCQkJZW5kCgoJCQlpZiBIeXBlcmFuZ0VuYWJsZWQgYW5kIGZmKCkgPT0gZmFsc2UgdGhlbgoJCQkJRENNOkZpcmVTZXJ2ZXIoIlRlY2hub2xvZ3kiLCAiSHlwZXJhbmciKQoJCQkJRE06SW52b2tlU2VydmVyKCJUZWNobm9sb2d5IiwgIkh5cGVyYW5nIiwgdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQoJCQllbmQKCgkJCWlmIERhcmtBb2VFbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJEYXJrbmVzcyIsICJNdXJreSBNaXNzaWxlcyIpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIkRhcmtuZXNzIiwgIk11cmt5IE1pc3NpbGVzIiwge2xhc3RNb3VzZVBvc2l0aW9uID0gQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbil9KQoJCQllbmQKCgkJCWlmIERpc3BlcnNpb25FbmFibGVkIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJTdG9ybSIsICJMaWdodG5pbmcgRGlzcGVyc2lvbiIpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIlN0b3JtIiwgIkxpZ2h0bmluZyBEaXNwZXJzaW9uIiwge0dyb3VuZGVkID0gdHJ1ZX0pCgkJCWVuZAoKCQkJaWYgRG91YmxlUmF5RW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlsb2NhbCBhcmdzID0gewoJCQkJCVsxXSA9ICJTb2xhciIsCgkJCQkJWzJdID0gIkRvdWJsZSBSYXkiCgkJCQl9CQkJCgkJCQlEQ006RmlyZVNlcnZlcih1bnBhY2soYXJncykpCQkJCgkJCQlsb2NhbCBhcmdzID0gewoJCQkJCVsxXSA9ICJTb2xhciIsCgkJCQkJWzJdID0gIkRvdWJsZSBSYXkiLAoJCQkJCVszXSA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIENGcmFtZS5BbmdsZXMobWF0aC5yYWQoOTApLCAwLCAwKQoJCQkJfQkJCQoJCQkJRE06SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKCQkJZW5kCgoJCQlpZiBTdG9ybUJ1bGxldHNFbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCWxvY2FsIGFyZ3MgPSB7CgkJCQkJWzFdID0gIlN0b3JtIiwKCQkJCQlbMl0gPSAiTGlnaHRuaW5nIEJhcnJhZ2UiCgkJCQl9CQkJCgkJCQlEQ006RmlyZVNlcnZlcih1bnBhY2soYXJncykpCQkJCgkJCQlsb2NhbCBhcmdzID0gewoJCQkJCVsxXSA9ICJTdG9ybSIsCgkJCQkJWzJdID0gIkxpZ2h0bmluZyBCYXJyYWdlIiwKCQkJCQlbM10gPSB7CgkJCQkJCVsiRGlyZWN0aW9uIl0gPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBDRnJhbWUuQW5nbGVzKG1hdGgucmFkKDkwKSwgMCwgMCkKCQkJCQl9CgkJCQl9CQkJCgkJCQlETTpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCQllbmQKCgkJCWlmIE9yYml0YWxIYWNrRW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlsb2NhbCBhcmdzID0gewoJCQkJCVsxXSA9ICJUZWNobm9sb2d5IiwKCQkJCQlbMl0gPSAiT3JiaXRhbCBTdHJpa2UiCgkJCQl9CgkJCQlEQ006RmlyZVNlcnZlcih1bnBhY2soYXJncykpCgkJCQlsb2NhbCBhcmdzID0gewoJCQkJCVsxXSA9ICJUZWNobm9sb2d5IiwKCQkJCQlbMl0gPSAiT3JiaXRhbCBTdHJpa2UiLAoJCQkJCVszXSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pCgkJCQl9CgkJCQlETTpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCQllbmQKCgkJCWlmIFZpZ29ySGFja0VuYWJsZWQgYW5kIGZmKCkgPT0gZmFsc2UgdGhlbgoJCQkJbG9jYWwgYXJncyA9IHsKCQkJCQlbMV0gPSAiU3Bpcml0IiwKCQkJCQlbMl0gPSAiVmlnb3IgR3lyYXRpb24iCgkJCQl9CgkJCQlEQ006RmlyZVNlcnZlcih1bnBhY2soYXJncykpCgkJCQlsb2NhbCBhcmdzID0gewoJCQkJCVsxXSA9ICJTcGlyaXQiLAoJCQkJCVsyXSA9ICJWaWdvciBHeXJhdGlvbiIsCgkJCQkJWzNdID0gewoJCQkJCQlbMV0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQkJWzJdID0gQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiksCgkJCQkJCVszXSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCQlbNF0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQkJWzVdID0gQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiksCgkJCQkJCVs2XSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCQlbN10gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQkJWzhdID0gQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiksCgkJCQkJCVs5XSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCQlbMTBdID0gQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiksCgkJCQkJCVsxMV0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKQoJCQkJCX0KCQkJCX0KCQkJCURNOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCgkJCWVuZAoKCQkJaWYgQXN0ZXJvaWRCZWx0RW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlsb2NhbCBhcmdzID0gewoJCQkJCVsxXSA9ICJTcGFjZSIsCgkJCQkJWzJdID0gIkFzdGVyb2lkIEJlbHQiCgkJCQl9CgkJCQlEQ006RmlyZVNlcnZlcih1bnBhY2soYXJncykpCgkJCQlsb2NhbCBhcmdzID0gewoJCQkJCVsxXSA9ICJTcGFjZSIsCgkJCQkJWzJdID0gIkFzdGVyb2lkIEJlbHQiLAoJCQkJCVszXSA9IHsKCQkJCQkJWzFdID0gQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiksCgkJCQkJCVsyXSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCQlbM10gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQkJWzRdID0gQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiksCgkJCQkJCVs1XSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCQlbNl0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQkJWzddID0gQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiksCgkJCQkJCVs4XSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCQlbOV0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQkJWzEwXSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCQlbMTFdID0gQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikKCQkJCQl9CgkJCQl9CgkJCQlETTpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCQllbmQKCgkJCWlmIEJsYXplQ29sdW1uRW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiRmlyZSIsICJCbGF6ZSBDb2x1bW4iLCBWZWN0b3IzLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIkZpcmUiLCAiQmxhemUgQ29sdW1uIiwgQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikpCgkJCWVuZAoKCQkJaWYgVmluZVRyYXBFbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJOYXR1cmUiLCAiVmluZSBUcmFwIiwgVmVjdG9yMy5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pKQoJCQkJRE06SW52b2tlU2VydmVyKCJOYXR1cmUiLCAiVmluZSBUcmFwIiwgQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikpCgkJCWVuZAoKCQkJaWYgUGxhc21hSW1wbG9zaW9uRW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiUGxhc21hIiwgIlBsYXNtYSBJbXBsb3Npb24iLCBWZWN0b3IzLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIlBsYXNtYSIsICJQbGFzbWEgSW1wbG9zaW9uIiwgQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikpCgkJCWVuZAoKCQkJaWYgU2xpbWVCdWRkaWVzRW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiU2xpbWUiLCAiU2xpbWUgQnVkZGllcyIpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIlNsaW1lIiwgIlNsaW1lIEJ1ZGRpZXMiLCB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCgkJCWVuZAoKCQkJaWYgQ3J5c3RhbEFybWFtZW50RW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiQ3J5c3RhbCIsICJDcnlzdGFsIEFybWFtZW50IikKCQkJCURNOkludm9rZVNlcnZlcigiQ3J5c3RhbCIsICJDcnlzdGFsIEFybWFtZW50Iiwge0xhc3RQb3NpdGlvbiA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uICsgVmVjdG9yMy5uZXcoMCwgMTUsIDApfSkKCQkJZW5kCgoJCQlpZiBHcmF2aXRhbEdsb2JlRW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiR3Jhdml0eSIsICJHcmF2aXRhbCBHbG9iZSIpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIkdyYXZpdHkiLCAiR3Jhdml0YWwgR2xvYmUiLCB7bGFzdFBvcyA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uICsgVmVjdG9yMy5uZXcoMCwgMTUsIDApfSkKCQkJZW5kCgoJCQlpZiBHcmF2aXRhdGlvbmFsRmllbGRFbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJHcmF2aXR5IiwgIkdyYXZpdGF0aW9uYWwgRmllbGQiKQoJCQkJRE06SW52b2tlU2VydmVyKCJHcmF2aXR5IiwgIkdyYXZpdGF0aW9uYWwgRmllbGQiLCB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgLSBWZWN0b3IzLm5ldygwLCAxNSwgMCkpCgkJCWVuZAoKCQkJaWYgQW1hdXJvdGljTGFtYmVudEVuYWJsZWQgYW5kIGZmKCkgPT0gZmFsc2UgdGhlbgoJCQkJRENNOkZpcmVTZXJ2ZXIoIkxpZ2h0IiwgIkFtYXVyb3RpYyBMYW1iZW50IikKCQkJCURNOkludm9rZVNlcnZlcigiTGlnaHQiLCAiQW1hdXJvdGljIExhbWJlbnQiLCB7bGFzdFBvcyA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9ufSkKCQkJZW5kCgoJCQlpZiBBYmxhemVKdWRnZW1lbnRIYWNrRW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiTGlnaHQiLCAiQWJsYXplIEp1ZGdlbWVudCIpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIkxpZ2h0IiwgIkFibGF6ZSBKdWRnZW1lbnQiLCB7T3JpZ2luID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBWZWN0b3IzLm5ldygwLCAyNSwgMCksIG9yYlBvcyA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gVmVjdG9yMy5uZXcoMCwgMTAsIDApfSkKCQkJZW5kCgoJCQlpZiBWb2lkT3BlbmluZ0hhY2tFbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJWb2lkIiwgIlZvaWQgT3BlbmluZyIpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIlZvaWQiLCAiVm9pZCBPcGVuaW5nIiwge3BvcyA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gVmVjdG9yMy5uZXcoMCwgMTUwLCAwKX0pCgkJCWVuZAoKCQkJaWYgU2tlbGV0b25HcmFiRW5hYmxlZCB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiTmlnaHRtYXJlIiwgIlNrZWxldG9uIEdyYWIiKQoJCQkJRE06SW52b2tlU2VydmVyKCJOaWdodG1hcmUiLCAiU2tlbGV0b24gR3JhYiIsIHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKCQkJZW5kCgoJCQlpZiBHZW5lc2lzUmF5RW5hYmxlZCB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiVGltZSIsICJHZW5lc2lzIFJheSIsIHBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikKCQkJCURNOkludm9rZVNlcnZlcigiVGltZSIsICJHZW5lc2lzIFJheSIsIHtsdiA9IFZlY3RvcjMubmV3KDAsIDAsIDApLCBjaGFyZ2UgPSBHUkNoYXJnZX0pCgkJCWVuZAoKCQkJaWYgVGhlV29ybGRFbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJUaW1lIiwgIlRoZSBXb3JsZCIsIHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKQoJCQkJRE06SW52b2tlU2VydmVyKCJUaW1lIiwgIlRoZSBXb3JsZCIsIHtyaGl0ID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQsIG5vcm0gPSBWZWN0b3IzLm5ldygwLCAwLCAwKSwgcnBvcyA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9ufSkKCQkJZW5kCgoJCQlpZiBQb2xhcmlzRW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiQXVyb3JhIiwgIlBvbGFyaXMiKQoJCQkJRE06SW52b2tlU2VydmVyKCJBdXJvcmEiLCAiUG9sYXJpcyIsIHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKCQkJZW5kCgoJCQlpZiBDb250cm9sbGVkRWNob2VzRW5hYmxlZCBhbmQgRWNob2VzUGhhc2Ugfj0gbmlsIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJTb3VuZCIsICJFY2hvZXMiKQoJCQkJRE06SW52b2tlU2VydmVyKCJTb3VuZCIsICJFY2hvZXMiLCB7RWNob2VzUGhhc2UsIHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9ufSkKCQkJZW5kCgoJCQlpZiBTaGF0dGVyaW5nRXJ1cHRpb25FbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJFeHBsb3Npb24iLCAiU2hhdHRlcmluZyBFcnVwdGlvbiIpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIkV4cGxvc2lvbiIsICJTaGF0dGVyaW5nIEVydXB0aW9uIiwgdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQoJCQllbmQKCgkJCWlmIElsbHVzaXZlQXRha2VFbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCURDTTpGaXJlU2VydmVyKCJJbGx1c2lvbiIsICJJbGx1c2l2ZSBBdGFrZSIpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIklsbHVzaW9uIiwgIklsbHVzaXZlIEF0YWtlIiwgdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQoJCQllbmQKCgkJCWlmIEV0aGVyZWFsQWN1bWVuRW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiSWxsdXNpb24iLCAiRXRoZXJlYWwgQWN1bWVuIikKCQkJCURNOkludm9rZVNlcnZlcigiSWxsdXNpb24iLCAiRXRoZXJlYWwgQWN1bWVuIiwgdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQoJCQllbmQKCgkJCWlmIEZvcm1pZGFibGVSb2FyRW5hYmxlZCBhbmQgZmYoKSA9PSBmYWxzZSB0aGVuCgkJCQlEQ006RmlyZVNlcnZlcigiRHJhZ29uIiwgIkZvcm1pZGFibGUgUm9hciIpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIkRyYWdvbiIsICJGb3JtaWRhYmxlIFJvYXIiLCB7dGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLCAxNzV9KQoJCQllbmQKCgkJCWlmIFRveGljQmFzaWxpc2tFbmFibGVkIGFuZCBmZigpID09IGZhbHNlIHRoZW4KCQkJCXBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5BbmNob3JlZCA9IHRydWUKCQkJCURDTTpGaXJlU2VydmVyKCJBY2lkIiwgIlRveGljIEJhc2lsaXNrIikKCQkJCURNOkludm9rZVNlcnZlcigiQWNpZCIsICJUb3hpYyBCYXNpbGlzayIsIHtEaXJlY3Rpb24gPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUsIEZsb29yID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lfSkKCQkJCXdhaXQoMTcuNSkKCQkJCWlmIEZyZWV6ZUVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJCXBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5BbmNob3JlZCA9IGZhbHNlCgkJCQllbmQKCQkJZW5kCgoJCQlpZiBBcmNhbmVHdWFyZGlhbkVuYWJsZWQgYW5kIGZmKCkgPT0gZmFsc2UgdGhlbgoJCQkJRENNOkZpcmVTZXJ2ZXIoIkFuZ2VsIiwgIkFyY2FuZSBHdWFyZGlhbiIpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIkFuZ2VsIiwgIkFyY2FuZSBHdWFyZGlhbiIsIHtQb3NpdGlvbiA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uICsgVmVjdG9yMy5uZXcoMCwgNTAsIDApfSkKCQkJZW5kCgoJCQlpZiBTcGxpdHRpbmdTbGltZUVuYWJsZWQgYW5kIGZmKCkgPT0gZmFsc2UgdGhlbgoJCQkJRENNOkZpcmVTZXJ2ZXIoIlNsaW1lIiwgIlNwbGl0dGluZyBTbGltZSIpCgkJCQlETTpJbnZva2VTZXJ2ZXIoIlNsaW1lIiwgIlNwbGl0dGluZyBTbGltZSIsIHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAtIFZlY3RvcjMubmV3KDAsIDIwLCAwKSkKCQkJZW5kCgoJCQlpZiBWaXJ0dWFsWm9uZUVuYWJsZWQgYW5kIGZmKCkgPT0gZmFsc2UgdGhlbgoJCQkJRENNOkZpcmVTZXJ2ZXIoIlRlY2hub2xvZ3kiLCAiVmlydHVhbCBab25lIikKCQkJCURNOkludm9rZVNlcnZlcigiVGVjaG5vbG9neSIsICJWaXJ0dWFsIFpvbmUiLCB7dGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24sIFZlY3RvcjMubmV3KDAsIDAsIDApfSkKCQkJZW5kCgkJZW5kCgoJCS0tW1tsb2NhbCBmdW5jdGlvbiBCZWdpblRyYWNraW5nKCkKCQkJbG9jYWwgYyA9IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuQ3VycmVudENhbWVyYQoJCQlsb2NhbCBoYiA9IGdhbWU6R2V0U2VydmljZSgiUnVuU2VydmljZSIpLkhlYXJ0YmVhdAoJCQlsb2NhbCBtID0gcGxheWVyOkdldE1vdXNlKCkKCQkJbG9jYWwgcCA9IGM6V29ybGRUb1NjcmVlblBvaW50KHBsYXllcnNbdGFyZ2V0XS5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikKCQkJaGI6Y29ubmVjdChmdW5jdGlvbihzdGVwKQoJCQkJbW91c2Vtb3ZlYWJzKHAuWCwgKHAuWSArIDI1KSkKCQkJZW5kKQoJCWVuZF1dIC0tIEZvciBBaW1ib3QsIGN1cnJlbnRseSB1bmRlciBkZXZlbG9wbWVudAoKCQktLSBVSVMKCgkJbG9jYWwgVUlTID0gZ2FtZTpHZXRTZXJ2aWNlKCJVc2VySW5wdXRTZXJ2aWNlIikKCQlsb2NhbCB0ZXJtaW5hdGV1aXMgPSBmYWxzZQoJCWxvY2FsIGNvbm5lY3Rpb24KCgkJY29ubmVjdGlvbiA9IFVJUy5JbnB1dEJlZ2FuOmNvbm5lY3QoZnVuY3Rpb24oaW5wdXQsIGdwKQoJCQlpZiBub3QgdGVybWluYXRldWlzIHRoZW4KCQkJCWlmIG5vdCBncCB0aGVuCgkJCQkJbG9jYWwgdGFyZ2V0Q2hyID0gZ2FtZS5QbGF5ZXJzW3RhcmdldF0uQ2hhcmFjdGVyCgoJCQkJCWlmIGlucHV0LktleUNvZGUgPT0gRW51bS5LZXlDb2RlLkJhY2tTbGFzaCB0aGVuCgkJCQkJCWNvbW1hbmRCb3g6Q2FwdHVyZUZvY3VzKCkKCQkJCQkJd2FpdCgpCgkJCQkJCWlmIHN0cmluZy5zdWIoY29tbWFuZEJveC5UZXh0LCBzdHJpbmcubGVuKGNvbW1hbmRCb3guVGV4dCksIHN0cmluZy5sZW4oY29tbWFuZEJveC5UZXh0KSkgPT0gIlxcIiB0aGVuCgkJCQkJCQljb21tYW5kQm94LlRleHQgPSBzdHJpbmcuc3ViKGNvbW1hbmRCb3guVGV4dCwgMSwgc3RyaW5nLmxlbihjb21tYW5kQm94LlRleHQpIC0gMSkKCQkJCQkJZW5kCgkJCQkJLS1bW2Vsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5MIHRoZW4KCQkJCQkJdG9nZ2xlQWltYm90KCldXQoJCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5DIHRoZW4KCQkJCQkJZXhwbG9pdCgpCgkJCQkJZWxzZWlmIGlucHV0LktleUNvZGUgPT0gRW51bS5LZXlDb2RlLlUgdGhlbgoJCQkJCQlUUFRvVGFyZ2V0KCkKCQkJCQllbHNlaWYgaW5wdXQuS2V5Q29kZSA9PSBFbnVtLktleUNvZGUuSyB0aGVuCgkJCQkJCUFudGlCbGluZEZ1bmMoKQoJCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5UIHRoZW4KCQkJCQkJYmVnaW5TcGVlZCgpCgkJCQkJZWxzZWlmIGlucHV0LktleUNvZGUgPT0gRW51bS5LZXlDb2RlLlggdGhlbgoJCQkJCQlpZiBTcGVjdHJhbEVtYm9kaW1lbnRFbmFibGVkIHRoZW4KCQkJCQkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIlNwaXJpdCIsICJTcGVjdHJhbCBFbWJvZGltZW50IikKCQkJCQkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiU3Bpcml0IiwgIlNwZWN0cmFsIEVtYm9kaW1lbnQiKQoJCQkJCQllbmQKCQkJCQllbHNlaWYgaW5wdXQuS2V5Q29kZSA9PSBFbnVtLktleUNvZGUuUCB0aGVuCgkJCQkJCWlmIFNhbnNUZWxlcG9ydEVuYWJsZWQgdGhlbgoJCQkJCQkJaWYgZ2FtZS5QbGFjZUlkID09IDU2NjM5OTI0NCBvciBnYW1lLlBsYWNlSWQgPT0gMjU2OTYyNTgwOSB0aGVuCgkJCQkJCQkJbG9jYWwgU2Fuc1BvcyA9IENGcmFtZS5uZXcoLTE2ODUuOTEwNTIsIDIzMC4wMzUxMjYsIC0xODEuNzk4MjY0KQoJCQkJCQkJCWxvY2FsIFNhbnNBbmdsZXMgPSBDRnJhbWUuQW5nbGVzKDAsIG1hdGgucmFkKDIwKSwgMCkKCgkJCQkJCQkJcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IFNhbnNQb3MgKiBTYW5zQW5nbGVzCgkJCQkJCQkJcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZDpDaGFuZ2VTdGF0ZShFbnVtLkh1bWFub2lkU3RhdGVUeXBlLkNsaW1iaW5nKQoJCQkJCQkJCXdhaXQoKQoJCQkJCQkJCXBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5BbmNob3JlZCA9IHRydWUKCQkJCQkJCQl3YWl0KDEpCgkJCQkJCQkJaWYgbm90IEZyZWV6ZUVuYWJsZWQgdGhlbgoJCQkJCQkJCQlwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQW5jaG9yZWQgPSBmYWxzZQoJCQkJCQkJCWVuZAoJCQkJCQkJZW5kCgkJCQkJCWVuZAoJCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5aIHRoZW4KCQkJCQkJYmVnaW5OdWxsaWZ5Rm9yY2VzKCkKCQkJCQllbHNlaWYgaW5wdXQuS2V5Q29kZSA9PSBFbnVtLktleUNvZGUuRyB0aGVuCgkJCQkJCUFudGlHcmF2aXR5RnVuYygpCgkJCQkJZWxzZWlmIGlucHV0LktleUNvZGUgPT0gRW51bS5LZXlDb2RlLkogdGhlbgoJCQkJCQlpZiBDbGlja1RQRW5hYmxlZCB0aGVuCgkJCQkJCQljbGlja3RwKG1vdXNlLkhpdCkKCQkJCQkJZW5kCgkJCQkJZWxzZWlmIGlucHV0LktleUNvZGUgPT0gRW51bS5LZXlDb2RlLkYgdGhlbgoJCQkJCQlGcmVlemVGdW5jKCkKCQkJCQllbHNlaWYgaW5wdXQuS2V5Q29kZSA9PSBFbnVtLktleUNvZGUuQmFja3F1b3RlIHRoZW4KCQkJCQkJaWYgRmxhc2hFbmFibGVkIHRoZW4KCQkJCQkJCWxvbmdmbGFzaCgpCgkJCQkJCWVuZAoJCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5WIHRoZW4KCQkJCQkJdmlldygpCgkJCQkJZWxzZWlmIGlucHV0LktleUNvZGUgPT0gRW51bS5LZXlDb2RlLkIgdGhlbgoJCQkJCQl0b2dnbGVFU1AoKQoJCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5NIHRoZW4KCQkJCQkJdG9nZ2xlRVNQR29sZCgpCgkJCQkJZWxzZWlmIGlucHV0LktleUNvZGUgPT0gRW51bS5LZXlDb2RlLkxlZnRCcmFja2V0IHRoZW4KCQkJCQkJaWYgbm90IGNsb3NlZGZvcmV2ZXIgdGhlbgoJCQkJCQkJaWYgbm90IGJ1dHRvbnNkZWJvdW5jZSB0aGVuCgkJCQkJCQkJYnV0dG9uc2RlYm91bmNlID0gdHJ1ZQoJCQkJCQkJCWlmIGJ1dHRvbnNvcGVuZWQgPT0gZmFsc2UgdGhlbgoJCQkJCQkJCQlidXR0b25zb3BlbmVkID0gdHJ1ZQoJCQkJCQkJCQlidXR0b25zbWFpbjpUd2VlblBvc2l0aW9uKAoJCQkJCQkJCQkJVURpbTIubmV3KDEsIDAsIDAuNjUsIDApLAoJCQkJCQkJCQkJIk91dCIsCgkJCQkJCQkJCQkiU2luZSIsCgkJCQkJCQkJCQkuNSwKCQkJCQkJCQkJCXRydWUKCQkJCQkJCQkJKQoJCQkJCQkJCWVsc2UKCQkJCQkJCQkJYnV0dG9uc29wZW5lZCA9IGZhbHNlCgkJCQkJCQkJCWJ1dHRvbnNtYWluOlR3ZWVuUG9zaXRpb24oCgkJCQkJCQkJCQlVRGltMi5uZXcoMS4yNSwgMCwgMC42NSwgMCksCgkJCQkJCQkJCQkiSW4iLAoJCQkJCQkJCQkJIlNpbmUiLAoJCQkJCQkJCQkJLjUsCgkJCQkJCQkJCQl0cnVlCgkJCQkJCQkJCSkKCQkJCQkJCQllbmQKCQkJCQkJCQl3YWl0KDEpCgkJCQkJCQkJYnV0dG9uc2RlYm91bmNlID0gZmFsc2UKCQkJCQkJCWVuZAoJCQkJCQllbmQKCQkJCQllbHNlaWYgaW5wdXQuS2V5Q29kZSA9PSBFbnVtLktleUNvZGUuUmlnaHRCcmFja2V0IHRoZW4KCQkJCQkJY29tbWFuZGRlYm91bmNlID0gdHJ1ZQoJCQkJCQlpZiBjb21tYW5kc29wZW5lZCA9PSBmYWxzZSB0aGVuCgkJCQkJCQljb21tYW5kc29wZW5lZCA9IHRydWUKCQkJCQkJCWNvbW1hbmRzbWFpbjpUd2VlblBvc2l0aW9uKAoJCQkJCQkJCVVEaW0yLm5ldygxLCAwLCAwLjQ1LCAwKSwKCQkJCQkJCQkiT3V0IiwKCQkJCQkJCQkiU2luZSIsCgkJCQkJCQkJLjUsCgkJCQkJCQkJdHJ1ZQoJCQkJCQkJKQoJCQkJCQllbHNlCgkJCQkJCQljb21tYW5kc29wZW5lZCA9IGZhbHNlCgkJCQkJCQljb21tYW5kc21haW46VHdlZW5Qb3NpdGlvbigKCQkJCQkJCQlVRGltMi5uZXcoMS4yNSwgMCwgMC40NSwgMCksCgkJCQkJCQkJIkluIiwKCQkJCQkJCQkiU2luZSIsCgkJCQkJCQkJLjUsCgkJCQkJCQkJdHJ1ZQoJCQkJCQkJKQoJCQkJCQllbmQKCQkJCQkJd2FpdCgxKQoJCQkJCQljb21tYW5kZGVib3VuY2UgPSBmYWxzZQoJCQkJCWVsc2VpZiBVSVM6SXNLZXlEb3duKEVudW0uS2V5Q29kZS5MZWZ0KSBhbmQgVUlTOklzS2V5RG93bihFbnVtLktleUNvZGUuUmlnaHQpIHRoZW4KCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlRoYW5rcyBmb3IgdXNpbmcgRUJHdWkhIgoJCQkJCQl3YWl0KDIpCgkJCQkJCWlmIGJ1dHRvbnNvcGVuZWQgPT0gdHJ1ZSB0aGVuCgkJCQkJCQl0ZXJtaW5hdGV1aXMgPSB0cnVlCgkJCQkJCQl0ZXJtRUJHdWkoKQoJCQkJCQkJY29ubmVjdGlvbjpEaXNjb25uZWN0KCkKCQkJCQkJZW5kCgkJCQkJZW5kCgkJCQllbmQKCQkJZW5kCgkJZW5kKQoKCQktLSBTY3JpcHRzIGFuZCBGdW5jdGlvbnMgRU5ECgoJCS0tIEVudHJhbmNlIEFuaW1hdGlvbgoKCQl3YWl0KDAuNSkKCgkJYnV0dG9uc21haW46VHdlZW5Qb3NpdGlvbigKCQkJVURpbTIubmV3KDEsIDAsIDAuNjUsIDApLAoJCQkiT3V0IiwKCQkJIlNpbmUiLAoJCQkuNSwKCQkJdHJ1ZQoJCSkKCgkJY29tbWFuZHNtYWluOlR3ZWVuUG9zaXRpb24oCgkJCVVEaW0yLm5ldygxLCAwLCAwLjQ1LCAwKSwKCQkJIk91dCIsCgkJCSJTaW5lIiwKCQkJLjUsCgkJCXRydWUKCQkpCgoJCS0tIEluZm8KCgkJcHJpbnQoW1sKCgkJXV0pCgkJd2FybigiR1VJIHN1Y2Nlc3NmdWxseSBsb2FkZWQhIikKCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiV2VsY29tZSB0byBFQkd1aSEiCgkJd2FpdCgyKQoJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXJyZW50IFRhcmdldCB8IChOb25lKSIKCWVuZCwgZnVuY3Rpb24oZSkKCQlsb2NhbCBjcmFzaCA9IHsKCQkJIkknbSBzbywgc28sIHNvIHNvIFNPIHNvcnJ5ISIsCgkJCSJXYXRlciBjb29saW5nPyBJIHByZWZlciBsYXZhIGNvb2xpbmcuIiwKCQkJIllvdXIgRUJHdWkgcmFuIGludG8gYSBwcm9ibGVtIGFuZCBuZWVkcyB0byByZXN0YXJ0LiIsCgkJCSJTVE9QIENvZGU6IDB4REVBREJFRUYiLAoJCQkiSXMgdGhpcyB3aGF0IGRldmVsb3BtZW50IGlzIGxpa2U/IEkgaGF0ZSBpdC4iLAoJCQkiVGhlIFVuc3RvcHBhYmxlIE1hcmNoaW5nIG9GIHRpTWUgdGhhdCBpcyBzbE93bHkgZ3VpZGluZyB1cyBhbGwgdE93YXJkcyBhbiBJbmV2aXRhQmxFIERFQVRILiBUaGF0IHNwZWxscyBcIlR1bSBGTS4gT3dPIE8sIEkgYmUgZGVhdGguXCIiLAoJCQkiSSBndWVzcyB5b3UgY291bGQgY2FsbCBtZSBhbiBcIk9vZXJcIi4iLAoJCQkiRXJyb3IgTWVzc2FnZSEiLAoJCQkiV2hvb3BzLCB3ZSdyZSBsb3cgb24gbWVtb3J5ISBUcnkgcmVtZW1iZXJpbmcgbGF0ZXIuIiwKCQkJIldob29wcywgd2UncmUgbG93IG9uIG1lbWVvcnkuIFRyeSBzZW5kaW5nIFBlcGVzIGxhdGVyLiIsCgkJCSJPa2F5LCB3aG8ga2lsbGVkIHRoZSBjb21wdXRlciBoYW1zdGVycz8iLAoJCQkiQ2FuJ3Qga2VlcCB1cCEgSXMgdGhlIHNjcmlwdCBvdmVybG9hZGVkLCBvciBoYXZlIHlvdSBtZWx0ZWQgeW91ciBDUFU/IiwKCQkJIk9oLCBjb25ncmF0dWxhdGlvbnMsICIgLi4gcGxheWVyLk5hbWUgLi4gIiwgeW91IGJyb2tlIGl0ISIsCgkJCSJJIHN3ZWFyIHRoYXQgd2FzIGludGVudGlvbmFsLiIsCgkJCSJJIHByb21pc2UgaXQgd29uJ3QgaGFwcGVuIGFnYWluLiIsCgkJCSJPa2F5LCBnb25uYSBiZSByZWFsLCBOTyBDTFVFIHdoYXQgd2VudCB3cm9uZyB0aGVyZS4iLAoJCQkiT2gsIG5vLCBuZXZlcm1pbmQsIEkga25vdyBleGFjdGx5IHdoYXQgd2VudCB3cm9uZy4iLAoJCQkiQSBwcmllc3QsIGEgbWluaXN0ZXIsIGFuZCBhIHJhYmJpdCB3YWxrIGludG8gYSBibG9vZCBiYW5rLiIsCgkJCSJUaGUgbnVyc2Ugb24gZHV0eSBhc2tzIHRoZSB0aHJlZSBmb3IgdGhlaXIgYmxvb2QgdHlwZSBncm91cCB0byBnZXQgdGhlbSBzZXQgdXAuIiwKCQkJIlRoZSBwcmllc3QsIGRpZ25pZmllZCwgc2F5cyBcIkknbSBBQiFcIi4iLAoJCQkiVGhlIG1pbmlzdGVyLCBpbmRpZmZlcmVudCwgcmVwbGllcyBcIkkgYmVsaWV2ZSBJJ20gdHlwZSBBLlwiIiwKCQkJIlRoZSByYWJiaXQsIHNoeWx5IGFuZCBuZXJ2b3VzbHksIGxvb2tzIGFyb3VuZCB0aGUgcm9vbSwgYmVmb3JlIGFubm91bmNpbmcsIFwiSSB0aGluayBJIG1pZ2h0IGJlIGEgdHlwZSBPLlwiLiIKCQl9CgoJCXByaW50KCctLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nKQoJCXByaW50KGNyYXNoW21hdGgucmFuZG9tKDEsI2NyYXNoKV0pCgkJcHJpbnQoJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLScpCgkJd2FybigiU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2l0aCBFQkd1aSEiKQoJCXByaW50KGUpCgkJcHJpbnQoIlRoaXMgY3Jhc2ggcmVwb3J0IHdhcyBnZW5lcmF0ZWQgb24gIiAuLiBvcy5kYXRlKCcleCAlWCcsb3MudGltZSgpKSAuLiAiIGFuZCB3aWxsIGJlIHNhdmVkIGluIHlvdXIgZXhlY3V0b3IncyBXb3Jrc3BhY2UgZm9sZGVyLiIpCgoJCWxvY2FsIHVmID0gb3MuZGF0ZSgiJXhfJVgiLG9zLnRpbWUoKSkKCQlsb2NhbCBkZiA9IHN0cmluZy5nc3ViKHVmLCIvIiwiLSIpCgkJbG9jYWwgZHRmID0gc3RyaW5nLmdzdWIoZGYsIjoiLCItIikKCgkJaWYgbm90IGlzZm9sZGVyKCJFQkd1aSIpIHRoZW4gbWFrZWZvbGRlcigiRUJHdWkiKSBlbmQKCQl3cml0ZWZpbGUoIkVCR3VpXFxDcmFzaER1bXAtIi4uZHRmLi4iLnR4dCIsCgoJCSItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuIiAuLiBjcmFzaFttYXRoLnJhbmRvbSgxLCNjcmFzaCldIC4uICJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiIgLi4KCgkJW1tFQkd1aSBzdG9wcGVkIGV4ZWN1dGluZyBiZWNhdXNlIGl0IGVuY291bnRlcmVkIGEgcHJvYmxlbSBpdCBkaWRuJ3Qga25vdyBob3cgdG8gaGFuZGxlLgoJCQpQbGVhc2UgcmVwb3J0IHRoaXMgY3Jhc2ggaW4gdGhlIERpc2NvcmQgYnkgZ29pbmcgdG8gI3JvYm90cy11bml0ZSBhbmQgb3BlbmluZyBhIHRpY2tldC5dXSAuLgoKCQkiLS0gQmVnaW4gRXJyb3IgUmVwb3J0IC0tXG4oR2VuZXJhdGVkIG9uICIgLi4gdWYgLi4gIilcblxuIiAuLgoKCQkiRXhlY3V0b3I6ICIgLi4gdG9zdHJpbmcoZXhlYykgLi4KCQkiXG5DbGllbnQgSUQ6ICIgLi4gdG9zdHJpbmcoY2xpZW50aWQpIC4uCgkJIlxuUGxhY2VJZDogIiAuLiB0b3N0cmluZyhnYW1lLlBsYWNlSWQpIC4uCgkJIlxuU21hcnRBdHRhY2sgRW5hYmxlZD86ICIgLi4gdG9zdHJpbmcoU21hcnRBdHRhY2spIC4uCgkJIlxuSXMgR29sZD86ICIgLi4gdG9zdHJpbmcoaXNHb2xkKSAuLiAKCQkiXG5JcyBNYXN0ZXI/OiAiIC4uIHRvc3RyaW5nKGlzTWFzdGVyKSAuLgoKCQkiXG5cbkVycm9yOiAiIC4uIGUgLi4KCQkiXG5BdDogIiAuLiBkZWJ1Zy50cmFjZWJhY2soKSAuLgoKCQkiXG5cbi0tIEVuZCBFcnJvciBSZXBvcnQgLS0iKQoJZW5kKQplbmQ="