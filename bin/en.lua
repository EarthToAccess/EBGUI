encui = "if not(game:IsLoaded()) then
	game.Loaded:Wait()
end

if (game.CoreGui:FindFirstChild("ebgui")) then
	game.CoreGui.ebgui:Destroy()
end

local clientid = game:GetService("RbxAnalyticsService"):GetClientId():lower()

local blocklist = {
	1877263133
}

local masterlist = {
	"6330575e-8b9c-4fb6-a42d-baa5556b6e99"
}

local keylist = {
	["Standard"] = "278612_VrPYvYkB30_012023",
	["Gold"] = {
		["Main"] = "G_157345_V8UwBfvo3j_012023",
		["Promo"] = {
			["wellfed"] = {
				["Key"] = "P_525168_WtYFlhaAvq_012023",
				["Time"] = 1675468800
			},
			["noannounce"] = {
				["Key"] = "P_538782_nD43VxHotD_012023",
				["Time"] = 1677906000
			}
		}
	}
}

local players = game:GetService("Players")
local player = players.LocalPlayer
local RSR = game.ReplicatedStorage:WaitForChild("Remotes")
local ID = player.UserId
local isBlocked = false
local isMaster = false
local isGold = false
local hasKey = false
local verNum = "v3.1.2"

if EBGuiGold == nil then else
	if EBGuiGold == keylist.Gold.Main then
		isGold = true
	else
		for i,v in pairs(keylist.Gold.Promo) do
			if EBGuiGold == v.Key and os.time() < v.Time then
				isGold = true
				break
			end
		end
	end
end

if EBGuiKey ~= nil then
	if EBGuiKey == keylist.Standard then 
		hasKey = true
	else end
else end

for i,v in pairs(blocklist) do
    if v == ID then
        isBlocked = true
        break
    end
end

for i,v in pairs(masterlist) do
    if v:lower() == clientid then
        isMaster = true
        break
    end
end

if isBlocked then
    warn("╔════════════════[[ ATTENTION ]]════════════════╗")
    warn("║                                                           ║")
    warn("║              This account has been blocked.               ║")
    warn("║    Please visit the EBGui Discord for more information.   ║")
    warn("║                                                           ║")
    warn("╚═══════════════════════════════════════════╝")
	game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("I just tried to turn on exploits while being blocked from using the script! I'm big, fat, and stupid!","All")
elseif not (EBGuiKey or isBlocked or isMaster or isGold) then
    warn("╔════════════════[[ ATTENTION ]]════════════════╗")
    warn("║                                                           ║")
    warn("║       You don't have the unlock key in your script.       ║")
    warn("║       You'll need to find the appropriate key first.      ║")
    warn("║                                                           ║")
    warn("╚═══════════════════════════════════════════╝")
elseif ((not hasKey) and (not isGold)) and not (isBlocked or isMaster) then
	warn("╔════════════════[[ ATTENTION ]]════════════════╗")
    warn("║                                                           ║")
    warn("║               Your unlock key is incorrect.               ║")
    warn("║       You'll need to find the appropriate key first.      ║")
    warn("║                                                           ║")
    warn("╚═══════════════════════════════════════════╝")
else
	xpcall(function()
		local dumbQuotes = {
			"Jeez, when'd it get so hot in here?",
			"Is it just me or is that *too* blue?",
			"Like taking candy from a baby.",
			"Deez nuts are too square!",
			"Also try Minecraft!",
			"Also try Terraria!",
			"Meh, I liked Risk of Rain 2 better.",
			"You need a fairly high IQ to understand EBGui.",
			"Jake, from State Farm?!",
			"What would *you* do for a Klondike bar?",
			"Now with 100% more Gold!",
			"Made in Lua!",
			"IF %ERRORLEVEL% EQU 1 GOTO:EOF",
			"bruh nerf solar already",
			"Because the devs won't do it.",
			"Petition YOUR local developer for more updates!",
			"why are you buying clothes at the soup store",
			"I just wanna be a normal GUI with normal knees.",
			":(){:|:&};:",
			"C:\\DOS. C:\\DOS\\RUN RUN\\DOS\\RUN.",
			"LuaU; Because normal Lua was just too easy.",
			"ilko.,uyukijy,hghytfree3vfgw32wqqwq",
			"Sorry for that one quote. My cat got on my keyboard.",
			"I don't actually have a cat.",
			"This sentence is false.",
			"Well now, " .. player.Name .. ", don't we have a predicament!",
			"Jee, Bill, how come your mom lets you have TWO weiners?!",
			"I'd like to thank my mom and my dad,",
			"Y'know they really gotta start patching more.",
			"Nice to meet you Rose. Run for your life!",
			"How hard would it be to exploit a new spell in?",
			"How bad can I be? I'm just doing what's best for the economy.",
			"Zoo wee mama!",
			"Wubba lubba dub dub!",
			"I'm gonna go eat worms.",
			"Cats sweat through the pads of their paws.",
			"When cats are first born, they have blue eyes. Over time, the color changes.",
			"The town of Talkeetna, Alaska, had a cat as a mayor for 15 years.",
			"No nation, by law, is allowed to own the Moon.",
			"In Italy, it's considered bad luck to lay bread upside down.",
			"attempt to index nil with nil!",
			"OMAN I AM NOT GOOD WITH COMPUTER PLZ TO HALP",
			"What did you just say about me?",
			"LIVING IN YOUR WALLS",
			"game:HttpGet(\"https://youaranidiot.org\")",
			"A man's fallen into the river in Lego City!",
			"If you find any typos in these quotes, no you dodn't",
			"Since 2021!",
			"Have you subscribed to Gold?",
			"Let's Go Gold.",
			"Toasters toast toast!",
			"Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo.",
			"You're shooting for the stars, but you forgot to build your rocket.",
			"You're shooting for the stars, but you gotta build the telescope first.",
			"Just one small positive thought in the morning has the potential to change your whole day.",
			"Opportunities don't just happen, you create them.",
			"F.I.S.H. Forget It, Stuff Happens.",
			"You insecure turd hammer!",
			"Glad to see you won the Darwin Award!",
			"You donut.",
			"You houseplant.",
			"Hello, everybody, my name is Markiplier.",
			"VSauce, Michael here.",
			"Fudning for this program was made possible by contributions from viewers like you.",
			"Sponsored by OpenAI! But not really.",
			"A damn artificial intelligence taught me how to program, I'm absolutely livid",
			"Don't care, didn't ask, cry about it, stay mad, get real, L, mald, seethe, cope",
			"This is DougDoug, where we solve problems that nobody has.",
			"Paid for through the embezzlement of lemons.",
			"I'm wanted in numerous countries for war crimes!",
			"I got a rock.",
			"Hello, Mx. " .. player.Name .. ", and welcome to Konpeki Plaza.",		
		}

		local friendlyDate = os.date("%b %d")
		if friendlyDate == "Dec 25" then
			print("MERRY CHRISTMAS!")
		elseif friendlyDate == "Aug 21" then
			print("HAPPY BIRTHDAY!")
		elseif friendlyDate == "Oct 03" then
			print("Tell Earth you said happy birthday!")
		elseif friendlyDate == "Oct 31" then
			print("IS SPOOKY MONTH!")
		elseif friendlyDate == "Jan 01" then
			print("HAPPY NEW YEAR!")
		elseif friendlyDate == "Feb 14" then
			print("Give your love the gift of Gold.")
		elseif friendlyDate == "Apr 01" then
			print("You feel a chill go down your spine.")
		elseif friendlyDate == "Jul 04" then
			print("'MURICA!!!!!!!!!!")
		end

		warn([[----------------
				______ _____ _____       _ 
				|  ___| ___ \  __ \     (_)
				| |__ | |_/ / |  \/_   _ _ 
				|  __|| ___ \ | __| | | | |
				| |___| |_/ / |_\ \ |_| | |
				\____/\____/ \____/\__,_|_|  ]]..verNum)
		warn("----------------")
		print("------------------------")
		print(dumbQuotes[math.random(1,#dumbQuotes)])
		print("------------------------")
		warn("Welcome to EBGui, " .. player.Name .. "!")
		warn("You're on the Stable branch of EBGui")
		warn("Questions or concerns? Let us know in the Discord,")
		warn("or email Earth himself at earthtoaccess@gmail.com!")
		wait(0.5)
		
		if isMaster then
			warn("---------------------------------------------------------")   
			warn("Loaded in using the Master List! Overriding access given.")
			warn("---------------------------------------------------------")
		end

		if isGold then
			print([[				____             ___      ___ 
			6MMMMb/           `MM      `MM 
			8P    YM            MM       MM 
			6M      Y   _____    MM   ____MM 
			MM         6MMMMMb   MM  6MMMMMM 
			MM        6M'   `Mb  MM 6M'  `MM 
			MM     ___MM     MM  MM MM    MM 
			MM     `M'MM     MM  MM MM    MM 
			YM      M MM     MM  MM MM    MM 
			8b    d9 YM.   ,M9  MM YM.  ,MM 
			YMMMM9   YMMMMM9  _MM_ YMMMMMM_]])
			warn("Thank you for being a GOLDEN member!")
			warn('Enjoy the various "overpowered" scripts we have in store!')
		end

		-- GUI Instances, Events and Functions

		local ebgui = Instance.new("ScreenGui")
		ebgui.Name = "ebgui"
		ebgui.Parent = game:WaitForChild("CoreGui")


		local ESPInfo = {
			["Standard"] = {
				["NameTag"] = nil,
				["Enabled"] = false
			},
			["Gold"] = {
				["NameTag"] = nil,
				["Enabled"] = false
			},
			["MaxDist"] = {
				["Value"] = 750,
				["Enabled"] = true
			}
		}

		local mvtg = {
			["AoEs"] = {
				["Fire"] = {
					["Value"] = false,
					["Text"] = "Instant Blaze Column (Off)",
					["InitText"] = "Instant Blaze Column (Off)",
					["Button"] = nil
				},
				["Storm"] = {
					["Value"] = false,
					["Text"] = "Instant Lightning Dispersion (Off)",
					["InitText"] = "Instant Lightning Dispersion (Off)",
					["Button"] = nil
				},			
				["Nature"] = {
					["Value"] = false,
					["Text"] = "Instant Vine Trap (Off)",
					["InitText"] = "Instant Vine Trap (Off)",
					["Button"] = nil
				},
				["Plasma"] = {
					["Value"] = false,
					["Text"] = "Instant Plasma Implosion (Off)",
					["InitText"] = "Instant Plasma Implosion (Off)",
					["Button"] = nil
				},
				["Gravity"] = {
					["Value"] = false,
					["Text"] = "Gravitational Field Hack (Off)",
					["InitText"] = "Gravitational Field Hack (Off)",
					["Button"] = nil
				},
				["Light"] = {
					["Value"] = false,
					["Text"] = "Amaurotic Lambent Hack (Off)",
					["InitText"] = "Amaurotic Lambent Hack (Off)",
					["Button"] = nil
				},
				["Darkness"] = {
					["Value"] = false,
					["Text"] = "Instant Murky Missiles (Off)",
					["InitText"] = "Instant Murky Missiles (Off)",
					["Button"] = nil
				},
				["Nightmare"] = {
					["Value"] = false,
					["Text"] = "Instant Skeleton Grab (Off) [AIMED]",
					["InitText"] = "Aimed Instant Skeleton Grab (Off)",
					["Button"] = nil
				},
				["Time"] = {
					["Value"] = false,
					["Text"] = "Amplified Genesis Ray (Off)",
					["InitText"] = "Amplified Genesis Ray (Off)",
					["Button"] = nil
				},
				["Chaos"] = {
					["Value"] = false,
					["Text"] = "Space-Time Rupture Hack (Off)",
					["InitText"] = "Space-Time Rupture Hack (Off)",
					["Button"] = nil
				},
				["Illusion"] = {
					["Value"] = false,
					["Text"] = "Illusive Atake Hack (Off)",
					["InitText"] = "Illusive Atake Hack (Off)",
					["Button"] = nil
				},
				["Dragon"] = {
					["Value"] = false,
					["Text"] = "Formidable Roar Hack (Off)",
					["InitText"] = "Formidable Roar Hack (Off)",
					["Button"] = nil
				},
				["Slime"] = {
					["Value"] = false,
					["Text"] = "Splitting Slime Hack (Off)",
					["InitText"] = "Splitting Slime Hack (Off)",
					["Button"] = nil
				},
				["Creation"] = {
					["Value"] = false,
					["Text"] = "Instant Chain Hack (Off)",
					["InitText"] = "Instant Chain Hack (Off)",
					["Button"] = nil
				}
			},
			["Bullets"] = {
				["Storm"] = {
					["Value"] = false,
					["Text"] = "Barrage Hack (Off)",
					["InitText"] = "Barrage Hack (Off)",
					["Button"] = nil
				},
				["Spirit"] = {
					["Value"] = false,
					["Text"] = "Vigor Gyration Hack (Off)",
					["InitText"] = "Vigor Gyration Hack (Off)",
					["Button"] = nil
				},
				["Light"] = {
					["Value"] = false,
					["Text"] = "Light Orbs Hack (Off)",
					["InitText"] = "Light Orbs Hack (Off)",
					["Button"] = nil
				},
				["Space"] = {
					["Value"] = false,
					["Text"] = "Ateroids Belt Hack (Off)",
					["InitText"] = "Ateroids Belt Hack (Off)",
					["Button"] = nil
				},
				["Technology"] = {
					["Value"] = false,
					["Text"] = "Hyperang Hack (Off)",
					["InitText"] = "Hyperang Hack (Off)",
					["Button"] = nil
				},
				["Solar"] = {
					["Value"] = false,
					["Text"] = "Dying Star Hack (Off)",
					["InitText"] = "Dying Star Hack (Off)",
					["Button"] = nil
				}
			},
			["Blasts"] = {
				["Storm"] = {
					["Value"] = false,
					["Text"] = "Explode at Mouse (Off)",
					["InitText"] = "Explode at Mouse (Off)",
					["Button"] = nil
				},
				["Spectrum"] = {
					["Value"] = false,
					["Text"] = "Holobeam Camera Attach (Off)",
					["InitText"] = "Holobeam Camera Attach (Off)",
					["Button"] = nil
				},
				["Sound"] = {
					["Value"] = false,
					["Text"] = "Controlled Echoes (Off)",
					["InitText"] = "Controlled Echoes (Off)",
					["Button"] = nil
				},
				["Technology"] = {
					["Value"] = false,
					["Text"] = "Orbital Strike Hack (Off)",
					["InitText"] = "Orbital Strike Hack (Off)",
					["Button"] = nil
				},
				["Solar"] = {
					["Value"] = false,
					["Text"] = "Instant Double Ray (Off)",
					["InitText"] = "Instant Double Ray (Off)",
					["Button"] = nil
				}
			},
			["Teleports"] = {
				["Earth"] = {
					["Value"] = false,
					["Text"] = "Instant Rock Fist (Off)",
					["InitText"] = "Instant Rock Fist (Off)",
					["Button"] = nil
				},
				["Storm"] = {
					["Value"] = false,
					["Text"] = "Long Flash (Off) [` to use]",
					["InitText"] = "Long Flash (Off) [` to use]",
					["Button"] = nil
				},
				["Explosion"] = {
					["Value"] = false,
					["Text"] = "Instant Leap Stun (Off)",
					["InitText"] = "Instant Leap Stun (Off)",
					["Button"] = nil
				},
				["Technology"] = {
					["Value"] = false,
					["Text"] = "Tech Disc Hack (Off)",
					["InitText"] = "Tech Disc Hack (Off)",
					["Button"] = nil
				}
			},
			["Ults"] = {
				["Light"] = {
					["Value"] = false,
					["Text"] = "Ablaze Judgement Hack (Off)",
					["InitText"] = "Ablaze Judgement Hack (Off)",
					["Button"] = nil
				},
				["Void"] = {
					["Value"] = false,
					["Text"] = "Void Opening Hack (Off)",
					["InitText"] = "Void Opening Hack (Off)",
					["Button"] = nil
				},
				["Time"] = {
					["Value"] = false,
					["Text"] = "The World Hack (Off)",
					["InitText"] = "The World Hack (Off)",
					["Button"] = nil
				},
				["Reaper"] = {
					["Value"] = false,
					["Text"] = "Reaper's Rage Hack (Off)",
					["InitText"] = "Reaper's Rage Hack (Off)",
					["Button"] = nil
				},
				["Aurora"] = {
					["Value"] = false,
					["Text"] = "Polaris Hack (Off)",
					["InitText"] = "Polaris Hack (Off)",
					["Button"] = nil
				},
				["Explosion"] = {
					["Value"] = false,
					["Text"] = "Instant Shattering Eruption (Off)",
					["InitText"] = "Instant Shattering Eruption (Off)",
					["Button"] = nil
				},
				["Illusion"] = {
					["Value"] = false,
					["Text"] = "Ethereal Acumen Hack (Off)",
					["InitText"] = "Ethereal Acumen Hack (Off)",
					["Button"] = nil
				},
				["Acid"] = {
					["Value"] = false,
					["Text"] = "Toxic Basilisk Hack (Off)",
					["InitText"] = "Toxic Basilisk Hack (Off)",
					["Button"] = nil
				},
				["Angel"] = {
					["Value"] = false,
					["Text"] = "Arcane Guardian Hack (Off)",
					["InitText"] = "Arcane Guardian Hack (Off)",
					["Button"] = nil
				},
				["Technology"] = {
					["Value"] = false,
					["Text"] = "Virtual Zone Hack (Off)",
					["InitText"] = "Virtual Zone Hack (Off)",
					["Button"] = nil
				},
				["Solar"] = {
					["Value"] = false,
					["Text"] = "Solar Stick Bug (Off)",
					["InitText"] = "Solar Stick Bug (Off)",
					["Button"] = nil
				},
			},
			["Misc"] = {
				["SlimeHeal"] = {
					["Value"] = false,
					["Text"] = "Slime Buddies Hack (Off)",
					["InitText"] = "Slime Buddies Hack (Off)",
					["Button"] = nil
				},
				["Inertia"] = {
					["Value"] = false,
					["Text"] = "Inertia Gravity (Off)",
					["InitText"] = "Inertia gravity (Off)",
					["Button"] = nil
				},
				["Invis"] = {
					["Value"] = false,
					["Text"] = "Spectral Embodiment Keybind (Off) [X]",
					["InitText"] = "Spectral Embodiment Keybind (Off) [X]",
					["Button"] = nil
				},
				["InfSprint"] = {
					["Value"] = false,
					["Text"] = "Infinite Sprint (Off)",
					["InitText"] = "Infinite Sprint (Off)",
					["Button"] = nil
				}

			}
		}

		game.CoreGui.ChildRemoved:connect(function(child)
			if child.Name == "ebgui" then
				closedforever = true
				buttonsopened = false
				commandsopened = false
				buttonsdebounce = true
				commanddebounce = true
				terminateuis = true
				UIS = nil
				SlimeBuddiesEnabled = nil
				CrystalArmamentEnabled = nil
				AntiBlindEnabled = nil
				AntiLagEnabled = nil
				SpeedhackEnabled = nil
				SetSpeed = nil
				IgnorePhysicsEnabled = nil
				AntiGravityEnabled = nil
				InertiaGravityEnabled = nil
				ClickTPEnabled = nil
				FreezeEnabled = nil
				viewing = nil
				TPTargetEnabled = nil
				LoopTPTargetEnabled = nil
				TPShardsEnabled = nil
				TPDiamondsEnabled = nil
				AimbotEnabled = nil
				ESPInfo.MaxDist.Value = 750
				ESPInfo.MaxDist.Enabled = true
				AltFarmEnabled = nil
				EchoesAuto = nil
				AntiAfk = true
			end
		end)

		local mouse = player:GetMouse()

		local borders = {}

		local buttonsmain = Instance.new("Frame")
		buttonsmain.Name = "buttonsmain"
		buttonsmain.Position = UDim2.new(1.25, 0, 0.65, 0)
		buttonsmain.Size = UDim2.new(0.4, 0, 0.225, 0)
		table.insert(borders, buttonsmain)

		buttonsdebounce = false
		buttonsopened = true

		local commandsmain = Instance.new("Frame")
		commandsmain.Name = "commandsmain"
		commandsmain.Position = UDim2.new(1.25, 0, 0.45, 0)
		commandsmain.Size = UDim2.new(0.3, 0, 0.175, 0)
		table.insert(borders, commandsmain)

		commanddebounce = false
		commandsopened = true

		closedforever = false

		local frames = {}

		-- Frame for around the buttons.
		local buttonsframe = Instance.new("Frame")
		buttonsframe.Name = "buttonsframe"
		buttonsframe.BackgroundColor3 = Color3.fromRGB(36, 0, 64)
		buttonsframe.BorderColor3 = Color3.fromRGB(128, 128, 128)
		buttonsframe.BorderSizePixel = 2
		buttonsframe.AnchorPoint = Vector2.new(0.5, 0.5)
		buttonsframe.Position = UDim2.new(0.5, 0, 0.5, 0)
		buttonsframe.Size = UDim2.new(0.9, 0, 0.85, 0)
		table.insert(frames, buttonsframe)
		buttonsframe.Parent = buttonsmain

		-- Frame for around the command box.
		local commandsframe = Instance.new("Frame")
		commandsframe.Name = "commandsframe"
		commandsframe.AnchorPoint = Vector2.new(0.5, 0.5)
		commandsframe.BackgroundColor3 = Color3.fromRGB(36, 0, 64)
		commandsframe.BorderColor3 = Color3.fromRGB(128, 128, 128)
		commandsframe.BorderSizePixel = 2
		commandsframe.Position = UDim2.new(0.5, 0, 0.5, 0)
		commandsframe.Size = UDim2.new(0.9, 0, 0.85, 0)
		table.insert(frames, commandsframe)
		commandsframe.Parent = commandsmain

		-- Command Box. This is where users type in commands and targets.
		local commandBox = Instance.new("TextBox")
		commandBox.Name = "commandBox"
		commandBox.AnchorPoint = Vector2.new(0.5, 0.5)
		commandBox.BackgroundColor3 = Color3.fromRGB(25, 40, 40)
		commandBox.BorderColor3 = Color3.fromRGB(128, 128, 128)
		commandBox.BorderSizePixel = 2
		commandBox.Position = UDim2.new(0.5, 0, 0.3, 0)
		commandBox.Size = UDim2.new(0.85, 0, 0.20, 0)
		commandBox.Font = Enum.Font.Code
		commandBox.Text = ""
		commandBox.TextColor3 = Color3.fromRGB(255, 255, 255)
		commandBox.TextScaled = true
		commandBox.TextSize = 14.000
		commandBox.TextWrapped = true
		commandBox.ClearTextOnFocus = false
		commandBox.Parent = commandsframe

		local labels = {}

		-- The output for the Command Box.
		local commandBoxOutput = Instance.new("TextLabel")
		commandBoxOutput.Name = "commandBoxOutput"
		commandBoxOutput.AnchorPoint = Vector2.new(0.5, 0.5)
		commandBoxOutput.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		commandBoxOutput.BackgroundTransparency = 1.000
		commandBoxOutput.BorderColor3 = Color3.fromRGB(128, 128, 128)
		commandBoxOutput.BorderSizePixel = 0
		commandBoxOutput.Position = UDim2.new(0.5, 0, 0.6, 0)
		commandBoxOutput.Size = UDim2.new(0.9, 0, 0.2, 0)
		commandBoxOutput.Font = Enum.Font.Code
		commandBoxOutput.Text = "Current Target | (None)"
		commandBoxOutput.TextColor3 = Color3.fromRGB(255, 255, 255)
		commandBoxOutput.TextScaled = true
		commandBoxOutput.TextSize = 14.000
		commandBoxOutput.TextWrapped = true
		table.insert(labels, commandBoxOutput)
		commandBoxOutput.Parent = commandsframe

		-- The information above the Main Menu, e.g. user's name, channel
		local Details = Instance.new("TextLabel")
		Details.Name = "Details"
		Details.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Details.BackgroundTransparency = 1.000
		Details.BorderColor3 = Color3.fromRGB(128, 128, 128)
		Details.Position = UDim2.new(0, 0, 0.015, -6)
		Details.Size = UDim2.new(1, 0, 0.15, 0)
		Details.Font = Enum.Font.Code
		if not isGold then
			Details.Text = player.Name .. " | EBGui | Stable"
		else
			Details.Text = player.Name .. " | EBGui Gold | Stable"
		end
		Details.TextColor3 = Color3.fromRGB(255, 255, 255)
		Details.TextScaled = true
		Details.ZIndex = 5
		Details.TextSize = 12.000
		Details.TextWrapped = true
		table.insert(labels, Details)
		Details.Parent = buttonsframe

		-- "Close this GUI" for the Command Box.
		local Details2 = Instance.new("TextLabel")
		Details2.Name = "Details2"
		Details2.AnchorPoint = Vector2.new(0.5, 0.5)
		Details2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Details2.BackgroundTransparency = 1.000
		Details2.BorderColor3 = Color3.fromRGB(128, 128, 128)
		Details2.Position = UDim2.new(0.5, 0, 0.9, -10)
		Details2.Size = UDim2.new(1, 0, 0.15, 0)
		Details2.Font = Enum.Font.Code
		Details2.Text = "Press ] to open and close this GUI."
		Details2.TextColor3 = Color3.fromRGB(255, 255, 255)
		Details2.TextScaled = true
		Details2.TextSize = 14.000
		Details2.TextWrapped = true
		table.insert(labels, Details2)
		Details2.Parent = commandsframe

		-- "Close this GUI" for the Main Menu.
		local Details3 = Instance.new("TextLabel")
		Details3.Name = "Details3"
		Details3.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Details3.BackgroundTransparency = 1.000
		Details3.BorderColor3 = Color3.fromRGB(128, 128, 128)
		Details3.Position = UDim2.new(0, 0, 0.875, 0)
		Details3.Size = UDim2.new(1, 0, 0.15, -10)
		Details3.Font = Enum.Font.Code
		Details3.Text = "Press [ to open and close this GUI."
		Details3.TextColor3 = Color3.fromRGB(255, 255, 255)
		Details3.TextScaled = true
		Details3.TextSize = 12.000
		Details3.TextWrapped = true
		table.insert(labels, Details3)
		Details3.Parent = buttonsframe

		-- Script termination instructions.
		local Details4 = Instance.new("TextLabel")
		Details4.Name = "Details4"
		Details4.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Details4.BackgroundTransparency = 1.000
		Details4.BorderColor3 = Color3.fromRGB(128, 128, 128)
		Details4.Position = UDim2.new(0, 0, 1.1, 0)
		Details4.Size = UDim2.new(1, 0, 0.175, 0)
		Details4.Font = Enum.Font.Code
		Details4.Text = "Hold the Left and Right arrow keys, then press any key to quit EBGui."
		Details4.TextColor3 = Color3.fromRGB(255, 255, 255)
		Details4.TextScaled = true
		Details4.TextSize = 14.000
		Details4.TextWrapped = true
		Details4.Parent = buttonsframe

		-- The version number above the Command Box.
		local Version = Instance.new("TextLabel")
		Version.Name = "Version"
		Version.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Version.BackgroundTransparency = 1.000
		Version.BorderColor3 = Color3.fromRGB(128, 128, 128)
		Version.Position = UDim2.new(0, 0, 0.05, 0)
		Version.Size = UDim2.new(1, 0, 0.1, 0)
		Version.Font = Enum.Font.Code
		Version.Text = "Version " .. verNum
		Version.TextColor3 = Color3.fromRGB(255, 255, 255)
		Version.TextScaled = true
		Version.TextSize = 14.000
		Version.TextWrapped = true
		table.insert(labels, Version)
		Version.Parent = commandsframe

		-- The scrolling area for the Main Menu.
		local mainframe = Instance.new("ScrollingFrame")
		mainframe.Name = "mainframe"
		mainframe.Active = true
		mainframe.BackgroundColor3 = Color3.fromRGB(64, 6, 31)
		mainframe.BorderColor3 = Color3.fromRGB(128, 128, 128)
		mainframe.BorderSizePixel = 2
		mainframe.Position = UDim2.new(0.5, 0, 0.5, 0)
		mainframe.AnchorPoint = Vector2.new(0.5, 0.5)
		mainframe.Size = UDim2.new(0.867768586, 0, 0.6, 0)
		mainframe.ScrollBarThickness = 6
		mainframe.Parent = buttonsmain

		-- Grid layout for the buttons.
		local UIGridLayout = Instance.new("UIGridLayout")
		UIGridLayout.FillDirection = Enum.FillDirection.Horizontal
		UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
		UIGridLayout.CellPadding = UDim2.new(0, 7, 0, 7)
		UIGridLayout.CellSize = UDim2.new(0.45, 0, 0, 30)
		UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIGridLayout.Parent = mainframe


		-- Player anchor function
		local function anchor(bool)
			wait(.75)
			if bool == false then
				for i,v in player.Character:GetDescendants() do
					if v:IsA("BasePart") and v.Anchored then
						v.Anchored = false
					end
				end
			elseif bool == true then
				for i,v in player.Character:GetDescendants() do
					if v:IsA("BasePart") and not v.Anchored then
						v.Anchored = true
					end
				end
			else
				for i,v in player.Character:GetDescendants() do
					if v:IsA("BasePart") then
						print(v.Anchored)
						break
					end
				end
			end
		end

		function copy(tbl)
			return unpack(tbl)
		end

		local buttons = {}

		------ Buttons for hacks.

		function checkMoves(el)
			local et
			local ch = false
			if el == 1 then
				et = "AoEs"
			elseif el == 2 then
				et = "Bullets"
			elseif el == 3 then
				et = "Blasts"
			elseif el == 4 then
				et = "Teleports"
			elseif el == 5 then
				et = "Ults"
			else 
				warn("Element type not applicable! Got "..tostring(e)..", expected number 1 through 5")
				et = nil
			end
			
			if et ~= nil then
				for i,v in pairs(mvtg[et]) do
					if v.Value then
						ch = true
						v.Value = false
						print("Disabled " .. i .. " " .. string.sub(et,1,-2))
						mvtg[et][i].Button.Text = mvtg[et][i].InitText
					end
				end
			else
				error("element type out of range")
			end
			return ch
		end

		---- AoEs
		-- Instant Blaze Column

		local BlazeColumn = Instance.new("TextButton")
		BlazeColumn.Name = "BlazeColumn"
		BlazeColumn.Text = mvtg.AoEs.Fire.Text
		table.insert(buttons, BlazeColumn)
		mvtg.AoEs.Fire.Button = BlazeColumn

		mvtg.AoEs.Fire.Value = false

		BlazeColumn.MouseButton1Down:connect(function()
			if mvtg.AoEs.Fire.Value == false then
				checkMoves(1)
				mvtg.AoEs.Fire.Value = true
				mvtg.AoEs.Fire.Text = "Instant Blaze Column (On)"
			else
				mvtg.AoEs.Fire.Value = false
				mvtg.AoEs.Fire.Text = "Instant Blaze Column (Off)"
			end
			BlazeColumn.Text = mvtg.AoEs.Fire.Text
		end)

		-- Amplified Genesis Ray

		local GenesisRay = Instance.new("TextButton")
		GenesisRay.Name = "GenesisRay"
		GenesisRay.Text = mvtg.AoEs.Time.Text
		table.insert(buttons, GenesisRay)
		mvtg.AoEs.Time.Button = GenesisRay

		mvtg.AoEs.Time.Value = false
		local GRCharge = 1

		GenesisRay.MouseButton1Down:connect(function()
			if mvtg.AoEs.Time.Value == false then
				checkMoves(1)
				mvtg.AoEs.Time.Value = true
				mvtg.AoEs.Time.Text = "Amplified Genesis Ray (On)"
			else
				mvtg.AoEs.Time.Value = false
				mvtg.AoEs.Time.Text = "Amplified Genesis Ray (Off)"
			end
			GenesisRay.Text = mvtg.AoEs.Time.Text
		end)

		-- Creation Hold Hack

		local ChainHold = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		ChainHold.Button.Name = "ChainHold"
		ChainHold.Button.Text = mvtg.AoEs.Creation.Text
		table.insert(buttons, ChainHold)
		mvtg.AoEs.Creation.Button = ChainHold.Button

		mvtg.AoEs.Creation.Value = false

		ChainHold.Button.MouseButton1Down:connect(function()
			if isGold or isMaster then
				if not mvtg.AoEs.Creation.Value then
					checkMoves(1)
					mvtg.AoEs.Creation.Value = true
					mvtg.AoEs.Creation.Text = "Instant Chain Hack (On)"
				else
					mvtg.AoEs.Creation.Value = false
					mvtg.AoEs.Creation.Text = "Instant Chain Hack (Off)"
				end
			else
				mvtg.AoEs.Creation.Text = "Member Not Gold"
				wait(1)
				mvtg.AoEs.Creation.Text = "Instant Chain Hack (Off)"
			end
			ChainHold.Button.Text = mvtg.AoEs.Creation.Text
		end)

		-- Space-Time Rupture

		local STRHack = Instance.new("TextButton")
		STRHack.Name = "STRHack"
		STRHack.Text = mvtg.AoEs.Chaos.Text
		table.insert(buttons,STRHack)
		mvtg.AoEs.Chaos.Button = STRHack

		mvtg.AoEs.Chaos.Value = false

		STRHack.MouseButton1Down:connect(function()
			if mvtg.AoEs.Chaos.Value == false then
				checkMoves(1)
				mvtg.AoEs.Chaos.Value = true
				mvtg.AoEs.Chaos.Text = "Space-Time Rupture Hack (On)"
			else
				mvtg.AoEs.Chaos.Value = false
				mvtg.AoEs.Chaos.Text = "Space-Time Rupture Hack (Off)"
			end
			STRHack.Text = mvtg.AoEs.Chaos.Text
		end)

		-- Instant Vine Trap

		local VineTrap = Instance.new("TextButton")
		VineTrap.Name = "VineTrap"
		VineTrap.Text = mvtg.AoEs.Nature.Text
		table.insert(buttons, VineTrap)
		mvtg.AoEs.Nature.Button = VineTrap

		mvtg.AoEs.Nature.Value = false

		VineTrap.MouseButton1Down:connect(function()
			if mvtg.AoEs.Nature.Value == false then
				checkMoves(1)
				mvtg.AoEs.Nature.Value = true
				mvtg.AoEs.Nature.Text = "Instant Vine Trap (On)"
			else
				mvtg.AoEs.Nature.Value = false
				mvtg.AoEs.Nature.Text = "Instant Vine Trap (Off)"
			end
			VineTrap.Text = mvtg.AoEs.Nature.Text
		end)

		-- Illusive Atake Hack

		local IllusiveAtake = Instance.new("TextButton")
		IllusiveAtake.Name = "IllusiveAtake"
		IllusiveAtake.Text = mvtg.AoEs.Illusion.Text
		table.insert(buttons, IllusiveAtake)
		mvtg.AoEs.Illusion.Button = IllusiveAtake

		mvtg.AoEs.Illusion.Value = false

		IllusiveAtake.MouseButton1Down:connect(function()
			if mvtg.AoEs.Illusion.Value == false then
				checkMoves(1)
				mvtg.AoEs.Illusion.Value = true
				mvtg.AoEs.Illusion.Text = "Illusive Atake Hack (On)"
			else
				mvtg.AoEs.Illusion.Value = false
				mvtg.AoEs.Illusion.Text = "Illusive Atake Hack (Off)"
			end
			IllusiveAtake.Text = mvtg.AoEs.Illusion.Text
		end)

		-- Instant Murky Missiles

		local DarkAoe = Instance.new("TextButton")
		DarkAoe.Name = "DarkAoe"
		DarkAoe.Text = mvtg.AoEs.Darkness.Text
		table.insert(buttons, DarkAoe)
		mvtg.AoEs.Darkness.Button = DarkAoe

		mvtg.AoEs.Darkness.Value = false

		DarkAoe.MouseButton1Down:connect(function()
			if not mvtg.AoEs.Darkness.Value then
				checkMoves(1)
				mvtg.AoEs.Darkness.Value = true
				mvtg.AoEs.Darkness.Text = "Instant Murky Missiles (On)"
			else
				mvtg.AoEs.Darkness.Value = false
				mvtg.AoEs.Darkness.Text = "Instant Murky Missiles (Off)"
			end
			DarkAoe.Text = mvtg.AoEs.Darkness.Text
		end)
		
		-- Instant Air Dispersion

		local StormAoe = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		StormAoe.Button.Name = "StormAoe"
		StormAoe.Button.Text = mvtg.AoEs.Storm.Text
		table.insert(buttons, StormAoe)
		mvtg.AoEs.Storm.Button = StormAoe.Button

		mvtg.AoEs.Storm.Value = false

		StormAoe.Button.MouseButton1Down:connect(function()
			if isGold or isMaster then
				if not mvtg.AoEs.Storm.Value then
					checkMoves(1)
					mvtg.AoEs.Storm.Value = true
					mvtg.AoEs.Storm.Text = "Instant Lightning Dispersion (On)"
				else
					mvtg.AoEs.Storm.Value = false
					mvtg.AoEs.Storm.Text = "Instant Lightning Dispersion (Off)"
				end
				StormAoe.Button.Text = mvtg.AoEs.Storm.Text
			else
				mvtg.AoEs.Storm.Text = "Member Not Gold"
				StormAoe.Button.Text = mvtg.AoEs.Storm.Text
				wait(1)
				mvtg.AoEs.Storm.Text = "Instant Storm AoE (Off)"
				StormAoe.Button.Text = mvtg.AoEs.Storm.Text
			end
			StormAoe.Button.Text = mvtg.AoEs.Storm.Text
		end)

		-- Splitting Slime Hack

		local SplittingSlime = Instance.new("TextButton")
		SplittingSlime.Name = "SplittingSlime"
		SplittingSlime.Text = mvtg.AoEs.Slime.Text
		table.insert(buttons, SplittingSlime)
		mvtg.AoEs.Slime.Button = SplittingSlime

		mvtg.AoEs.Slime.Value = false

		SplittingSlime.MouseButton1Down:connect(function()
			if mvtg.AoEs.Slime.Value == false then
				checkMoves(1)
				mvtg.AoEs.Slime.Value = true
				mvtg.AoEs.Slime.Text = "Splitting Slime Hack (On)"
			else
				mvtg.AoEs.Slime.Value = false
				mvtg.AoEs.Slime.Text = "Splitting Slime Hack (Off)"
			end
			SplittingSlime.Text = mvtg.AoEs.Slime.Text
		end)

		-- Amaurotic Lambent Hack

		local AmauroticLambent = Instance.new("TextButton")
		AmauroticLambent.Name = "AmauroticLambent"
		AmauroticLambent.Text = mvtg.AoEs.Light.Text
		table.insert(buttons, AmauroticLambent)
		mvtg.AoEs.Light.Button = AmauroticLambent

		mvtg.AoEs.Light.Value = false

		AmauroticLambent.MouseButton1Down:connect(function()
			if mvtg.AoEs.Light.Value == false then
				checkMoves(1)
				mvtg.AoEs.Light.Value = true
				mvtg.AoEs.Light.Text = "Amaurotic Lambent Hack (On)"
			else
				mvtg.AoEs.Light.Value = false
				mvtg.AoEs.Light.Text = "Amaurotic Lambent Hack (Off)"
			end
			AmauroticLambent.Text = mvtg.AoEs.Light.Text
		end)

		-- Instant Plasma Implosion

		local PlasmaImplosion = Instance.new("TextButton")
		PlasmaImplosion.Name = "PlasmaImplosion"
		PlasmaImplosion.Text = mvtg.AoEs.Plasma.Text
		table.insert(buttons, PlasmaImplosion)
		mvtg.AoEs.Plasma.Button = PlasmaImplosion

		mvtg.AoEs.Plasma.Value = false

		PlasmaImplosion.MouseButton1Down:connect(function()
			if mvtg.AoEs.Plasma.Value == false then
				checkMoves(1)
				mvtg.AoEs.Plasma.Value = true
				mvtg.AoEs.Plasma.Text = "Instant Plasma Implosion (On)"
			else
				mvtg.AoEs.Plasma.Value = false
				mvtg.AoEs.Plasma.Text = "Instant Plasma Implosion (Off)"
			end
			PlasmaImplosion.Text = mvtg.AoEs.Plasma.Text
		end)

		-- Formidable Roar Hack

		local FormidableRoar = Instance.new("TextButton")
		FormidableRoar.Name = "FormidableRoar"
		FormidableRoar.Text = mvtg.AoEs.Dragon.Text
		table.insert(buttons, FormidableRoar)
		mvtg.AoEs.Dragon.Button = FormidableRoar

		mvtg.AoEs.Dragon.Value = false

		FormidableRoar.MouseButton1Down:connect(function()
			if mvtg.AoEs.Dragon.Value == false then
				checkMoves(1)
				mvtg.AoEs.Dragon.Value = true
				mvtg.AoEs.Dragon.Text = "Formidable Roar Hack (On)"
			else
				mvtg.AoEs.Dragon.Value = false
				mvtg.AoEs.Dragon.Text = "Formidable Roar Hack (Off)"
			end
			FormidableRoar.Text = mvtg.AoEs.Dragon.Text
		end)

		-- Instant Skeleton Grab

		local SkeletonGrab = Instance.new("TextButton")
		SkeletonGrab.Name = "SkeletonGrab"
		SkeletonGrab.Text = mvtg.AoEs.Nightmare.Text
		table.insert(buttons, SkeletonGrab)
		mvtg.AoEs.Nightmare.Button = SkeletonGrab

		mvtg.AoEs.Nightmare.Value = false

		SkeletonGrab.MouseButton1Down:connect(function()
			if mvtg.AoEs.Nightmare.Value == false then
				checkMoves(1)
				mvtg.AoEs.Nightmare.Value = true
				mvtg.AoEs.Nightmare.Text = "Instant Skeleton Grab (On) [AIMED]"
			else
				mvtg.AoEs.Nightmare.Value = false
				mvtg.AoEs.Nightmare.Text = "Instant Skeleton Grab (Off) [AIMED]"
			end
			SkeletonGrab.Text = mvtg.AoEs.Nightmare.Text
		end)

		-- Gravitational Field Hack

		local GravitationalField = Instance.new("TextButton")
		GravitationalField.Name = "GravitationalField"
		GravitationalField.Text = mvtg.AoEs.Gravity.Text
		table.insert(buttons, GravitationalField)
		mvtg.AoEs.Gravity.Button = GravitationalField

		mvtg.AoEs.Gravity.Value = false

		GravitationalField.MouseButton1Down:connect(function()
			if mvtg.AoEs.Gravity.Value == false then
				checkMoves(1)
				mvtg.AoEs.Gravity.Value = true
				mvtg.AoEs.Gravity.Text = "Gravitational Field Hack (On)"
			else
				mvtg.AoEs.Gravity.Value = false
				mvtg.AoEs.Gravity.Text = "Gravitational Field Hack (Off)"
			end
			GravitationalField.Text = mvtg.AoEs.Gravity.Text
		end)

		---- Player modifications
		-- Instant Rock Armor

		local RockArmor = Instance.new("TextButton")
		RockArmor.Name = "RockArmor"
		RockArmor.Text = "Instant Rock Armor"
		table.insert(buttons, RockArmor)

		RockArmor.MouseButton1Down:connect(function()
			if player.Character:FindFirstChild("Body Colors") then
				player.Character["Body Colors"]:Destroy()
			end
			RSR.DoClientMagic:FireServer("Earth", "Rock Armor")
			RSR.DoMagic:InvokeServer("Earth", "Rock Armor")
		end)

		-- Slime Buddies Hack

		local SlimeBuddies = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		SlimeBuddies.Button.Name = "SlimeBuddies"
		SlimeBuddies.Button.Text = mvtg.Misc.SlimeHeal.Text
		table.insert(buttons, SlimeBuddies)
		mvtg.Misc.SlimeHeal.Button = SlimeBuddies.Button

		mvtg.Misc.SlimeHeal.Value = false

		SlimeBuddies.Button.MouseButton1Down:connect(function()
			if isGold or isMaster then
				if mvtg.Misc.SlimeHeal.Value == false then
					mvtg.Misc.SlimeHeal.Value = true
					mvtg.Misc.SlimeHeal.Text = "Slime Buddies Hack (On)"
				else
					mvtg.Misc.SlimeHeal.Value = false
					mvtg.Misc.SlimeHeal.Text = "Slime Buddies Hack (Off)"
				end
				SlimeBuddies.Button.Text = mvtg.Misc.SlimeHeal.Text
			else
				mvtg.Misc.SlimeHeal.Text = "Member Not Gold"
				SlimeBuddies.Button.Text = mvtg.Misc.SlimeHeal.Text
				wait(1)
				mvtg.Misc.SlimeHeal.Text = "Slime Buddies Hack (Off)"
				SlimeBuddies.Button.Text = mvtg.Misc.SlimeHeal.Text
			end
		end)

		-- Inertia Gravity

		local InertiaGravity = Instance.new("TextButton")
		InertiaGravity.Name = "InertiaGravity"
		InertiaGravity.Text = mvtg.Misc.Inertia.Text
		table.insert(buttons, InertiaGravity)
		mvtg.Misc.Inertia.Button = InertiaGravity

		mvtg.Misc.Inertia.Value = false

		InertiaGravity.MouseButton1Down:connect(function()
			if mvtg.Misc.Inertia.Value == false then
				mvtg.Misc.Inertia.Value = true
				mvtg.Misc.Inertia.Text = "Inertia Gravity (On)"
				local BodyForce = Instance.new("BodyForce")
				BodyForce.Parent = player.Character.HumanoidRootPart
				BodyForce.Name = "InertiaGravityForce"
				BodyForce.Force = Vector3.new(0, 1638, 0)
			else
				mvtg.Misc.Inertia.Value = false
				mvtg.Misc.Inertia.Text = "Inertia Gravity (Off)"
				if player.Character.HumanoidRootPart:FindFirstChild("InertiaGravityForce") then
					player.Character.HumanoidRootPart.InertiaGravityForce:Destroy()
				end
			end
			InertiaGravity.Text = mvtg.Misc.Inertia.Text
		end)

		-- Spectral Embodiment

		local SpectralEmbodiment = Instance.new("TextButton")
		SpectralEmbodiment.Name = "SpectralEmbodiment"
		SpectralEmbodiment.Text = mvtg.Misc.Invis.Text
		table.insert(buttons, SpectralEmbodiment)
		mvtg.Misc.Invis.Button = SpectralEmbodiment

		mvtg.Misc.Invis.Value = false

		SpectralEmbodiment.MouseButton1Down:connect(function()
			if mvtg.Misc.Invis.Value == false then
				mvtg.Misc.Invis.Value = true
				mvtg.Misc.Invis.Text = "Spectral Embodiment Keybind (On) [X]"
			else
				mvtg.Misc.Invis.Value = false
				mvtg.Misc.Invis.Text = "Spectral Embodiment Keybind (Off) [X]"
			end
			SpectralEmbodiment.Text = mvtg.Misc.Invis.Text
		end)

		-- Anti-Blind

		local AntiBlind = Instance.new("TextButton")
		AntiBlind.Name = "AntiBlind"
		AntiBlind.Text = "Anti-Blind (Off) [K]"
		table.insert(buttons, AntiBlind)

		AntiBlindEnabled = false

		local normalFogColor = game.Lighting.FogColor
		local normalFogEnd = game.Lighting.FogEnd
		local normalBrightness = game.Lighting.Brightness
		local normalClockTime = game.Lighting.ClockTime

		local function AntiBlindFunc()
			if AntiBlindEnabled == false then
				AntiBlindEnabled = true
				AntiBlind.Text = "Anti-Blind (On) [K]"
				while AntiBlindEnabled do
					wait()
					game.Lighting.FogColor = normalFogColor
					game.Lighting.FogEnd = normalFogEnd
					game.Lighting.Brightness = normalBrightness
					game.Lighting.ClockTime = normalClockTime
				end
			else
				AntiBlindEnabled = false
				AntiBlind.Text = "Anti-Blind (Off) [K]"
			end
		end

		AntiBlind.MouseButton1Down:connect(AntiBlindFunc)

		player:WaitForChild("PlayerGui").DescendantAdded:Connect(function(d)
			if AntiBlindEnabled then
				if d.Name == "ScreenGui" then
					wait()
					player.PlayerGui.ScreenGui:Destroy()
				elseif d.Name == "Distort" then
					wait()
					player.PlayerGui.Distort:Destroy()
				end
			end
		end)

		-- Speed hack

		local Speedhack = Instance.new("TextButton")
		Speedhack.Name = "Speedhack"
		Speedhack.Text = "Speedhack [default 64] (Off) [T]"
		table.insert(buttons, Speedhack)

		SpeedhackEnabled = false
		SetSpeed = 64

		function modifySpeed()
			player.Character:FindFirstChild("Humanoid").Changed:connect(function()
				if SpeedhackEnabled and SetSpeed ~= nil then
					player.Character.Humanoid.WalkSpeed = SetSpeed
				else
					return
				end
			end)
		end

		function beginSpeed()
			if SpeedhackEnabled == false then
				SpeedhackEnabled = true
				Speedhack.Text = "Speedhack [default 64] (On) [T]"
				modifySpeed()
				wait()
				player.Character.Humanoid.WalkSpeed = SetSpeed
				while SpeedhackEnabled do
					wait()
					if player.Character.Humanoid.Health == 0 then
						repeat wait() until player.Character.Humanoid.Health ~= 0
						modifySpeed()
						wait()
						player.Character.Humanoid.WalkSpeed = SetSpeed
					end
				end
			else
				SpeedhackEnabled = false
				Speedhack.Text = "Speedhack [default 64] (Off) [T]"
			end
		end

		Speedhack.MouseButton1Down:connect(beginSpeed)

		---- Bullets
		-- Hyperang Hack

		local TechRang = Instance.new("TextButton")
		TechRang.Name = "TechRang"
		TechRang.Text = mvtg.Bullets.Technology.Text
		table.insert(buttons, TechRang)
		mvtg.Bullets.Technology.Button = TechRang

		mvtg.Bullets.Technology.Value = false

		TechRang.MouseButton1Down:connect(function()
			if not mvtg.Bullets.Technology.Value then
				checkMoves(2)
				mvtg.Bullets.Technology.Value = true
				mvtg.Bullets.Technology.Text = "Hyperang Hack (On)"
			else
				mvtg.Bullets.Technology.Value = false
				mvtg.Bullets.Technology.Text = "Hyperang Hack (Off)"
			end
			TechRang.Text = mvtg.Bullets.Technology.Text
		end)

		-- Asteroid Belt Hack

		local AsteroidBeltHack = Instance.new("TextButton")
		AsteroidBeltHack.Name = "AsteroidBeltHack"
		AsteroidBeltHack.Text = mvtg.Bullets.Space.Text
		table.insert(buttons, AsteroidBeltHack)
		mvtg.Bullets.Space.Button = AsteroidBeltHack
		
		mvtg.Bullets.Space.Value = false
		
		AsteroidBeltHack.MouseButton1Down:connect(function()
			if mvtg.Bullets.Space.Value == false then
				checkMoves(2)
				mvtg.Bullets.Space.Value = true
				mvtg.Bullets.Space.Text = "Asteroid Belt Hack (On)"
			else
				mvtg.Bullets.Space.Value = false
				mvtg.Bullets.Space.Text = "Ateroids Belt Hack (Off)"
			end
			AsteroidBeltHack.Text = mvtg.Bullets.Space.Text
		end)

		-- Orbs of Enlightenment Hack

		local LightOrbsHack = Instance.new("TextButton")
		LightOrbsHack.Name = "LightOrbsHack"
		LightOrbsHack.Text = mvtg.Bullets.Light.Text
		table.insert(buttons, LightOrbsHack)
		mvtg.Bullets.Light.Button = LightOrbsHack

		mvtg.Bullets.Light.Value = false

		LightOrbsHack.MouseButton1Down:connect(function()
			if not mvtg.Bullets.Light.Value then
				checkMoves(2)
				mvtg.Bullets.Light.Value = true
				mvtg.Bullets.Light.Text = "Light Orbs Hack (On)"
			else
				mvtg.Bullets.Light.Value = false
				mvtg.Bullets.Light.Text = "Light Orbs Hack (Off)"
			end
			LightOrbsHack.Text = mvtg.Bullets.Light.Text
		end)

		-- Vigor Gyration Hack

		local VigGyratHack = Instance.new("TextButton")
		VigGyratHack.Name = "VigGyratHack"
		VigGyratHack.Text = mvtg.Bullets.Spirit.Text
		table.insert(buttons, VigGyratHack)
		mvtg.Bullets.Spirit.Button = VigGyratHack
		
		mvtg.Bullets.Spirit.Value = false
		
		VigGyratHack.MouseButton1Down:connect(function()
			if mvtg.Bullets.Spirit.Value == false then
				checkMoves(2)
				mvtg.Bullets.Spirit.Value = true
				mvtg.Bullets.Spirit.Text = "Vigor Gyration Hack (On)"
			else
				mvtg.Bullets.Spirit.Value = false
				mvtg.Bullets.Spirit.Text = "Vigor Gyration Hack (Off)"
			end
			VigGyratHack.Text = mvtg.Bullets.Spirit.Text
		end)

		-- Lightning Barrage Hack

		local Barrage = Instance.new("TextButton")
		Barrage.Name = "Barrage"
		Barrage.Text = mvtg.Bullets.Storm.Text
		table.insert(buttons, Barrage)
		mvtg.Bullets.Storm.Button = Barrage

		mvtg.Bullets.Storm.Value = false

		Barrage.MouseButton1Down:connect(function()
			if not mvtg.Bullets.Storm.Value then
				checkMoves(2)
				mvtg.Bullets.Storm.Value = true
				mvtg.Bullets.Storm.Text = "Barrage Hack (On)"
			else
				mvtg.Bullets.Storm.Value = false
				mvtg.Bullets.Storm.Text = "Barrage Hack (Off)"
			end
			Barrage.Text = mvtg.Bullets.Storm.Text
		end)

		-- Dying Star Hack

		local DyingStarHack = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		DyingStarHack.Button.Name = "DyingStarHack"
		DyingStarHack.Button.Text = mvtg.Bullets.Solar.Text
		table.insert(buttons, DyingStarHack)
		mvtg.Bullets.Solar.Button = DyingStarHack.Button

		mvtg.Bullets.Solar.Value = false

		DyingStarHack.Button.MouseButton1Down:connect(function()
			if isGold or isMaster then
				if not mvtg.Bullets.Solar.Value then
					checkMoves(2)
					mvtg.Bullets.Solar.Value = true
					mvtg.Bullets.Solar.Text = "Dying Star Hack (On)"
				else
					mvtg.Bullets.Solar.Value = false
					mvtg.Bullets.Solar.Text = "Dying Star Hack (Off)"
				end
				DyingStarHack.Button.Text = mvtg.Bullets.Solar.Text
			else
				mvtg.Bullets.Solar.Text = "Member Not Gold"
				DyingStarHack.Button.Text = mvtg.Bullets.Solar.Text
				wait(1)
				mvtg.Bullets.Solar.Text = "Dying Star Hack (Off)"
				DyingStarHack.Button.Text = mvtg.Bullets.Solar.Text
			end
		end)

		---- Blasts

		-- Explode at Mouse (Bolt Hack)

		local ExplodeAtMouse = Instance.new("TextButton")
		ExplodeAtMouse.Name = "ExplodeAtMouse"
		ExplodeAtMouse.Text = mvtg.Blasts.Storm.Text
		table.insert(buttons,ExplodeAtMouse)
		mvtg.Blasts.Storm.Button = ExplodeAtMouse

		mvtg.Blasts.Storm.Value = false

		ExplodeAtMouse.MouseButton1Down:connect(function()
			if not mvtg.Blasts.Storm.Value then
				checkMoves(3)
				mvtg.Blasts.Storm.Value = true
				mvtg.Blasts.Storm.Text = "Explode at Mouse (On)"
			else
				mvtg.Blasts.Storm.Value = false
				mvtg.Blasts.Storm.Text = "Explode at Mouse (Off)"
			end
			ExplodeAtMouse.Text = mvtg.Blasts.Storm.Text
		end)

		-- Orbital Strike Hack

		local Orbital = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		Orbital.Button.Name = "Oribtal"
		Orbital.Button.Text = mvtg.Blasts.Technology.Text
		table.insert(buttons, Orbital)
		mvtg.Blasts.Technology.Button = Orbital.Button

		mvtg.Blasts.Technology.Value = false

		Orbital.Button.MouseButton1Down:connect(function()
			if isGold or isMaster then
				if not mvtg.Blasts.Technology.Value then
					checkMoves(3)
					mvtg.Blasts.Technology.Value = true
					mvtg.Blasts.Technology.Text = "Orbital Strike Hack (On)"
				else
					mvtg.Blasts.Technology.Value = false
					mvtg.Blasts.Technology.Text = "Orbital Strike Hack (Off)"
				end
				Orbital.Button.Text = mvtg.Blasts.Technology.Text
			else
				mvtg.Blasts.Technology.Text = "Member Not Gold"
				Orbital.Button.Text = mvtg.Blasts.Technology.Text
				wait(1)
				mvtg.Blasts.Technology.Text = "Orbital Strike Hack (Off)"
				Orbital.Button.Text = mvtg.Blasts.Technology.Text
			end
		end)

		-- Instant Double Ray

		local DoubleRay = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		DoubleRay.Button.Name = "DoubleRay"
		DoubleRay.Button.Text = mvtg.Blasts.Solar.Text
		table.insert(buttons, DoubleRay)
		mvtg.Blasts.Solar.Button = DoubleRay.Button

		mvtg.Blasts.Solar.Value = false

		DoubleRay.Button.MouseButton1Down:connect(function()
			if isGold or isMaster then
				if not mvtg.Blasts.Solar.Value then
					checkMoves(3)
					mvtg.Blasts.Solar.Value = true
					mvtg.Blasts.Solar.Text = "Instant Double Ray (On)"
				else
					mvtg.Blasts.Solar.Value = false
					mvtg.Blasts.Solar.Text = "Instant Double Ray (Off)"
				end
				DoubleRay.Button.Text = mvtg.Blasts.Solar.Text
			else
				mvtg.Blasts.Solar.Text = "Member Not Gold"
				DoubleRay.Button.Text = mvtg.Blasts.Solar.Text
				wait(1)
				mvtg.Blasts.Solar.Text = "Instant Double Ray (Off)"
				DoublRay.Button.Text = mvtg.Blasts.Solar.Text
			end
		end)

		-- Holobeam Camera Attach

		local Holobeam = Instance.new("TextButton")
		Holobeam.Name = "Holobeam"
		Holobeam.Text = mvtg.Blasts.Spectrum.Text
		table.insert(buttons, Holobeam)
		mvtg.Blasts.Spectrum.Button = Holobeam

		mvtg.Blasts.Spectrum.Value = false

		function attachCamera(v)
			if (v ~= nil) then
				if not(viewing) and (v.Name == "Holobeam") then
					game.Workspace.Camera.CameraSubject = game.Workspace['.Ignore']['.Attacks'][v.Name]
				else
					v:Destroy()
					return
				end
				
				v.Transparency = 0

				wait(4)
				if not(viewing) and not(game.Workspace.Camera.CameraSubject == player.Character.Humanoid) then
					game.Workspace.Camera.CameraSubject = player.Character.Humanoid
				end
				
				v:Destroy()
			end
		end
		
		game.Workspace['.Ignore']['.Attacks'].DescendantAdded:Connect(function(v)
			if mvtg.Blasts.Spectrum.Value then
				if (v.Name == "Part") and (player.Character) then
					local distance = (player.Character.HumanoidRootPart.Position - v.Position).Magnitude
					
					if (v.Size == Vector3.new(5, 5, 5)) and (distance < 10) and (v:WaitForChild("BodyVelocity", 1)) and (v:WaitForChild("BodyGyro", 1)) and (v.BodyVelocity.P >= 1250) then
					
						v.Name = "Holobeam"
					
						pcall(function()
							coroutine.resume(coroutine.create(function() 
								attachCamera(v) 
							end))
						end)
						
						local gui = player.PlayerGui.Main.SkillsBar
						
						wait(0.5)
						
						while wait() do
							if not(gui['1'].CD.Text == "...") and not(gui['2'].CD.Text == "...") and not(gui['3'].CD.Text == "...") and not(gui['4'].CD.Text == "...") and not(gui['5'].CD.Text == "...") then
								pcall(function()
									if not(viewing) and not(game.Workspace.Camera.CameraSubject == player.Character.Humanoid) then
										game.Workspace.Camera.CameraSubject = player.Character.Humanoid
									end
				
									v:Destroy()
								end)
								
								break
							end
						end
					end
				end
			end
		end)

		Holobeam.MouseButton1Down:connect(function()
			if mvtg.Blasts.Spectrum.Value == false then
				checkMoves(3)
				mvtg.Blasts.Spectrum.Value = true
				mvtg.Blasts.Spectrum.Text = "Holobeam Camera Attach (On)"
				
				for i, v in pairs(game.Workspace['.Ignore']['.Attacks']:GetChildren()) do
					if (v.Name == "Part") and (v:WaitForChild("BodyVelocity", 1)) and (v:WaitForChild("BodyGyro", 1)) and (v.BodyVelocity.P >= 1250) then v:Destroy() end
				end
			else
				mvtg.Blasts.Spectrum.Value = false
				mvtg.Blasts.Spectrum.Text = "Holobeam Camera Attach (Off)"
			end
			Holobeam.Text = mvtg.Blasts.Spectrum.Text
		end)

		-- Controlled Echoes

		local Echoes = Instance.new("TextButton")
		Echoes.Name = "Echoes"
		Echoes.Text = mvtg.Blasts.Sound.Text
		table.insert(buttons, Echoes)
		mvtg.Blasts.Sound.Button = Echoes

		mvtg.Blasts.Sound.Value = false
		EchoesAuto = false
		EchoesPhase = 1

		Echoes.MouseButton1Down:connect(function()
			if mvtg.Blasts.Sound.Value == false then
				checkMoves(3)
				mvtg.Blasts.Sound.Value = true
				mvtg.Blasts.Sound.Text = "Controlled Echoes (On)"
			else
				mvtg.Blasts.Sound.Value = false
				mvtg.Blasts.Sound.Text = "Controlled Echoes (Off)"
			end
			Echoes.Text = mvtg.Blasts.Sound.Text
		end)

		---- Shields
		-- Crystal Armament and Gravital Globe Hacks

		local CrystalArmament = Instance.new("TextButton")
		CrystalArmament.Name = "CrystalArmament"
		CrystalArmament.Text = "Instant Crystal Armament (Off)"
		table.insert(buttons, CrystalArmament)

		CrystalArmamentEnabled = false

		local GravitalGlobe = Instance.new("TextButton")
		GravitalGlobe.Name = "GravitalGlobe"
		GravitalGlobe.Text = "Gravital Globe Hack (Off)"
		table.insert(buttons, GravitalGlobe)

		GravitalGlobeEnabled = false

		GravitalGlobe.MouseButton1Down:connect(function()
			if GravitalGlobeEnabled == false then
				if CrystalArmamentEnabled then
					CrystalArmamentEnabled = false
					print("Disabled Crystal")
					CrystalArmament.Text = "Instant Crystal Armament (Off)"
				end
				GravitalGlobeEnabled = true
				GravitalGlobe.Text = "Gravital Globe Hack (On)"
			else
				GravitalGlobeEnabled = false
				GravitalGlobe.Text = "Gravital Globe Hack (Off)"
			end
		end)		

		CrystalArmament.MouseButton1Down:connect(function()
			if CrystalArmamentEnabled == false then
				if GravitalGlobeEnabled then
					GravitalGlobeEnabled = false
					print("Disabled Gravity")
					GravitalGlobe.Text = "Gravital Globe Hack (Off)"
				end
				CrystalArmamentEnabled = true
				CrystalArmament.Text = "Instant Crystal Armament (On)"				
			else
				CrystalArmamentEnabled = false
				CrystalArmament.Text = "Instant Crystal Armament (Off)"
			end
		end)

		---- Ults
		-- Disable cooldowns
		local EnableUlts = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		EnableUlts.Button.Name = "EnableUlts"
		EnableUlts.Button.Text = "Remove Ult Cooldown"
		table.insert(buttons,EnableUlts)

		EnableUlts.Button.MouseButton1Down:connect(function()
			if isGold or isMaster then
				game:GetService("ReplicatedStorage").Remotes.DoClientMagic:FireServer("Darkness", "Void of Terror")
				game:GetService("ReplicatedStorage").Remotes.DoMagic:InvokeServer("Darkness", "Void of Terror", CFrame.new(player.Character.HumanoidRootPart.Position-Vector3.new(0,250,0)))
				game:GetService("ReplicatedStorage").Remotes.DoClientMagic:FireServer("Darkness", "Void of Terror")
				game:GetService("ReplicatedStorage").Remotes.DoMagic:InvokeServer("Darkness", "Void of Terror", CFrame.new(player.Character.HumanoidRootPart.Position-Vector3.new(0,250,0)))
			else
				EnableUlts.Button.Text = "Member Not Gold"
				wait(3)
				EnableUlts.Button.Text = "Remove Ult Cooldown"
			end
		end)

		-- Reaper's Rage
		local ReaperUlt = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		ReaperUlt.Button.Name = "ReaperUlt"
		ReaperUlt.Button.Text = mvtg.Ults.Reaper.Text
		table.insert(buttons, ReaperUlt)
		mvtg.Ults.Reaper.Button = ReaperUlt.Button

		mvtg.Ults.Reaper.Value = false

		ReaperUlt.Button.MouseButton1Down:connect(function()
			if isGold or isMaster then
				if not mvtg.Ults.Reaper.Value then
					checkMoves(5)
					mvtg.Ults.Reaper.Value = true
					mvtg.Ults.Reaper.Text = "Reaper's Rage Hack (On)"
				else
					mvtg.Ults.Reaper.Value = false
					mvtg.Ults.Reaper.Text = "Reaper's Rage Hack (Off)"
				end
				ReaperUlt.Button.Text = mvtg.Ults.Reaper.Text
			else
				mvtg.Ults.Reaper.Text = "Member Not Gold"
				ReaperUlt.Button.Text = mvtg.Ults.Reaper.Text
				wait(1)
				mvtg.Ults.Reaper.Text = "Reaper's Rage Hack (Off)"
				ReaperUlt.Button.Text = mvtg.Ults.Reaper.Text
			end
		end)

		-- Ablaze Judgement Hack

		local AblazeJudgement = Instance.new("TextButton")
		AblazeJudgement.Name = "AblazeJudgement"
		AblazeJudgement.Text = mvtg.Ults.Light.Text
		table.insert(buttons, AblazeJudgement)
		mvtg.Ults.Light.Button = AblazeJudgement

		mvtg.Ults.Light.Value = false

		AblazeJudgement.MouseButton1Down:connect(function()
			if mvtg.Ults.Light.Value == false then
				checkMoves(5)
				mvtg.Ults.Light.Value = true
				mvtg.Ults.Light.Text = "Ablaze Judgement Hack (On)"
			else
				mvtg.Ults.Light.Value = false
				mvtg.Ults.Light.Text = "Ablaze Judgement Hack (Off)"
			end
			AblazeJudgement.Text = mvtg.Ults.Light.Text
		end)

		-- Void Opening Hack

		local VoidOpening = Instance.new("TextButton")
		VoidOpening.Name = "VoidOpening"
		VoidOpening.Text = mvtg.Ults.Void.Text
		table.insert(buttons, VoidOpening)
		mvtg.Ults.Void.Button = VoidOpening

		mvtg.Ults.Void.Value = false

		VoidOpening.MouseButton1Down:connect(function()
			if mvtg.Ults.Void.Value == false then
				checkMoves(5)
				mvtg.Ults.Void.Value = true
				mvtg.Ults.Void.Text = "Void Opening Hack (On)"
			else
				mvtg.Ults.Void.Value = false
				mvtg.Ults.Void.Text = "Void Opening Hack (Off)"
			end
			VoidOpening.Text = mvtg.Ults.Void.Text
		end)

		-- The World Hack

		local TheWorld = Instance.new("TextButton")
		TheWorld.Name = "TheWorld"
		TheWorld.Text = mvtg.Ults.Time.Text
		table.insert(buttons, TheWorld)
		mvtg.Ults.Time.Button = TheWorld

		mvtg.Ults.Time.Value = false

		TheWorld.MouseButton1Down:connect(function()
			if mvtg.Ults.Time.Value == false then
				checkMoves(5)
				mvtg.Ults.Time.Value = true
				mvtg.Ults.Time.Text = "The World Hack (On)"
			else
				mvtg.Ults.Time.Value = false
				mvtg.Ults.Time.Text = "The World Hack (Off)"
			end
			TheWorld.Text = mvtg.Ults.Time.Text
		end)

		-- Polaris Hack

		local Polaris = Instance.new("TextButton")
		Polaris.Name = "Polaris"
		Polaris.Text = mvtg.Ults.Aurora.Text
		table.insert(buttons, Polaris)
		mvtg.Ults.Aurora.Button = Polaris

		mvtg.Ults.Aurora.Value = false

		Polaris.MouseButton1Down:connect(function()
			if mvtg.Ults.Aurora.Value == false then
				checkMoves(5)
				mvtg.Ults.Aurora.Value = true
				mvtg.Ults.Aurora.Text = "Polaris Hack (On)"
			else
				mvtg.Ults.Aurora.Value = false
				mvtg.Ults.Aurora.Text = "Polaris Hack (Off)"
			end
			Polaris.Text = mvtg.Ults.Aurora.Text
		end)

		-- Instant Shattering Eruption

		local ShatteringEruption = Instance.new("TextButton")
		ShatteringEruption.Name = "ShatteringEruption"
		ShatteringEruption.Text = mvtg.Ults.Explosion.Text
		table.insert(buttons, ShatteringEruption)
		mvtg.Ults.Explosion.Button = ShatteringEruption

		mvtg.Ults.Explosion.Value = false

		ShatteringEruption.MouseButton1Down:connect(function()
			if mvtg.Ults.Explosion.Value == false then
				checkMoves(5)
				mvtg.Ults.Explosion.Value = true
				mvtg.Ults.Explosion.Text = "Instant Shattering Eruption (On)"
			else
				mvtg.Ults.Explosion.Value = false
				mvtg.Ults.Explosion.Text = "Instant Shattering Eruption (Off)"
			end
			ShatteringEruption.Text = mvtg.Ults.Explosion.Text
		end)

		-- Ethereal Acumen Hack

		local EtherealAcumen = Instance.new("TextButton")
		EtherealAcumen.Name = "EtherealAcumen"
		EtherealAcumen.Text = mvtg.Ults.Illusion.Text
		table.insert(buttons, EtherealAcumen)
		mvtg.Ults.Illusion.Button = EtherealAcumen

		mvtg.Ults.Illusion.Value = false

		EtherealAcumen.MouseButton1Down:connect(function()
			if mvtg.Ults.Illusion.Value == false then
				checkMoves(5)
				mvtg.Ults.Illusion.Value = true
				mvtg.Ults.Illusion.Text = "Ethereal Acumen Hack (On)"
			else
				mvtg.Ults.Illusion = false
				mvtg.Ults.Illusion.Text = "Ethereal Acumen Hack (Off)"
			end
			EtherealAcumen.Text = mvtg.Ults.Illusion.Text
		end)

		-- Toxic Basilisk Hack

		local ToxicBasilisk = Instance.new("TextButton")
		ToxicBasilisk.Name = "ToxicBasilisk"
		ToxicBasilisk.Text = mvtg.Ults.Acid.Text
		table.insert(buttons, ToxicBasilisk)
		mvtg.Ults.Acid.Button = ToxicBasilisk

		mvtg.Ults.Acid.Value = false

		ToxicBasilisk.MouseButton1Down:connect(function()
			if mvtg.Ults.Acid.Value == false then
				checkMoves(5)
				mvtg.Ults.Acid.Value = true
				mvtg.Ults.Acid.Text = "Toxic Basilisk Hack (On)"
			else
				mvtg.Ults.Acid.Value = false
				mvtg.Ults.Acid.Text = "Toxic Basilisk Hack (Off)"
			end
			ToxicBasilisk.Text = mvtg.Ults.Acid.Text
		end)

		-- Arcane Guardian Hack

		local ArcaneGuardian = Instance.new("TextButton")
		ArcaneGuardian.Name = "ArcaneGuardian"
		ArcaneGuardian.Text = mvtg.Ults.Angel.Text
		table.insert(buttons, ArcaneGuardian)
		mvtg.Ults.Angel.Button = ArcaneGuardian

		mvtg.Ults.Angel.Value = false

		ArcaneGuardian.MouseButton1Down:connect(function()
			if mvtg.Ults.Angel.Value == false then
				checkMoves(5)
				mvtg.Ults.Angel.Value = true
				mvtg.Ults.Angel.Text = "Arcane Guardian Hack (On)"
			else
				mvtg.Ults.Angel.Value = false
				mvtg.Ults.Angel.Text = "Arcane Guardian Hack (Off)"
			end
			ArcaneGuardian.Text = mvtg.Ults.Angel.Text
		end)

		-- Virtual Zone Hack

		local VirtualZone = Instance.new("TextButton")
		VirtualZone.Name = "VirtualZone"
		VirtualZone.Text = mvtg.Ults.Technology.Text
		table.insert(buttons, VirtualZone)
		mvtg.Ults.Technology.Button = VirtualZone

		mvtg.Ults.Technology.Value = false

		VirtualZone.MouseButton1Down:connect(function()
			if mvtg.Ults.Technology.Value == false then
				checkMoves(5)
				mvtg.Ults.Technology.Value = true
				mvtg.Ults.Technology.Text = "Virtual Zone Hack (On)"
			else
				mvtg.Ults.Technology.Value = false
				mvtg.Ults.Technology.Text = "Virtual Zone Hack (Off)"
			end
			VirtualZone.Text = mvtg.Ults.Technology.Text
		end)

		-- Unmatched Power of the Sun

		local SolarStick = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		SolarStick.Button.Name = "SolarStick"
		SolarStick.Button.Text = mvtg.Ults.Solar.Text
		table.insert(buttons, SolarStick)
		mvtg.Ults.Solar.Button = SolarStick.Button

		mvtg.Ults.Solar.Value = false

		SolarStick.Button.MouseButton1Down:connect(function()
			if isGold or isMaster then
				if mvtg.Ults.Solar.Value == false then
					checkMoves(5)
					mvtg.Ults.Solar.Value = true
					mvtg.Ults.Solar.Text = "Solar Stick Bug (On)"
				else
					mvtg.Ults.Solar.Value = false
					mvtg.Ults.Solar.Text = "Solar Stick Bug (Off)"
				end
				SolarStick.Button.Text = mvtg.Ults.Solar.Text
			else
				mvtg.Ults.Solar.Text = "Member Not Gold"
				SolarStick.Button.Text = mvtg.Ults.Solar.Text
				wait(3)
				mvtg.Ults.Solar.Text = "Solar Stick Bug (Off)"
				SolarStick.Button.Text = mvtg.Ults.Solar.Text
			end
		end)

		---- Miscellaneous
		-- Tech Disc Hack

		local TechDisc = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		TechDisc.Button.Name = "TechDisc"
		TechDisc.Button.Text = mvtg.Teleports.Technology.Text
		table.insert(buttons, TechDisc)
		mvtg.Teleports.Technology.Button = TechDisc.Button

		mvtg.Teleports.Technology.Value = false

		TechDisc.Button.MouseButton1Down:connect(function()
			if isGold or isMaster then
				if mvtg.Teleports.Technology.Value == false then
					checkMoves(4)
					mvtg.Teleports.Technology.Value = true
					mvtg.Teleports.Technology.Text = "Tech Disc Hack (On)"
				else
					mvtg.Teleports.Technology.Value = false
					mvtg.Teleports.Technology.Text = "Tech Disc Hack (Off)"
				end
				TechDisc.Button.Text = mvtg.Teleports.Technology.Text
			else
				mvtg.Teleports.Technology.Text = "Member Not Gold"
				TechDisc.Button.Text = mvtg.Teleports.Technology.Text
				wait(3)
				mvtg.Teleports.Technology.Text = "Tech Disc Hack (Off)"
				TechDisc.Button.Text = mvtg.Teleports.Technology.Text
			end
		end)

		-- Aimbot || Currently under development
		--[[
		local Aimbot = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true,
		}
		Aimbot.Button.Name = "Aimbot"
		Aimbot.Button.Text = "Aimbot (Off)"
		table.insert(buttons, Aimbot)

		function toggleAimbot()
			if (not AimbotEnabled) and (isGold or isMaster) then
				AimbotEnabled = true
				Aimbot.Button.Text = "Aimbot (On)"
				while AimbotEnabled do
					BeginTracking()
				end
			elseif AimbotEnabled and (isGold or isMaster) then
				AimbotEnabled = false
				Aimbot.Button.Text = "Aimbot (Off)"
			elseif not (isGold or isMaster) then
				Aimbot.Button.Text = "Member Not Gold"
				wait(3)
				Aimbot.Button.Text = "Aimbot (Off)"
			end
		end

		Aimbot.Button.MouseButton1Down:connect(toggleAimbot)]]

		-- Shard Colors

		local RandomColors = Instance.new("TextButton")
		RandomColors.Name = "RandomColors"
		RandomColors.Text = "Random Shard Colors (Off)"
		table.insert(buttons, RandomColors)

		local ColorsList = {"Really red", "Really blue", "New Yeller", "Hot pink", "Royal purple", "Lime green", "Deep orange", "Toothpaste", "Institutional white"}
		local ShardColorEnabled = false

		local function shardRandomizer()
			for i, v in pairs(game.Workspace[".Ignore"][".ServerEffects"]:GetChildren()) do
				if v.Name == "Shard" and not v:FindFirstChild("shardChanged") then
					v.BrickColor = BrickColor.new(ColorsList[math.random(1,9)])
					local shardChanged = Instance.new("BoolValue")
					shardChanged.Name = "shardChanged"
					shardChanged.Parent = v
					shardChanged.Value = true
				elseif v.Name == "Shard" and v:FindFirstChild("shardChanged").Value then end
			end
		end

		RandomColors.MouseButton1Down:connect(function()
			if ShardColorEnabled == false then
				ShardColorEnabled = true
				RandomColors.Text = "Random Shard Colors (On)"
				while ShardColorEnabled do
					shardRandomizer()
					wait(.5)
				end
			else
				ShardColorEnabled = false
				RandomColors.Text = "Random Shard Colors (Off)"
			end	
		end)

		-- Anti-Lag

		local AntiLag = Instance.new("TextButton")
		AntiLag.Name = "AntiLag"
		AntiLag.Text = "Anti lag (Off)"
		table.insert(buttons, AntiLag)

		AntiLagEnabled = false

		function removeLag()
			for i, v in pairs(game.Workspace['.Ignore']['.LocalEffects']:GetChildren()) do
				if v:FindFirstChild("Mesh") and v:FindFirstChild("D1") and v:FindFirstChild("D2") then
					if v.D1.Texture == "rbxassetid://2671622646" then
						v:Destroy()
					end
				elseif v:FindFirstChild("FrontDecal") and v:FindFirstChild("BackDecal") and v:FindFirstChild("SpecialMesh") then
					if v.FrontDecal.Texture == "rbxassetid://979004291" then
						v:Destroy()
					end
				elseif (v.Name == "OrbitalStrike") or (v.Name == "BoltPart") or (string.sub(v.Name, 1, 10) == "Sound_Tech") then
					v:Destroy()
				end
			end

			--[[for i, v in pairs(game.Workspace['.Ignore']['.Attacks']:GetChildren()) do
				if v.Color == Color3.fromRGB(255, 0, 0) then
					if v.Mesh.MeshType == "Sphere" then
						wait()
						v:Destroy()
					end
				end
			end]]

			for i, v in pairs(game.Players:GetPlayers()) do
				for _, x in pairs(v.Character:GetChildren()) do
					if x.Name == "AngelSword" then
						x:Destroy()
					end
				end
			end
		end

		game.Workspace.DescendantAdded:connect(function(v)
			if AntiLagEnabled then
				if v:FindFirstChild("Mesh") and v:FindFirstChild("D1") and v:FindFirstChild("D2") then
					if v.D1.Texture == "rbxassetid://2671622646" then
						wait()
						v:Destroy()
					end
				elseif v.Name == "AngelSword" then
					wait()
					v:Destroy()
				elseif v:FindFirstChild("FrontDecal") then
					if v.FrontDecal.Texture == "rbxassetid://979004291" then
						wait()
						v:Destroy()
					end
				--[[elseif pcall(v.Color == Color3.fromRGB(255, 0, 0)) then
					if v.Mesh.MeshType == "Sphere" then
						wait()
						v:Destroy()
					end]]
				elseif (v.Name == "OrbitalStrike") or (v.Name == "BoltPart") or (string.sub(v.Name, 1, 10) == "Sound_Tech") then
					wait()
					v:Destroy()
				elseif (v.Name == "LightDisc") then
					v:Destroy()
				end
			end
		end)

		AntiLag.MouseButton1Down:connect(function()
			if AntiLagEnabled == false then
				AntiLagEnabled = true
				AntiLag.Text = "Anti-Lag (On)"
				removeLag()
			else
				AntiLagEnabled = false
				AntiLag.Text = "Anti-Lag (Off)"
			end
		end)

		-- Ignore body forces

		local IgnorePhysics = Instance.new("TextButton")
		IgnorePhysics.Name = "IgnoreBodyForces"
		IgnorePhysics.Text = "Ignore body forces (Off) [Z]"
		table.insert(buttons, IgnorePhysics)

		IgnorePhysicsEnabled = false

		local function initialNullifyForces()
			for i, v in pairs(player.Character.HumanoidRootPart:GetChildren()) do
				if v:IsA("BodyGyro") then
					wait()
					v:Destroy()
				elseif v:IsA("BodyPosition") then
					wait()
					v:Destroy()
				elseif v:IsA("BodyVelocity") then
					wait()
					v:Destroy()
				elseif v:IsA("BodyAngularVelocity") then
					wait()
					v:Destroy()
				elseif v:IsA("BodyForce") then
					wait()
					v:Destroy()
				elseif v:IsA("BodyThrust") then
					wait()
					v:Destroy()
				elseif v:IsA("RocketPropulsion") then
					wait()
					v:Destroy()
				end
			end

			for i, v in pairs(player.Character.FlipsHolder:GetChildren()) do
				if v:IsA("BodyGyro") then
					wait()
					v:Destroy()
				elseif v:IsA("BodyPosition") then
					wait()
					v:Destroy()
				elseif v:IsA("BodyVelocity") then
					wait()
					v:Destroy()
				elseif v:IsA("BodyAngularVelocity") then
					wait()
					v:Destroy()
				elseif v:IsA("BodyForce") then
					wait()
					v:Destroy()
				elseif v:IsA("BodyThrust") then
					wait()
					v:Destroy()
				elseif v:IsA("RocketPropulsion") then
					wait()
					v:Destroy()
				end
			end
		end

		local function AfterNullifyForces()
			player.Character.DescendantAdded:connect(function(v)
				if IgnorePhysicsEnabled then
					if v:IsA("BodyGyro") then
						wait()
						v:Destroy()
					elseif v:IsA("BodyPosition") then
						wait()
						v:Destroy()
					elseif v:IsA("BodyVelocity") then
						wait()
						v:Destroy()
					elseif v:IsA("BodyAngularVelocity") then
						wait()
						v:Destroy()
					elseif v:IsA("BodyForce") then
						wait()
						v:Destroy()
					elseif v:IsA("BodyThrust") then
						wait()
						v:Destroy()
					elseif v:IsA("RocketPropulsion") then
						wait()
						v:Destroy()
					end
				end
			end)
		end

		function beginNullifyForces()
			if IgnorePhysicsEnabled == false then
				IgnorePhysicsEnabled = true
				IgnorePhysics.Text = "Ignore body forces (On) [Z]"
				initialNullifyForces()
				AfterNullifyForces()
				while IgnorePhysicsEnabled do
					wait()
					if player.Character.Humanoid.Health == 0 then
						repeat wait() until player.Character.Humanoid.Health ~= 0
						AfterNullifyForces()
					end
				end
			else
				IgnorePhysicsEnabled = false
				IgnorePhysics.Text = "Ignore body forces (Off) [Z]"
			end
		end

		IgnorePhysics.MouseButton1Down:connect(beginNullifyForces)

		-- Anti-Gravity

		local AntiGravity = Instance.new("TextButton")
		AntiGravity.Name = "AntiGravity"
		AntiGravity.Text = "Anti-Gravity (Off) [G]"
		table.insert(buttons, AntiGravity)

		AntiGravityEnabled = false

		function AntiGravityFunc()
			if AntiGravityEnabled == false then
				AntiGravityEnabled = true
				AntiGravity.Text = "Anti-Gravity (On) [G]"
				local BodyForce = Instance.new("BodyForce")
				BodyForce.Parent = player.Character.HumanoidRootPart
				BodyForce.Name = "AntiGravityForce"
				BodyForce.Force = Vector3.new(0, 5000, 0)
			else
				AntiGravityEnabled = false
				AntiGravity.Text = "Anti-Gravity (Off) [G]"
				if player.Character.HumanoidRootPart:FindFirstChild("AntiGravityForce") then
					player.Character.HumanoidRootPart.AntiGravityForce:Destroy()
				end
			end
		end

		AntiGravity.MouseButton1Down:connect(AntiGravityFunc)

		-- Click-TP

		local ClickTP = Instance.new("TextButton")
		ClickTP.Name = "ClickTP"
		ClickTP.Text = "Click-TP (Off) [J to tp to mouse]"
		table.insert(buttons, ClickTP)

		ClickTPEnabled = false

		ClickTP.MouseButton1Down:connect(function()
			if ClickTPEnabled == true then
				ClickTPEnabled = false
				ClickTP.Text = "Click-TP (Off) [J to Click-TP]"
			else
				ClickTPEnabled = true
				ClickTP.Text = "Click-TP (On) [J to Click-TP]"
			end
		end)

		function clicktp(position)
			if player == nil or player.Character == nil then return end
			player.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(position.x, position.y + 3, position.z))
		end

		-- Freeze

		local Freeze = Instance.new("TextButton")
		Freeze.Name = "Freeze"
		Freeze.Text = "Freeze (Off) [F]"
		table.insert(buttons, Freeze)

		FreezeEnabled = false

		function FreezeFunc()
			if FreezeEnabled == false then
				FreezeEnabled = true
				Freeze.Text = "Freeze (On) [F]"
				player.Character.HumanoidRootPart.Anchored = true
			else
				FreezeEnabled = false
				Freeze.Text = "Freeze (Off) [F]"
				player.Character.HumanoidRootPart.Anchored = false
			end
		end

		Freeze.MouseButton1Down:connect(FreezeFunc)

		-- Infinite Sprint

		local InfSprint = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		InfSprint.Button.Name = "InfSprint"
		InfSprint.Button.Text = "Infinite Sprint (Off)"
		table.insert(buttons, InfSprint)
		mvtg.Misc.InfSprint.Button = InfSprint

		mvtg.Misc.InfSprint.Value = false

		local function IsSprinting()
			repeat wait() until player.Character ~= nil
			local sprint
			local pd
			pd = RSR:WaitForChild("PlayerData").OnClientEvent:Connect(function(p, t)
				sprint = t.Running
				pd:Disconnect()
			end)
			repeat wait() until sprint ~= nil
			return sprint
		end

		InfSprint.Button.MouseButton1Down:connect(function()
			if isGold or isMaster then
				if mvtg.Misc.InfSprint.Value == false then
					mvtg.Misc.InfSprint.Value = true
					mvtg.Misc.InfSprint.Text = "Infinite Sprint (On)"
					InfSprint.Button.Text = mvtg.Misc.InfSprint.Text
					repeat
						if IsSprinting() then
							local args = {
								[1] = "Running",
								[2] = false,
							}
							game:GetService("ReplicatedStorage").Remotes.PlayerData:FireServer(unpack(args))
						end
						wait(.5)
					until mvtg.Misc.InfSprint.Value == false
				else
					mvtg.Misc.InfSprint.Value = false
					mvtg.Misc.InfSprint.Text = "Infinite Sprint (Off)"
					InfSprint.Button.Text = mvtg.Misc.InfSprint.Text
					if not IsSprinting() then
						local args = {
							[1] = "Running",
							[2] = true,
						}
						game:GetService("ReplicatedStorage").Remotes.PlayerData:FireServer(unpack(args))
					end
				end
			else
				mvtg.Misc.InfSprint.Text = "Member Not Gold"
				InfSprint.Button.Text = mvtg.Misc.InfSprint.Text
				wait(3)
				mvtg.Misc.InfSprint.Text = "Infinite Sprint (Off)"
				InfSprint.Button.Text = mvtg.Misc.InfSprint.Text
			end
		end)

		-- Instant Explosive Leap

		local ExplosionHack = Instance.new("TextButton")
		ExplosionHack.Name = "ExplosionHack"
		ExplosionHack.Text = mvtg.Teleports.Explosion.Text
		table.insert(buttons, ExplosionHack)
		mvtg.Teleports.Explosion.Button = ExplosionHack

		mvtg.Teleports.Explosion.Value = false

		ExplosionHack.MouseButton1Down:connect(function()
			if mvtg.Teleports.Explosion.Value == false then
				checkMoves(4)
				mvtg.Teleports.Explosion.Value = true
				mvtg.Teleports.Explosion.Text = "Instant Leap Stun (On)"
			else
				mvtg.Teleports.Explosion.Value = false
				mvtg.Teleports.Explosion.Text = "Instant Leap Stun (Off)"
			end
			ExplosionHack.Text = mvtg.Teleports.Explosion.Text
		end)

		-- Instant Rock Fist

		local RockFistHack = Instance.new("TextButton")
		RockFistHack.Name = "RockFistHack"
		RockFistHack.Text = mvtg.Teleports.Earth.Text
		table.insert(buttons, RockFistHack)
		mvtg.Teleports.Earth.Button = RockFistHack

		mvtg.Teleports.Earth.Value = false

		RockFistHack.MouseButton1Down:connect(function()
			if mvtg.Teleports.Earth.Value == false then
				checkMoves(4)
				mvtg.Teleports.Earth.Value = true
				mvtg.Teleports.Earth.Text = "Instant Rock Fist (On)"
			else
				mvtg.Teleports.Earth.Value = false
				mvtg.Teleports.Earth.Text = "Instant Rock Fist (Off)"
			end
			RockFistHack.Text = mvtg.Teleports.Earth.Text
		end)

		-- Long Flash

		local LFlash = Instance.new("TextButton")
		LFlash.Name = "Flash"
		LFlash.Text = mvtg.Teleports.Storm.Text
		table.insert(buttons, LFlash)
		mvtg.Teleports.Storm.Button = LFlash

		mvtg.Teleports.Storm.Value = false

		function longflash()
			local mousepos = mouse.Hit.p
			local args = {
				[1] = "Storm",
				[2] = "Lightning Flash"
			}
			RSR.DoClientMagic:FireServer(unpack(args))
			local args = {
				[1] = "Storm",
				[2] = "Lightning Flash",
				[3] = {
					["End"] = mousepos,
					["Origin"] = players.LocalPlayer.Character.HumanoidRootPart.CFrame.p
				}
			}
			RSR.DoMagic:InvokeServer(unpack(args))
		end

		LFlash.MouseButton1Down:connect(function()
			if mvtg.Teleports.Storm.Value == false then
				checkMoves(4)
				mvtg.Teleports.Storm.Value = true
				mvtg.Teleports.Storm.Text = "Long Flash (On) [` to use]"
			else
				mvtg.Teleports.Storm.Value = false
				mvtg.Teleports.Storm.Text = "Long Flash (Off) [` to use]"
			end
			LFlash.Text = mvtg.Teleports.Storm.Text
		end)

		-- View Target

		local ViewTarget = Instance.new("TextButton")
		ViewTarget.Name = "ViewTarget"
		ViewTarget.Text = "View Target (Off) [V]"
		table.insert(buttons, ViewTarget)

		viewing = false

		function view()
			if target ~= player.Name then
				if viewing == false then
					viewing = true
					game.Workspace.Camera.CameraSubject = game.Players[target].Character.Humanoid
					ViewTarget.Text = "View Target (On) [V]"
				else
					viewing = false
					game.Workspace.Camera.CameraSubject = player.Character.Humanoid
					ViewTarget.Text = "View Target (Off) [V]"
				end
			elseif viewing == true then 
				viewing = false
				game.Workspace.Camera.CameraSubject = player.Character.Humanoid
				ViewTarget.Text = "View Target (Off) [V]"
			end
		end

		ViewTarget.MouseButton1Down:connect(view)

		-- Teleport to Target

		local TPTarget = Instance.new("TextButton")
		TPTarget.Name = "TPTarget"
		TPTarget.Text = "Teleport To Target (Off) [U]"
		table.insert(buttons, TPTarget)

		TPTargetEnabled = false

		local function TPToTarget()
			if TPTargetEnabled and target ~= player.Name then
				repeat wait() until getHRP(player.Character) and getHRP(game.Players[target].Character)

				getHRP(player.Character).CFrame = getHRP(game.Players[target].Character).CFrame
			end
		end

		TPTarget.MouseButton1Down:connect(function()
			if TPTargetEnabled == false then
				TPTargetEnabled = true
				TPTarget.Text = "Teleport To Target (On) [U]"
			else
				TPTargetEnabled = false
				TPTarget.Text = "Teleport To Target (Off) [U]"
			end
		end)

		-- Loop Teleport to Target

		local LoopTPTarget = Instance.new("TextButton")
		LoopTPTarget.Name = "LoopTPTarget"
		LoopTPTarget.Text = "Loop Teleport To Target (Off)"
		table.insert(buttons, LoopTPTarget)

		LoopTPTargetEnabled = false

		LoopTPTarget.MouseButton1Down:connect(function()
			if LoopTPTargetEnabled == false then
				LoopTPTargetEnabled = true
				LoopTPTarget.Text = "Loop Teleport To Target (On)"
				while LoopTPTargetEnabled do
					wait()
					TPToTarget()
				end
			else
				LoopTPTargetEnabled = false
				LoopTPTarget.Text = "Loop Teleport To Target (Off)"
			end
		end)

		-- Standard ESP

		local ESP = Instance.new("TextButton")
		ESP.Name = "ESP"
		ESP.Text = "ESP (Off) [B]"
		table.insert(buttons, ESP)		

		ESPInfo.Standard.Enabled = false

		local Holder = Instance.new("Folder", game.CoreGui)
		Holder.Name = "ESP"

		local UpdateFuncs = {}
		local Box
		local NameTag
		local Tag

		function CreateStandard()
			local made = false
			Box = Instance.new("BoxHandleAdornment")
			Box.Name = "nilBox"
			Box.Size = Vector3.new(4, 7, 4)
			Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
			Box.Transparency = 0.7
			Box.ZIndex = 0
			Box.AlwaysOnTop = true
			Box.Visible = true

			NameTag = Instance.new("BillboardGui")
			ESPInfo.Standard.NameTag = NameTag
			NameTag.Name = "nilNameTag"
			NameTag.Enabled = true
			NameTag.Size = UDim2.new(0, 200, 0, 50)
			NameTag.AlwaysOnTop = true
			NameTag.StudsOffset = Vector3.new(0, 3.6, 0)
			NameTag.MaxDistance = 750

			Tag = Instance.new("TextLabel", NameTag)
			Tag.Name = "Tag"
			Tag.BackgroundTransparency = 1
			Tag.Position = UDim2.new(0, -50, 0, 0)
			Tag.Size = UDim2.new(0, 300, 0, 20)
			Tag.TextSize = 20
			Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
			Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
			Tag.TextStrokeTransparency = 0.4
			Tag.Text = "Not Available"
			Tag.Font = Enum.Font.RobotoMono
			Tag.TextScaled = false
			Tag.TextTransparency = 0
			made = true
			repeat wait() until made
			return made
		end

		function LoadCharacter(v)
			if v ~= player then
				repeat wait() until v.Character ~= nil
				v.Character:WaitForChild("Humanoid")
				local vHolder = Holder:FindFirstChild(v.Name)
				vHolder:ClearAllChildren()

				CreateStandard()

				if ESPInfo.Standard.Enabled then
					local b = Box:Clone()
					b.Name = v.Name .. "Box"
					b.Adornee = v.Character.HumanoidRootPart
					b.Parent = vHolder

					local t = NameTag:Clone()
					t.Name = v.Name .. "NameTag"
					t.Parent = vHolder
					t.Adornee = v.Character:WaitForChild("HumanoidRootPart", 5)
					if not t.Adornee then
						return UnloadCharacter(v)
					end
					t.Tag.Text = v.Name
					t.Enabled = true
					wait()

					local function UpdateNameTag()
						if not pcall(function()
								-- v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
								local maxh = math.ceil(v.Character.Humanoid.MaxHealth * 10)
								local h = math.ceil(v.Character.Humanoid.Health * 10)
								t.Tag.Text = v.Name .. "\n" .. ((maxh ~= 0 and tostring(math.ceil((h / maxh) * 100))) or "0") .. "%  " .. tostring(h) .. "/" .. tostring(maxh)
								if ESPInfo.Standard.Enabled then
									t.Tag.TextTransparency = 0
									b.Transparency = 0.7
								else
									t.Tag.TextTransparency = 1
									b.Transparency = 1
								end
								if h / maxh == 1 then
									t.Tag.TextColor3 = Color3.fromRGB(255, 255, 255)
									b.Color3 = Color3.fromRGB(0, 0, 0)
								elseif h / maxh == 0 then
									t.Tag.TextColor3 = Color3.fromRGB(0, 0, 0)
									b.Color3 = Color3.fromRGB(0, 0, 0)
								else
									t.Tag.TextColor3 = Color3.fromRGB(192, (192 * (h / maxh)), (192 * (h / maxh)))
									b.Color3 = Color3.fromRGB(192, (192 * (h / maxh)), (192 * (h / maxh)))
								end
							end) then
							UpdateFuncs[v] = nil
						end
					end
					UpdateNameTag()
					UpdateFuncs[v] = UpdateNameTag
				end
			end
		end

		function UnloadCharacter(v)
			local vHolder = Holder:FindFirstChild(v.Name)
			if vHolder and (vHolder:FindFirstChild(v.Name .. "Box") ~= nil or vHolder:FindFirstChild(v.Name .. "NameTag") ~= nil) then
				vHolder:ClearAllChildren()
			end
		end

		function LoadPlayer(v)
			if v ~= player then
				if Holder:FindFirstChild(v.Name) then
					Holder[v.Name]:Destroy()
				end
				local vHolder = Instance.new("Folder", Holder)
				vHolder.Name = v.Name
				v.CharacterAdded:Connect(function()
					if ESPInfo.Standard.Enabled == true then
						pcall(LoadCharacter, v)
					end
				end)
				v.CharacterRemoving:Connect(function()
					pcall(UnloadCharacter, v)
				end)
				LoadCharacter(v)
			end
		end

		function UnloadPlayer(v)
			UnloadCharacter(v)
			local vHolder = Holder:FindFirstChild(v.Name)
			if vHolder then
				vHolder:Destroy()
			end
		end

		for i, v in pairs(players:GetPlayers()) do
			spawn(function() pcall(LoadPlayer, v) end)
		end

		players.PlayerAdded:Connect(function(v)
			pcall(LoadPlayer, v)
		end)

		players.PlayerRemoving:Connect(function(v)
			pcall(UnloadPlayer, v)
		end)

		game.ItemChanged:Connect(function(i)
			if i:IsA("Player") then
				if Holder:FindFirstChild(i.Name) then
					UnloadCharacter(i)
					wait()
					LoadCharacter(i)
				end
			elseif i:IsA("Humanoid") and i.Parent then
				local p = players:GetPlayerFromCharacter(i.Parent)
				if p ~= player and p ~= nil and Holder:FindFirstChild(p.Name) then
					pcall(function()
						UpdateFuncs[p]()
					end)
				end
			end
		end)

		function toggleESP()
			if ESPInfo.Standard.Enabled == false then
				if ESPInfo.Gold.Enabled then
					ESPInfo.Gold.Enabled = false
					ESPInfo.Standard.Enabled = true
					ESPGold.Button.Text = "Standard ESP Enabled"
					wait(1)
					ESPGold.Button.Text = "Detailed ESP (Off) [M]"
				else
					ESPInfo.Standard.Enabled = true
				end
				ESP.Text = "ESP (On) [B]"
				for i,v in pairs(players:GetPlayers()) do
					spawn(function() pcall(LoadPlayer, v) end)
				end
			else
				ESPInfo.Standard.Enabled = false
				ESP.Text = "ESP (Off) [B]"
				for i, v in pairs(game.Players:GetPlayers()) do
					spawn(function() pcall(UnloadPlayer, v) end)
				end
			end
		end

		ESP.MouseButton1Down:connect(toggleESP)

		-- Gold ESP

		local ESPGold = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		ESPGold.Button.Name = "ESPGold"
		ESPGold.Button.Text = "Detailed ESP (Off) [M]"
		table.insert(buttons, ESPGold)

		ESPInfo.Gold.Enabled = false

		local GHolder = Instance.new("Folder", game.CoreGui)
		GHolder.Name = "ESPGold"

		local GUpdateFuncs = {}
		local GBox
		local GNameTag
		local GTag

		function CreateDetailed()
			local made = false
			GBox = Instance.new("BoxHandleAdornment")
			GBox.Name = "nilBoxG"
			GBox.Size = Vector3.new(4, 7, 4)
			GBox.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
			GBox.Transparency = 0.7
			GBox.ZIndex = 0
			GBox.AlwaysOnTop = true
			GBox.Visible = true

			GNameTag = Instance.new("BillboardGui")
			ESPInfo.Gold.NameTag = GNameTag
			GNameTag.Name = "nilNameTagG"
			GNameTag.Enabled = true
			GNameTag.Size = UDim2.new(0, 200, 0, 50)
			GNameTag.AlwaysOnTop = true
			GNameTag.StudsOffset = Vector3.new(0, 3.6, 0)
			GNameTag.MaxDistance = 750

			GTag = Instance.new("TextLabel", GNameTag)
			GTag.Name = "GTag"
			GTag.BackgroundTransparency = 1
			GTag.Position = UDim2.new(0, -50, 0, -5)
			GTag.Size = UDim2.new(0, 300, 0, 20)
			GTag.TextSize = 20
			GTag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
			GTag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
			GTag.TextStrokeTransparency = 0.4
			GTag.Text = "Not Available"
			GTag.Font = Enum.Font.RobotoMono
			GTag.TextScaled = false
			GTag.TextTransparency = 0
			made = true
			repeat wait() until made
			return made
		end

		function GLoadCharacter(v)
			
			local tblPlayerData = {}
			repeat wait() until v.Character ~= nil
			RSR:WaitForChild("PlayerData").OnClientEvent:Connect(function(v, tblData)
				tblPlayerData[v] = tblData
			end)
			
			if v ~= player then
				repeat wait() until v.Character ~= nil
				v.Character:WaitForChild("Humanoid")
				local vHolderG = GHolder:FindFirstChild(v.Name)
				vHolderG:ClearAllChildren()

				CreateDetailed()

				if ESPInfo.Gold.Enabled then
					local b = GBox:Clone()
					b.Name = v.Name .. "GBox"
					b.Adornee = v.Character.HumanoidRootPart
					b.Parent = vHolderG

					local t = GNameTag:Clone()
					t.Name = v.Name .. "GNameTag"
					t.Parent = vHolderG
					t.Adornee = v.Character:WaitForChild("HumanoidRootPart", 5)
					if not t.Adornee then
						return GUnloadCharacter(v)
					end
					t.GTag.Text = v.Name
					t.Enabled = true
					wait()

					local function GUpdateNameTag()
						if not pcall(function()
								-- v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
								local maxh = math.ceil(v.Character.Humanoid.MaxHealth * 10)
								local h = math.ceil(v.Character.Humanoid.Health * 10)
								local strh = "H: " .. (not(maxh == 0) and tostring(math.ceil(100 * h / maxh)) or 0) .. "% (" .. tostring(h) .. "/" .. tostring(maxh) .. ")"
								--
								local maxm = tblPlayerData[v] and math.ceil(tblPlayerData[v].MaxMana * 10) or 1000
								local m = tblPlayerData[v] and math.ceil(tblPlayerData[v].Mana * 10) or 1000
								local strm = "M: " .. (not(maxm == 0) and tostring(math.ceil(100 * m / maxm)) or 0) .. "% (" .. tostring(m) .. "/" .. tostring(maxm) .. ")"
								--
								local maxs = tblPlayerData[v] and math.ceil(tblPlayerData[v].MaxStamina * 10) or 1000
								local s = tblPlayerData[v] and math.ceil(tblPlayerData[v].Stamina * 10) or 1000
								local strs =  "S: " .. (not(maxs == 0) and tostring(math.ceil(100 * s / maxs)) or 0) .. "% (" .. tostring(s) .. "/" .. tostring(maxs) .. ")"

								t.GTag.Text = v.Name .. ("\n" .. strh) .. ("\n" .. strm) .. ("\n" .. strs)
								
								if ESPInfo.Gold.Enabled then
									t.GTag.TextTransparency = 0
									b.Transparency = 0.7
								else
									t.GTag.TextTransparency = 1
									b.Transparency = 1
								end
								if h / maxh >= 0.75 then
									t.GTag.TextColor3 = Color3.fromRGB(62, 255, 62)
									b.Color3 = Color3.fromRGB(15, 153, 64)
								elseif h / maxh <= 0.75 and h / maxh >= 0.5 then
									t.GTag.TextColor3 = Color3.fromRGB(255, 255, 55)
									b.Color3 = Color3.fromRGB(179, 132, 15)
								elseif h / maxh == 0 then
									t.GTag.TextColor3 = Color3.fromRGB(255, 2, 2)
									b.Color3 = Color3.fromRGB(134, 12, 66)
								else
									t.GTag.TextColor3 = Color3.fromRGB(255, (196 * (h / maxh)), (2 * (h / maxh)))
									b.Color3 = Color3.fromRGB(179, (132 * (h / maxh)), (15 * (h / maxh)))
								end
							end) then
							GUpdateFuncs[v] = nil
						end
					end
					GUpdateNameTag()
					GUpdateFuncs[v] = GUpdateNameTag
				end
			end
		end

		function GUnloadCharacter(v)
			local vHolderG = GHolder:FindFirstChild(v.Name)
			if vHolderG and (vHolderG:FindFirstChild(v.Name .. "GBox") ~= nil or vHolderG:FindFirstChild(v.Name .. "GNameTag") ~= nil) then
				vHolderG:ClearAllChildren()
			end
		end

		function GLoadPlayer(v)
			if v ~= player then
				if GHolder:FindFirstChild(v.Name) then
					GHolder[v.Name]:Destroy()
				end
				local vHolderG = Instance.new("Folder", GHolder)
				vHolderG.Name = v.Name
				v.CharacterAdded:Connect(function()
					if ESPInfo.Gold.Enabled == true then
						pcall(GLoadCharacter, v)
					end
				end)
				v.CharacterRemoving:Connect(function()
					pcall(GUnloadCharacter, v)
				end)
				GLoadCharacter(v)
			end
		end

		function GUnloadPlayer(v)
			GUnloadCharacter(v)
			local vHolderG = GHolder:FindFirstChild(v.Name)
			if vHolderG then
				vHolderG:Destroy()
			end
		end

		for i, v in pairs(players:GetPlayers()) do
			spawn(function() pcall(GLoadPlayer, v) end)
		end

		players.PlayerAdded:Connect(function(v)
			pcall(GLoadPlayer, v)
		end)

		players.PlayerRemoving:Connect(function(v)
			pcall(GUnloadPlayer, v)
		end)

		game.ItemChanged:Connect(function(i)
			if i:IsA("Player") then
				if GHolder:FindFirstChild(i.Name) then
					GUnloadCharacter(i)
					wait()
					GLoadCharacter(i)
				end
			elseif i:IsA("Humanoid") and i.Parent then
				local p = players:GetPlayerFromCharacter(i.Parent)
				if p ~= player and p ~= nil and GHolder:FindFirstChild(p.Name) then
					pcall(function()
						GUpdateFuncs[p]()
					end)
				end
			end
		end)

		function toggleESPGold()
			if isGold or isMaster then
				if ESPInfo.Gold.Enabled == false then
					if ESPInfo.Standard.Enabled then
						ESPInfo.Standard.Enabled = false
						ESPInfo.Gold.Enabled = true
						ESP.Text = "Detailed ESP Enabled"
						wait(1)
						ESP.Text = "ESP (Off) [B]"
					else
						ESPInfo.Gold.Enabled = true
					end
					ESPGold.Button.Text = "Detailed ESP (On) [M]"
					for i,v in pairs(players:GetPlayers()) do
						spawn(function() pcall(GLoadPlayer, v) end)
					end
				else
					ESPInfo.Gold.Enabled = false
					ESPGold.Button.Text = "Detailed ESP (Off) [M]"
					for i, v in pairs(game.Players:GetPlayers()) do
						spawn(function() pcall(GUnloadPlayer, v) end)
					end
				end
			else
				ESPGold.Button.Text = "Member Not Gold"
				wait(3)
				ESPGold.Button.Text = "Detailed ESP (Off) [M]"
			end
		end

		ESPGold.Button.MouseButton1Down:connect(toggleESPGold)

		-- TP to Drops
		---- Currently disabled due to threatlevel

		--[[local TPShards = Instance.new("TextButton")
		TPShards.Name = "TPShards"
		TPShards.Text = "Teleport to Shards (Off)"
		table.insert(buttons, TPShards)

		TPShardsEnabled = false	

		local TPDiamonds = Instance.new("TextButton")
		TPDiamonds.Name = "TPDiamonds"
		TPDiamonds.Text = "Teleport to Diamonds (Off)"
		table.insert(buttons, TPDiamonds)

		TPDiamondsEnabled = false

		local plate = Instance.new("Part")
		plate.Parent = game.Workspace
		plate.Size = Vector3.new(40, 1, 40)
		plate.Position = Vector3.new(0, 100000, 0)
		plate.Anchored = true
		plate.Reflectance = 0.5
		plate.Transparency = 0.5

		local time = 0
		local canInvis = false

		function teleportToDrops()
			local hrp = player.Character:WaitForChild("HumanoidRootPart")
			for i, v in pairs(game.Workspace['.Ignore']['.ServerEffects']:GetChildren()) do
				if TPShardsEnabled and v.Name == "Shard" then
					hrp.CFrame = v.CFrame
					wait(.2)
				elseif TPDiamondsEnabled and v.Name == "Diamond" then
					hrp.CFrame = v.CFrame
					wait(.2)
				end

				if canInvis then
					if time == 5 then 
						break
					end
				end
			end

			hrp.CFrame = CFrame.new(Vector3.new(0, 100003, -10))

			return 
		end


		function startTimer()
			local hrp = player.Character:WaitForChild("HumanoidRootPart")
			while wait() do
				if TPShardsEnabled or TPDiamondsEnabled then
					if time ~= 0 then return
					else
						if canInvis then
							RSR.DoClientMagic:FireServer("Spirit", "Spectral Embodiment")
							RSR.DoMagic:InvokeServer("Spirit", "Spectral Embodiment")
							wait(1)
							repeat
								spawn(function() pcall(teleportToDrops) end)
								time = time + 1
								wait(1)
							until time == 6
							hrp.CFrame = CFrame.new(Vector3.new(0, 100003, -10))
							wait(7.5)
							time = 0
						else
							while true do
								if not TPShardsEnabled and not TPDiamondsEnabled then
									break
								end
								spawn(function() pcall(teleportToDrops) end)
								wait(1)
							end
						end
					end
				else
					break
				end
			end

			return
		end

		TPShards.MouseButton1Down:connect(function()
			if player:WaitForChild("PlayerGui"):WaitForChild("Main").Character.Available.ScrollingFrame.Frame:FindFirstChild("Spectral Embodiment") then
				canInvis = true
			end
			if TPShardsEnabled == false then
				TPShardsEnabled = true
				TPShards.Text = "Teleport to Shards (On)"
				startTimer()
				while TPShardsEnabled do
					wait()
					if player.Character.Humanoid.Health == 0 then
						repeat wait() until player.Character.Humanoid.Health ~= 0
						startTimer()
					end
				end
			else
				TPShardsEnabled = false
				TPShards.Text = "Teleport to Shards (Off)"
			end
		end)

		TPDiamonds.MouseButton1Down:connect(function()
			if player:WaitForChild("PlayerGui"):WaitForChild("Main").Character.Available.ScrollingFrame.Frame:FindFirstChild("Spectral Embodiment") then
				canInvis = true
			end
			if TPDiamondsEnabled == false then
				TPDiamondsEnabled = true
				TPDiamonds.Text = "Teleport to Diamonds (On)"
				startTimer()
				while TPDiamondsEnabled do
					wait()
					if player.Character.Humanoid.Health == 0 then
						repeat wait() until player.Character.Humanoid.Health ~= 0
						startTimer()
					end
				end
			else
				TPDiamondsEnabled = false
				TPDiamonds.Text = "Teleport to Diamonds (Off)"
			end
		end)]]

		-- Alt Farming

		local AltFarm = {
			["Button"] = Instance.new("TextButton"),
			["IsGold"] = true
		}
		AltFarm.Name = "AltFarm"
		AltFarm.Button.Text = "Farming Mode (Off)"
		table.insert(buttons,AltFarm)

		AltFarmEnabled = false

		local locs = {{424, 25000, 61},{-67, 25000, 2619},{-2600, 25000, 483}}
		local hrp = player.Character:WaitForChild("HumanoidRootPart")
		local hum = player.Character:WaitForChild("Humanoid")
		local lastpos

		local function doFarm()
			repeat wait() until player.Character ~= nil
			hrp = player.Character:WaitForChild("HumanoidRootPart")
			hum = player.Character:WaitForChild("Humanoid")
			hum.HealthChanged:Connect(function()
				player.Character:BreakJoints()
			end)
		end

		local function alttp(li,lp)
			local newLoc = Vector3.new(unpack(locs[li]))
			if newLoc ~= lp then
				player.Character:MoveTo(newLoc)
			end
		end

		local function altplate(de,li)
			if not li then li = nil end
			if de == false then
				local AltPlate = Instance.new("Part")
				AltPlate.Parent = game:GetService("Workspace")[".Ignore"]
				AltPlate.Position = Vector3.new(locs[li][1], (locs[li][2] - 5), locs[li][3])
				AltPlate.Size = Vector3.new(5,1,5)
				AltPlate.Anchored = true
				AltPlate.Transparency = 1
			else
				if not AltPlate == nil then
					AltPlate:Destroy()
				end
			end
		end

		AltFarm.Button.MouseButton1Down:Connect(function()
			if isGold or isMaster then
				if AltFarmEnabled then
					player.Character:MoveTo(lastpos)
					AltFarmEnabled = false
					AltFarm.Button.Text = "Farming Mode (Off)"
					altplate(true)
					hum.HealthChanged:Disconnect()
				else
					AltFarmEnabled = true
					AltFarm.Button.Text = "Farming Mode (On)"
					lastpos = hrp.position
					local TPLocation = math.random(1,#locs)
					altplate(false,TPLocation)
					repeat
						repeat wait() until player.Character ~= nil
						doFarm()
						if hrp.Position ~= unpack(locs[TPLocation]) then
							alttp(TPLocation,lastpos)
						end
						wait(.1)
					until AltFarmEnabled == false
				end
			else
				AltFarm.Button.Text = "Member Not Gold"
				wait(3)
				AltFarm.Button.Text = "Farming Mode (Off)"
			end
		end)

		local fullbuttons = copy(buttons)

		-- GUI Tweaking

		for i,v in pairs(borders) do
			v.AnchorPoint = Vector2.new(1, 0.5)
			v.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			v.BackgroundTransparency = 0.750
			v.BorderColor3 = Color3.fromRGB(0, 0, 0)
			v.BorderSizePixel = 0
			v.SizeConstraint = Enum.SizeConstraint.RelativeYY
			v.Active = true
			v.Parent = ebgui
		end

		for i,v in pairs(buttons) do
			if typeof(v) == "table" and v.IsGold then
				v.Button.BackgroundColor3 = Color3.fromRGB(236, 175, 20)
				v.Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
				v.Button.BorderSizePixel = 2
				v.Button.Position = UDim2.new(0, 0, 0, 0)
				v.Button.Size = UDim2.new(0, 0, 0, 0)
				v.Button.Font = Enum.Font.Code
				v.Button.FontFace.Weight = Enum.FontWeight.Heavy
				v.Button.TextColor3 = Color3.fromRGB(255, 255, 255)
				v.Button.TextScaled = true
				v.Button.TextSize = 14.000
				v.Button.TextWrapped = true
				v.Button.LayoutOrder = i
				v.Button.Parent = mainframe
			else
				v.BackgroundColor3 = Color3.fromRGB(18, 54, 179)
				v.BorderColor3 = Color3.fromRGB(0, 0, 0)
				v.BorderSizePixel = 2
				v.Position = UDim2.new(0, 0, 0, 0)
				v.Size = UDim2.new(0, 0, 0, 0)
				v.Font = Enum.Font.Code
				v.FontFace.Weight = Enum.FontWeight.Heavy
				v.TextColor3 = Color3.fromRGB(255, 255, 255)
				v.TextScaled = true
				v.TextSize = 14.000
				v.TextWrapped = true
				v.LayoutOrder = i
				v.Parent = mainframe
			end
		end

		-- commandBox

		target = player.Name
		targetSetting = "select"
		looping = false
		SmartAttack = true
		HealSetting = 1
		stunEnabled = true
		local buttonHeight = 30
		local buttonGap = 7

		local stunConnection = getconnections(RSR:WaitForChild("Combat").OnClientEvent)
		local laggers = {
			"1B0F98BE-E10B-4674-9FB4-6F65171A347F", -- log
			"6A33104A-1FE9-4FA8-9374-C164D28F8351", -- brian
			"837736AA-0192-47F9-98C5-8DD0DF18FE74", -- jet
			"55C2049D-C6BD-4523-8804-D539C38792A3", -- pentaract
			"9464B68A-363C-41F8-BB7D-B4BED8AC0963", -- vastorio
			-- "830BD4E9-5EBE-4A13-B47B-9BE60083B836", -- lolok
			-- "63B39E27-DA1B-482E-B28C-6A3398C95A4C", -- alex
			"846A65E2-E963-4A0A-9025-E9B8E9589613", -- bram
			"3F168440-A5C0-4F71-8E51-3FDF9025F51B", -- tomek
			"6A97052A-634E-47E1-8D90-5EE3CA4A96FA", -- raven
			"F5975D7D-2AC5-44AA-801F-827625D6D763", -- alexia
			"48287182-9E77-4F97-A654-97069ED8166C", -- jess
			"7489CBAE-7986-45A9-BE40-A218EDCD0F01" -- cephas
		}

		local allowedToDropFPS = true

		for i, v in pairs(laggers) do
			v = v:lower()

			if (v == clientid) then
				allowedToDropFPS = true
			end
		end

		function getHRP(chr)
			local HRP = chr:FindFirstChild("HumanoidRootPart") or chr:FindFirstChild("Torso") or chr:FindFirstChild("UpperTorso")
			return HRP
		end

		function getHUM(chr)
			local HUM = chr:FindFirstChild("Humanoid")
			return HUM
		end

		local function respawn(plr)
			local chr = plr.Character

			if (chr:FindFirstChildOfClass("Humanoid")) then chr:FindFirstChildOfClass("Humanoid"):ChangeState(15) end
			chr:ClearAllChildren()

			local newchr = Instance.new("Model")
			newchr.Parent = workspace
			plr.Character = newchr

			wait()

			plr.Character = chr
			newchr:Destroy()
		end

		local function refresh(plr)
			local hum = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid", true)
			local pos = hum and hum.RootPart and hum.RootPart.CFrame
			local pos1 = workspace.CurrentCamera.CFrame

			respawn(plr)

			spawn(function()
				plr.CharacterAdded:Wait():WaitForChild("Humanoid").RootPart.CFrame, workspace.CurrentCamera.CFrame = pos, wait() and pos1
			end)
		end

		local function splitArgs(command)
			command = string.gsub(command, ",", " ")
			command = string.split(command, " ")

			for i, v in ipairs(command) do
				v = string.gsub(v, "%s+", "")
				if v == "" then
					table.remove(command, i)
				end
			end

			return command
		end

		local function findPlayer(text)
			local players = game.Players:GetPlayers()
			local matches = {}

			for i, Player in ipairs(players) do
				local name = Player.Name
				text = string.lower(text)
				name = string.lower(name)

				local match = string.find(name, text)

				if match then
					table.insert(matches, Player.Name)
				end
			end

			return matches
		end

		local drugsEnabled = false
		local colorsEnabled = false
		local blackcastEnabled = false
		local colorExclude = {"Head","Torso","Left Arm","Left Leg","Right Arm","Right Leg","Shard","Diamond"}

		--[[98/255, 37/255, 209/255]]
		local color1
		local color2
		local color3

		local function termEBGui()
			warn("Closing EBGui for good...")
			warn("Tweening out UI elements...")
			buttonsmain:TweenPosition(
				UDim2.new(1.25, 0, 0.65, 0),
				"In",
				"Sine",
				.5,
				true
			)
			commandsmain:TweenPosition(
				UDim2.new(1.25, 0, 0.45, 0),
				"In",
				"Sine",
				.5,
				true
			)
			wait(1)
			warn("Resetting target...")
			target = player.Name
			warn("Unloading all ESP elements...")
			for i, v in pairs(players:GetPlayers()) do
				pcall(UnloadCharacter, v)
				pcall(UnloadPlayer, v)
				pcall(GUnloadCharacter, v)
				pcall(GUnloadPlayer, v)
			end
			warn("Ensuring ESP elements are disabled...")
			ESPInfo.Standard.Enabled = false
			ESPInfo.Gold.Enabled = false
			if game:GetService("CoreGui"):FindFirstChild("ESP") and game:GetService("CoreGui"):FindFirstChild("ESPGold") then
				warn("Cleaning up ESP elements...")
				game:GetService("CoreGui").ESP:Destroy()
				game:GetService("CoreGui").ESPGold:Destroy()
			else
				warn("ESP was never enabled, skipping cleanup...")
			end
			warn("Resetting hack values...")
			for a,b in pairs(mvtg) do
				if typeof(b) == "table" then
					for c,d in pairs(b) do
						if typeof(d) == "table" then
							for e,f in pairs(d) do
								if f then f = false end	
							end
						end
					end
				end
			end
			warn("Destroying EBGui and its children...")
			ebgui:Destroy()
		end

		local function inputBox()
			local text = commandBox.Text
			wait()
			commandBox.Text = ""

			local prefix = ";"
			if string.sub(text, 1, 1) == (prefix) then
				text = string.lower(text)

				if ((string.sub(text, 1, 3) == (prefix .. "re")) and not (string.sub(text,1,7) == (prefix .. "rejoin"))) or (string.sub(text, 1, 8) == (prefix .. "refresh")) then
					player.Character:BreakJoints()
					wait(.125)
					refresh(player)
				elseif (string.sub(text, 1, 3) == (prefix .. "tp")) or (string.sub(text, 1, 9) == (prefix .. "teleport")) then
					local teleportto
					local tpname
					local parg
					local place
					local minlev
					if string.sub(text, 1, 9) == (prefix .. "teleport") then
						parg = string.sub(text, 11)
						local s = string.gsub(parg,"%s+","")
						place = string.lower(s)
					elseif string.sub(text, 1, 3) == (prefix .. "tp") then
						parg = string.sub(text, 5)
						local s = string.gsub(parg,"%s+","")
						place = string.lower(s)
					end

					if place == "standardlow" or place == "566399244" then
						teleportto = 566399244
						tpname = "Lowbie Standard"
						minlev = 0
					elseif place == "standard40" or place == "standard" or place == "2569625809" then
						teleportto = 2569625809
						tpname = "Standard"
						minlev = 0
					elseif place == "light" or place == "570158081" then
						teleportto = 570158081
						tpname = "Light"
						minlev = 40
					elseif place == "fire" or place == "537600204" then
						teleportto = 537600204
						tpname = "Fire"
						minlev = 80
					elseif place == "water" or place == "520568240" then
						teleportto = 520568240
						tpname = "Water"
						minlev = 120
					elseif place == "grass" or place == "554955560" then
						teleportto = 554955560
						tpname = "Grass"
						minlev = 200
					elseif place == "heaven" or place == "602048550" then
						teleportto = 602048550
						tpname = "Heaven"
					elseif place == "minilovania" or place == "sans" or place == "575456646" then
						teleportto = 575456646
						tpname = "Minilovania"
						minlev = 0
					elseif place == "survival" or place == "1243615612" then
						teleportto = 1243615612
						tpname = "Survival"
						minlev = 0
					else
						commandBoxOutput.Text = "The place was incorrectly specified!"
					end

					if teleportto and not (teleportto == game.PlaceId) then -- If teleport to was provided and not the current place...
						if not (teleportto == 602048550) then -- If you're not connecting to Heaven...

							local pd -- PlayerData connection
							local plev -- Variable for player's current level
							local HasHeaven = game:GetService("MarketplaceService"):UserOwnsGamePassAsync(ID, 2162448)
							-- ^^ Returns a bool value depending on if you own Heaven
							pd = RSR:WaitForChild("PlayerData").OnClientEvent:Connect(function(p,t)
								if p.Name ~= player.Name then return end
								plev = tonumber(t.Data.Level)
								pd:Disconnect()
							end) -- Grabs the player's level and saves it to plev
							repeat wait() until plev ~= nil -- To avoid the remainder of the code running
							-- before the connection can close, wait until plev is no longer nil

						    if tonumber(plev) == nil then -- If, somehow, plev is not a number,
								commandBoxOutput.Text = "Something went wrong!" -- ...change output
								warn("Something went wrong when getting current level!") -- ...warn player
								print("Got your current level as " .. tostring(plev)) -- ...return what plev is
							elseif plev >= minlev then -- Otherwise, if plev is greater than the minlev of a certain map...
								commandBoxOutput.Text = "Teleporting to " .. tpname .. "!" -- ...change output
								game:GetService("TeleportService"):Teleport(teleportto) -- ...teleport player
							else -- If all else fails...
								commandBoxOutput.Text = "You're not high enough of a level for this area!" -- ...change output
							end
						else -- Otherwise...
							if HasHeaven then -- ...if you have the Heaven gamepass...
								commandBoxOutput.Text = "Teleporting to " .. tpname .. "!" -- ...change output
								game:GetService("TeleportService"):Teleport(teleportto) -- ...teleport player
							else -- Otherwise...
								commandBoxOutput.Text = "You need the Heaven Gamepass to go here!" -- ...change output
							end
						end
					elseif teleportto == game.PlaceId then -- Otherwise...
						commandBoxOutput.Text = "You're already in " .. tpname .. "!"
					end
				elseif string.sub(text, 1, 8) == (prefix .. "declutter") then
					player.PlayerGui.Main.Frame1.Size = UDim2.new(0.375, 0, 0.375, 0)
					player.PlayerGui.Main.Frame1.ImageTransparency = 1
					player.PlayerGui.Main.Character.ImageTransparency = 1
					player.PlayerGui.Main.Book.ImageTransparency = 1
					player.PlayerGui.Main.Shop.ImageTransparency = 1
					player.PlayerGui.Main.SkillsBar.Size = UDim2.new(0.375, 0, 0.375, 0)
					player.PlayerGui.Main.SkillsBar.ImageTransparency = 1
				elseif string.sub(text, 1, 5) == (prefix .. "rain") then
					local currentCAM = workspace.CurrentCamera
					local rainSound = Instance.new("Sound")
					rainSound.Looped = true
					rainSound.SoundId = "rbxassetid://283164593"
					rainSound.Volume = 1
					rainSound.Parent = workspace
					rainSound:Play()

					local rainPart = Instance.new("Part")
					rainPart.Size = Vector3.new(300, 300, 300)
					rainPart.Transparency = 1
					rainPart.Anchored = true
					rainPart.CanCollide = false

					local rainEffect = game:GetService("ReplicatedStorage"):WaitForChild("Effects"):WaitForChild("Rain")
					rainEffect.Rate = rainPart.Size.magnitude
					rainEffect.Parent = rainPart

					local ignore = workspace:WaitForChild(".Ignore")
					rainPart.Parent = ignore:WaitForChild(".ServerEffects")

					local fov = 2 * math.tan(math.rad(currentCAM.FieldOfView) / 2)
					local newRay = Ray.new
					local height = Vector3.new(0, 50, 0)
					local depth = CFrame.new(0, fov * 50, -60)

					game:GetService("RunService"):BindToRenderStep("Rain", Enum.RenderPriority.Camera.Value, function()
						local rc = workspace:FindPartOnRayWithIgnoreList(newRay(currentCAM.CFrame.p, height), {ignore})

						if (rc) then
							rainEffect.Enabled = false
							rainSound.Volume = 0.5
							return
						end

						local viewport = currentCAM.ViewportSize
		
						rainPart.Size = Vector3.new(fov * viewport.x / viewport.y * 50, 0.2, 100)
						rainPart.CFrame = currentCAM.CFrame * depth
		
						rainEffect.Rate = rainPart.Size.magnitude
						rainEffect.Enabled = true
		
						rainSound.Volume = 1
					end)
				elseif string.sub(text, 1, 4) == (prefix .. "fix") then
					if player.PlayerGui:WaitForChild("Menu"):FindFirstChild("BlackScreen") then
						player.PlayerGui:WaitForChild("Menu"):FindFirstChild("BlackScreen").Visible = false
						commandBoxOutput.Text = "Fixing the Menu GUI!"
					end
				elseif string.sub(text, 1, 13) == (prefix .. "buttonheight") then
					buttonHeight = tonumber(string.sub(text, 15))
					UIGridLayout.CellSize = UDim2.new(0.45, 0, 0, buttonHeight)
					mainframe.CanvasSize = UDim2.new(0, 0, 0, math.ceil(#buttons / 2) * (buttonHeight + buttonGap) - buttonGap)

					commandBoxOutput.Text = "Button height was set to " .. tonumber(string.sub(text, 15)) .. "!"
				elseif string.sub(text, 1, 10) == (prefix .. "buttongap") then
					buttonGap = tonumber(string.sub(text, 12))
					UIGridLayout.CellPadding = UDim2.new(0, 7, 0, buttonGap)
					mainframe.CanvasSize = UDim2.new(0, 0, 0, math.ceil(#buttons / 2) * (buttonHeight + buttonGap) - buttonGap)

					commandBoxOutput.Text = "Button gap was set to " .. tonumber(string.sub(text, 12)) .. "!"
				elseif ((string.sub(text, 1, 3) == (prefix .. "re")) and (string.sub(text, 1, 7) == (prefix .. "rejoin"))) or (string.sub(text,1,3) == (prefix .. "rj")) then
					commandBoxOutput.Text = "Rejoining..."
					game:GetService("TeleportService"):Teleport(game.PlaceId, player)
				elseif string.sub(text, 1, 9) == (prefix .. "aura/off") then
					repeat wait() until getHRP(player.Character)

					if getHRP(player.Character):FindFirstChild("AuraGP") then
						getHRP(player.Character):FindFirstChild("AuraGP"):Destroy()
						commandBoxOutput.Text = "Aura has been removed."
					else
						commandBoxOutput.Text = "Aura does not exist!"
					end
				elseif string.sub(text, 1, 14) == (prefix .. "targetsetting") then
					targetSetting = string.sub(text, 16)

					repeat
						if targetSetting == "select" then
							commandBoxOutput.Text = "Successfully switched the target setting to select!"
						elseif targetSetting == "closest" then
							commandBoxOutput.Text = "Successfully switched the target setting to closest!"
							wait(2)
							while targetSetting == "closest" do
								local nearestPlayers = {}

								for i, v in pairs(game.Players:GetPlayers()) do
									if getHRP(v.Character) and getHRP(player.Character) and v ~= player then
										if SmartAttack then
											if not v.Character:FindFirstChild("ForceField") then
												local distance = (getHRP(v.Character).Position - getHRP(player.Character).Position).Magnitude

												table.insert(nearestPlayers, {v.Name, distance})
											end
										else
											local distance = (getHRP(v.Character).Position - getHRP(player.Character).Position).Magnitude

											table.insert(nearestPlayers, {v.Name, distance})
										end
									end
								end

								table.sort(nearestPlayers, 
									function(a, b)
										return a[2] < b[2]
									end
								)

								target = nearestPlayers[1][1] or player.Name

								if target ~= player.Name then
									commandBoxOutput.Text = "Current Target | " .. target
								else
									commandBoxOutput.Text = "Current Target | (None)"
								end

								wait()
							end
						elseif targetSetting == "farthest" then
							commandBoxOutput.Text = "Successfully switched the target setting to farthest!"
							wait(2)
							while targetSetting == "farthest" do
								local nearestPlayers = {}

								for i, v in pairs(game.Players:GetPlayers()) do
									if getHRP(v.Character) and getHRP(player.Character) and v ~= player then
										if SmartAttack then
											if not v.Character:FindFirstChild("ForceField") then
												local distance = (getHRP(v.Character).Position - getHRP(player.Character).Position).Magnitude

												table.insert(nearestPlayers, {v.Name, distance})
											end
										else
											local distance = (getHRP(v.Character).Position - getHRP(player.Character).Position).Magnitude

											table.insert(nearestPlayers, {v.Name, distance})
										end
									end
								end

								table.sort(nearestPlayers, 
									function(a, b)
										return a[2] > b[2]
									end
								)

								target = nearestPlayers[1][1] or player.Name

								if target ~= player.Name then
									commandBoxOutput.Text = "Current Target | " .. target
								else
									commandBoxOutput.Text = "Current Target | (None)"
								end

								wait()
							end
						elseif targetSetting == "lowhp" then
							commandBoxOutput.Text = "Successfully switched the target setting to lowhp!"
							wait(2)
							while targetSetting == "lowhp" do
								local nearestPlayers = {}

								for i, v in pairs(game.Players:GetPlayers()) do
									if getHUM(v.Character) and getHUM(player.Character) and v ~= player then
										if SmartAttack then
											if not v.Character:FindFirstChild("ForceField") then
												local health = getHUM(v.Character).Health

												table.insert(nearestPlayers, {v.Name, health})
											end
										else
											local health = getHUM(v.Character).Health

											table.insert(nearestPlayers, {v.Name, health})
										end
									end
								end

								table.sort(nearestPlayers, 
									function(a, b)
										return a[2] < b[2]
									end
								)

								target = nearestPlayers[1][1] or player.Name

								if target ~= player.Name then
									commandBoxOutput.Text = "Current Target | " .. target
								else
									commandBoxOutput.Text = "Current Target | (None)"
								end

								wait()
							end
						elseif targetSetting == "highhp" then
							commandBoxOutput.Text = "Successfully switched the target setting to highhp!"
							wait(2)
							while targetSetting == "highhp" do
								local nearestPlayers = {}

								for i, v in pairs(game.Players:GetPlayers()) do
									if getHUM(v.Character) and getHUM(player.Character) and v ~= player then
										if SmartAttack then
											if not v.Character:FindFirstChild("ForceField") then
												local health = getHUM(v.Character).Health

												table.insert(nearestPlayers, {v.Name, health})
											end
										else
											local health = getHUM(v.Character).Health

											table.insert(nearestPlayers, {v.Name, health})
										end
									end
								end

								table.sort(nearestPlayers, 
									function(a, b)
										return a[2] > b[2]
									end
								)

								target = nearestPlayers[1][1] or player.Name

								if target ~= player.Name then
									commandBoxOutput.Text = "Current Target | " .. target
								else
									commandBoxOutput.Text = "Current Target | (None)"
								end

								wait()
							end
						--[[elseif targetSetting == "click" then
							commandBoxOutput.Text = "Set target setting to click!"
							wait(2)							
							if not (target == player.Name) then
								commandBoxOutput.Text = "Current Target | " .. target
							else
								commandBoxOutput.Text = "Current Target | (None)"
							end

							local mcon
							local pmod
							mcon = mouse.Button1Up:Connect(function()
								mouse.TargetFilter = game:GetService("Workspace")["Map"]
								if mouse.Target ~= nil then
									pmod = mouse.Target:FindFirstAncestorOfClass("Model")
								else
									pmod = {
										["Name"] = "NA"
									}
								end
								print(pmod.Name)
								if pmod.Name ~= "NA" then
									for i,v in pairs(players:GetChildren()) do
										if v.Name == pmod.Name then
											target = v.Name
										end
									end
								end
								mcon:Disconnect()
							end)]]
						else
							targetSetting = "select"
							commandBoxOutput.Text = "Invalid target setting! Setting has been set to select. See console for options."
							print("Valid target setting options; select, closest, farthest, lowhp, highhp, click.")
						end
					until targetSetting == "select"

					target = player.Name
				elseif string.sub(text, 1, 5) == (prefix .. "loop") then
					if string.sub(text, 7, 7) == ("t") or string.sub(text, 7, 8) == ("on") then
						if looping == true then
							commandBoxOutput.Text = "Looping attacks is already on!"
						else
							looping = true
							commandBoxOutput.Text = "Started looping attacks!"
						end
					elseif string.sub(text, 7, 7) == ("f") or string.sub(text, 7, 9) == ("off") then
						if looping == false then
							commandBoxOutput.Text = "Looping attacks is already off!"
						else
							looping = false
							commandBoxOutput.Text = "Stopped looping attacks!"
						end
					else
						looping = not looping
						local OnOrOff = "On"
						if looping == false then
							OnOrOff = "Off"
						end
						commandBoxOutput.Text = "Toggled looping attacks (" .. OnOrOff .. ")!"
					end

					spawn(function()
						while looping do
							exploit()
							wait()
						end
						return
					end)
				elseif string.sub(text, 1, 9) == (prefix .. "grcharge") then
					GRCharge = tonumber(string.sub(text, 11))
					wait()
					if GRCharge == nil then
						commandBoxOutput.Text = "Invalid Arguments! Did you enter an integer?"
					else
						commandBoxOutput.Text = "Successfully set the charge to " .. GRCharge .. "!"
					end
				elseif string.sub(text, 1, 6) == (prefix .. "speed") then
					SetSpeed = tonumber(string.sub(text, 8))
					wait()
					if SetSpeed == nil then
						commandBoxOutput.Text = "Invalid Arguments! Did you enter an integer?"
					else
						commandBoxOutput.Text = "Successfully set the speed to " .. SetSpeed .. "!"
					end
				elseif string.sub(text, 1, 12) == (prefix .. "smartattack") then
					if string.sub(text, 14, 14) == ("t") or string.sub(text, 14, 15) == ("on") then
						if SmartAttack == true then
							commandBoxOutput.Text = "Forcefield detection is already on!"
						else
							SmartAttack = true
							commandBoxOutput.Text = "Now detecting forcefields!"
						end
					elseif string.sub(text, 14, 14) == ("f") or string.sub(text, 14, 16) == ("off") then
						if SmartAttack == false then
							commandBoxOutput.Text = "Forcefield detection is already off!"
						else
							SmartAttack = false
							commandBoxOutput.Text = "Stopped detecting forcefields!"
						end
					else
						SmartAttack = not SmartAttack
						local OnOrOff = "On"
						if SmartAttack == false then
							OnOrOff = "Off"
						end
						commandBoxOutput.Text = "Toggled forcefield detection (" .. OnOrOff .. ")!"
					end
				elseif string.sub(text, 1, 10) == (prefix .. "gamecolor") then
					if not game.Lighting:FindFirstChild("EBGGuiColorCorrection") then
						Instance.new("ColorCorrectionEffect", game.Lighting).Name = "EBGGuiColorCorrection"
						wait()
					end

					if string.sub(text, 12, 17) == "normal" then
						game.Lighting.EBGGuiColorCorrection.Contrast = 0
						game.Lighting.EBGGuiColorCorrection.Saturation = 0
						commandBoxOutput.Text = "Reverting..."
					elseif string.sub(text, 12, 20) == "grayscale" then
						game.Lighting.EBGGuiColorCorrection.Saturation = -1
						commandBoxOutput.Text = "Grayscaling..."
					elseif string.sub(text, 12, 20) == "inverthue" then
						game.Lighting.EBGGuiColorCorrection.Saturation = -2
						commandBoxOutput.Text = "Inverting hue..."
					elseif string.sub(text, 12, 20) == "invertall" then
						game.Lighting.EBGGuiColorCorrection.Contrast = -2
						commandBoxOutput.Text = "Inverting all..."
					else
						commandBoxOutput.Text = "Invalid color mode (or none specified)!"
					end
				elseif string.sub(text, 1, 10) == (prefix .. "blackcast") then
					if string.sub(text, 12, 12) == ("t") or string.sub(text, 12, 13) == ("on") then
						if blackcastEnabled == true then
							commandBoxOutput.Text = "Black casting is already on!"
						else
							blackcastEnabled = true
							commandBoxOutput.Text = "Black casting enabled!"
						end
					elseif string.sub(text, 12, 12) == ("f") or string.sub(text, 12, 14) == ("off") then
						if blackcastEnabled == false then
							commandBoxOutput.Text = "Black casting is already off!"
						else
							blackcastEnabled = false
							commandBoxOutput.Text = "Black casting disabled!"
						end
					else
						blackcastEnabled = not blackcastEnabled
						local OnOrOff = "On"
						if blackcastEnabled == false then
							OnOrOff = "Off"
						end
						commandBoxOutput.Text = "Toggled black casting (" .. OnOrOff .. ")!"
					end
				elseif string.sub(text, 1, 5) == (prefix .. "stun") then
					if string.sub(text, 7, 7) == ("t") or string.sub(text, 7, 8) == ("on") then
						if stunEnabled == true then
							commandBoxOutput.Text = "Stun is already on!"
						else
							stunEnabled = true
							commandBoxOutput.Text = "Stun enabled!"
						end
					elseif string.sub(text, 7, 7) == ("f") or string.sub(text, 7, 9) == ("off") then
						if stunEnabled == false then
							commandBoxOutput.Text = "Stun is already off!"
						else
							stunEnabled = false
							commandBoxOutput.Text = "Stun disabled!"
						end
					else
						stunEnabled = not stunEnabled
						local OnOrOff = "On"
						if stunEnabled == false then
							OnOrOff = "Off"
							for i, connection in pairs(stunConnection) do
								connection:Disable()
							end
						else
							for i, connection in pairs(stunConnection) do
								connection:Enable()
							end
						end
						commandBoxOutput.Text = "Toggled stun (" .. OnOrOff .. ")!"
					end
				elseif string.sub(text, 1, 6) == (prefix .. "drugs") then
					if string.sub(text, 8, 8) == ("t") or string.sub(text, 8, 9) == ("on") then
						if drugsEnabled == true then
							commandBoxOutput.Text = "Drug mode is already on!"
						else
							drugsEnabled = true
							commandBoxOutput.Text = "Drug mode enabled!"
						end
					elseif string.sub(text, 8, 8) == ("f") or string.sub(text, 8, 10) == ("off") then
						if drugsEnabled == false then
							commandBoxOutput.Text = "Drug mode is already off!"
						else
							drugsEnabled = false
							commandBoxOutput.Text = "Drug mode disabled!"
						end
					else
						drugsEnabled = not drugsEnabled
						local OnOrOff = "On"
						if drugsEnabled == false then
							OnOrOff = "Off"
						end
						commandBoxOutput.Text = "Toggled drug mode (" .. OnOrOff .. ")!"
					end
				elseif string.sub(text, 1, 11) == (prefix .. "magiccolor") then
					local stringargs = string.sub(text, 13)
					local args = splitArgs(stringargs)

					if (args[1] == "t") or (args[1] == "on") then
						if (color1 ~= nil) and (color2 ~= nil) and (color3 ~= nil) then
							if colorsEnabled == false then
								colorsEnabled = true
								commandBoxOutput.Text = "Custom magic color enabled!"
							else
								commandBoxOutput.Text = "Custom magic color is already on!"
							end
						else
							commandBoxOutput.Text = "You must have colors set with this command before turning it back on!"
						end
					elseif (args[1] == "f") or (args[1] == "off") then
						if colorsEnabled == true then
							colorsEnabled = false
							commandBoxOutput.Text = "Custom magic color disabled!"
						else
							commandBoxOutput.Text = "Custom magic color is already off!"
						end
					else
						args[1] = tonumber(args[1])
						args[2] = tonumber(args[2])
						args[3] = tonumber(args[3])

						if not args[3] then
							commandBoxOutput.Text = "Invalid Arguments! Did you specify R, G, and B values?"
						else
							if (args[1] ~= nil) and (args[2] ~= nil) and (args[3] ~= nil) then
								local executable = true

								for i = 1, 3, 1 do
									if (args[i] < 0) or (args[i] > 255) then
										executable = false
										break
									end
								end

								if executable == true then
									color1 = args[1]
									color2 = args[2]
									color3 = args[3]

									colorsEnabled = true
									commandBoxOutput.Text = "Custom magic color was set to " .. color1 .. ", " .. color2 .. ", and " .. color3 .. "!"
								else
									commandBoxOutput.Text = "Invalid Arguments! The numbers must be between 0 and 255!"
								end
							else
								commandBoxOutput.Text = "Invalid Arguments! Please use numbers to specify R, G, and B values."
							end
						end
					end
				elseif string.sub(text, 1, 7) == (prefix .. "colors") then
					game.Workspace.DescendantAdded:Connect(function(d)
						spawn(function() 
							pcall(function()
								while true do
									if d.Parent ~= nil then
										if drugsEnabled then
											d.Color = Color3.fromRGB(math.random(0, 255), math.random(0, 255), math.random(0, 255))
											wait((math.random(1, 5))/10)
										elseif colorsEnabled then
											if not table.find(colorExclude, d.Name) then 
												d.Color = Color3.fromRGB(color1, color2, color3)
												wait()
											else break end
										else
											break
										end
									else
										break
									end
								end
							end)
						end)

						spawn(function()
							pcall(function()
								if (blackcastEnabled == true) and (d.Parent ~= nil) then
									for i, v in pairs(d:GetChildren()) do
										if v:IsA("Decal") then
											v.Color3 = Color3.fromRGB(0, 0, 0)
										end
									end
								end
							end)
						end)

						spawn(function()
							pcall(function()
								if d:IsA("ParticleEmitter") then			
									while true do
										if d.Parent ~= nil then
											if drugsEnabled then
												d.Color = ColorSequence.new{
													ColorSequenceKeypoint.new(0, Color3.new(math.random(0, 255)/255, math.random(0, 255)/255, math.random(0, 255)/255)),
													ColorSequenceKeypoint.new(1, Color3.new(math.random(0, 255)/255, math.random(0, 255)/255, math.random(0, 255)/255))
												}
												wait((math.random(1, 5))/10)
											elseif colorsEnabled then
												d.Color = ColorSequence.new{
													ColorSequenceKeypoint.new(0, Color3.new(color1/255, color2/255, color3/255)),
													ColorSequenceKeypoint.new(1, Color3.new(color1/255, color2/255, color3/255))
												}
												wait()
											else
												break
											end
										else
											break
										end
									end
								end
							end)
						end)
					end)
				elseif string.sub(text, 1, 5) == (prefix .. "heal") then
					local stringargs = string.sub(text, 7)
					local args = splitArgs(stringargs)

					if args[1] then				
						if (#(findPlayer(args[1])) == 1) then
							local healingPlayer = findPlayer(args[1])[1]
							local chr = game.Players[healingPlayer].Character

							if chr then
								commandBoxOutput.Text = "Healing " .. findPlayer(args[1])[1] .. "..."
								RSR.DoClientMagic:FireServer("Crystal", "Gleaming Harmony")
								RSR.DoMagic:InvokeServer("Crystal", "Gleaming Harmony", chr.HumanoidRootPart.Position)
								RSR.DoClientMagic:FireServer("Phoenix", "Blue Arson")
								RSR.DoMagic:InvokeServer("Phoenix", "Blue Arson", chr.HumanoidRootPart.Position)
								if chr == player.Character then
									RSR.DoClientMagic:FireServer("Angel","Angelic Aura")
									RSR.DoMagic:InvokeServer("Angel","Angelic Aura")
								end
							end
						end
					end
				elseif string.sub(text, 1, 7) == (prefix .. "echoes") then					
					if string.find(text,"phase") and not string.find(text,"auto") then
						local phase = string.sub(text, 15)
						if tonumber(phase) == nil then
							if (phase == "pow") then
								EchoesPhase = 1
								commandBoxOutput.Text = "Echoes phase changed to POW!"
							elseif (phase == "brn") then
								EchoesPhase = 2
								commandBoxOutput.Text = "Echoes phase changed to BRN!"
							elseif (phase == "stn") then
								EchoesPhase = 3
								commandBoxOutput.Text = "Echoes phase changed to STN!"
							else
								commandBoxOutput.Text = "Invalid argument! Specify: POW; BRN; STN, or number 1-3."
								warn("Got invalid argument at runtime! Expected POW, BRN, STN, or number 1-3, got "..phase)
							end
						elseif tonumber(phase) ~= nil then
							if math.floor(tonumber(phase)) == 1 then
								EchoesPhase = 1
								commandBoxOutput.Text = "Echoes phase changed to POW!"
							elseif math.floor(tonumber(phase)) == 2 then
								EchoesPhase = 2
								commandBoxOutput.Text = "Echoes phase changed to BRN!"
							elseif math.floor(tonumber(phase)) == 3 then
								EchoesPhase = 3
								commandBoxOutput.Text = "Echoes phase changed to POW!"
							end
						end
					elseif string.find(text,"auto") and not string.find(text,"phase") then
						local bool = string.sub(text,14)
						if (bool == "t") or (bool == "on") then
							if EchoesAuto then
								commandBoxOutput.Text = "Echoes auto-target is already on!"
							else
								EchoesAuto = true
								commandBoxOutput.Text = "Turned on Echoes auto-target!"
							end
						elseif (bool == "f") or (bool == "off") then
							if EchoesAuto then
								EchoesAuto = false
								commandBoxOutput.Text = "Turned off Echoes auto-target!"
							else
								commandBoxOutput.Text = "Echoes auto-target is already off!"
							end
						elseif bool == "" then
							local Auto
							EchoesAuto = not EchoesAuto
							if EchoesAuto then
								Auto = "on"
							else
								Auto = "off"
							end
							commandBoxOutput.Text = "Toggled Echoes auto-target to "..Auto.."!"
						else
							commandBoxOutput.Text = "Invalid argument! Specify t/f, on/off."
							warn("Got invalid argument at runtime! Expected t/f or on/off, got "..bool)
						end
					else
						commandBoxOutput.Text = "Invalid argument! Specify phase or auto."
						warn("Got invalid argument at runtime! Expected phase or auto, got "..string.sub(text,9))
					end
				elseif string.sub(text, 1, 10) == (prefix .. "changelog") then
					commandBoxOutput.Text = "Copied the changelog to your clipboard!"
					setclipboard("https://github.com/EarthToAccess/EBGUI#changelog")
				elseif string.sub(text, 1, 8) == (prefix .. "origin") then
					xpcall(function()
						local origin = Instance.new("Part")
						origin.Anchored = true
						origin.Parent = game.Workspace[".Ignore"][".ServerEffects"]
						origin.Name = "Origin"
						origin.Material = Enum.Material.Neon
						origin.BrickColor = BrickColor.new("Really red")
						origin.Size = Vector3.new(0.5, 0.5, 0.5)
						origin.Position = Vector3.new(0, 0, 0)
						warn("Made a block at the origin!")
						commandBoxOutput.Text = "Success! Check console for more info"
					end, function(e)
						print("Encountered an error! xpcall says:", e)
						warn('traceback:', debug.traceback())
					end)
				elseif string.sub(text, 1, 6) == (prefix .. "help") then
					setclipboard("https://github.com/EarthToAccess/EBGui/blob/main/Docs.md")
					commandBoxOutput.Text = "Documentation copied to clipboard!"
				elseif string.sub(text, 1, 6) == (prefix .. "info") then
					loadstring(game:HttpGet('https://raw.githubusercontent.com/EarthToAccess/EBGui/main/bin/info.lua'))()
					if string.sub(text, 7) == "status" then
						print("The current status of EBGui is " .. status)
						commandBoxOutput.Text = "EBGui Status: " .. status
					elseif string.sub(text, 7) == "repo" or string.sub(text, 7) == "github" then
						print("The GitHub repository link is " .. repo)
						commandBoxOutput.Text = "Check the console for more info!"
					end
				elseif string.sub(text, 1, 8) == (prefix .. "update") then
					loadstring(game:HttpGet('https://raw.githubusercontent.com/EarthToAccess/EBGui/main/bin/info.lua'))()
					if verNum == current then
						commandBoxOutput.Text = "No update required!"
					elseif verNum == last then
						commandBoxOutput.Text = "Version outdated! Current: " .. current
					else
						commandBoxOutput.Text = "bro ur on a dev build or sm"
					end
				elseif string.sub(text,1,5) == (prefix.."desp") then
					local arg = string.sub(text,7)
					local function reloadESP()
						if ESPInfo.Standard.Enabled then
							for i, v in pairs(players:GetPlayers()) do
								pcall(UnloadCharacter, v)
								pcall(UnloadPlayer, v)
								pcall(LoadPlayer, v)
							end
						end
						if ESPInfo.Gold.Enabled then
							for i, v in pairs(players:GetPlayers()) do
								pcall(GUnloadCharacter, v)
								pcall(GUnloadPlayer, v)
								pcall(GLoadPlayer, v)
							end
						end
					end
					local function isnumber(n)
						return (type(n) == "number") and (math.floor(n) == n)
					end
					if isnumber(tonumber(arg)) and (tonumber(arg) >= 100 and tonumber(arg) <= 100000) then
						ESPInfo.MaxDist.Value = tonumber(string.sub(text,7))
						ESPInfo.Standard.NameTag.MaxDistance = tonumber(string.sub(text,7))
						ESPInfo.Gold.NameTag.MaxDistance = tonumber(string.sub(text,7))
						reloadESP()
						commandBoxOutput.Text = "Set ESP Max Distance to " .. arg
					elseif isnumber(tonumber(arg)) and tonumber(arg) <= 10 then
						commandBoxOutput.Text = "Number too low! Try something bigger."
					elseif isnumber(tonumber(arg)) and tonumber(arg) >= 100000 then
						commandBoxOutput.Text = "WOAH THAT'S A BIG NUMBER. Use something smaller!"
					elseif not isnumber(tonumber(arg)) and (arg == "t" or arg == "on") then
						if ESPInfo.MaxDist.Enabled then
							commandBoxOutput.Text = "ESP Max Distance is already on!"
						else
							ESPInfo.MaxDist.Enabled = true
							ESPInfo.Standard.NameTag.MaxDistance = ESPInfo.MaxDist.Value
							ESPInfo.Gold.NameTag.MaxDistance = ESPInfo.MaxDist.Value
							reloadESP()
							commandBoxOutput.Text = "Turned on ESP Max Distance!"
						end
					elseif not isnumber(tonumber(arg)) and (arg == "f" or arg == "off") then
						if ESPInfo.MaxDist.Enabled then
							ESPInfo.MaxDist.Enabled = false
							ESPInfo.Standard.NameTag.MaxDistance = 0
							ESPInfo.Gold.NameTag.MaxDistance = 0
							reloadESP()
							commandBoxOutput.Text = "Turned off ESP Max Distance!"
						else
							commandBoxOutput.Text = "ESP Max Distance is already off!"
						end
					else
						commandBoxOutput.Text = "Invalid argument! Did you specify a number?"
						warn("Got invalid argument at runtime. Got " .. arg .. ", expected boolean or number")
					end										
				elseif string.sub(text,1,8) == (prefix .. "antiafk") then					
					local sc = 0
					local db
					if AntiAfk then
						AntiAfk = false
						sc = 0
						commandBoxOutput.Text = "Turned off anti-afk!"
					else
						AntiAfk = true
						commandBoxOutput.Text = "Turned on anti-afk!"
						wait(1.5)
						if target ~= player.Name then
							commandBoxOutput.Text = "Current Target | " .. target
						else
							commandBoxOutput.Text = "Current Target | (None)"
						end
						repeat
							player.Idled:Once(function()
								game:GetService("VirtualUser"):ClickButton2(Vector2.new(UDim2.new(.5)))
								if not db then
									sc = sc + 1
									print("Stopped idle disconnect "..sc.." times.")
									db = true
								end
							end)
							db = false
							wait()
						until AntiAfk == false
					end
				else
					commandBoxOutput.Text = "Invalid command! Did you type it wrong?"
					warn("Got an invalid command at runtime. Command received was "..text)
				end

				wait(1.5)
				if target ~= player.Name then
					commandBoxOutput.Text = "Current Target | " .. target
				else
					commandBoxOutput.Text = "Current Target | (None)"
				end
			else
				local matches = findPlayer(text)

				if #matches == 1 then
					target = matches[1]
					if matches[1] == player.Name then
						commandBoxOutput.Text = "Current Target | (None)"						
					else
						commandBoxOutput.Text = "Current Target | " .. matches[1]
					end
					wait(1)
				else
					target = player.Name
					warn("Target not found! Do multiple players have that same substring in their names?")
					commandBoxOutput.Text = "Invalid Target! Type their name again."
					wait(1.5)
					if target == player.Name then
						commandBoxOutput.Text = "Current Target | (None)"
					end
				end
			end
		end

		players.PlayerRemoving:connect(function(player)
			if target == player.Name then
				target = game.Players.LocalPlayer.Name
				commandBoxOutput.Text = "Current Target | (Target left!)"
			end
		end)

		commandBox.FocusLost:Connect(function(enterPressed)
			if enterPressed then
				if commandBox.Text ~= "" then
					inputBox()
				end
			end
		end)

		coroutine.resume(coroutine.create(function()
			mainframe.CanvasSize = UDim2.new(0, 0, 0, (math.ceil(#buttons * 37) / 2) - 7)
		end))

		-- Exploits

		local function ff()
			if SmartAttack == true then
				if game.Players[target].Character:FindFirstChild("ForceField") then
					return true
				else
					return false
				end
			else
				return false
			end
		end

		function exploit()
			-- Exploit function. When C is pressed and one of these are "true", it will fire it.
			local targetChr = game.Players[target].Character
			local DCM = RSR.DoClientMagic
			local DM = RSR.DoMagic

			if mvtg.AoEs.Chaos.Value and ff() == false then
				DCM:FireServer("Chaos","Space-Time Rupture")
				local args = {
					[1] = "Chaos",
					[2] = "Space-Time Rupture",
					[3] = {
						["Origin"] = targetChr.HumanoidRootPart.Position + Vector3.new(0,5,0)
					}
				}
				DM:InvokeServer(unpack(args))
			end

			if mvtg.Blasts.Storm.Value then
				DCM:FireServer("Storm","Lightning Bolt")
				local args = {
					[1] = "Storm",
					[2] = "Lightning Bolt",
					[3] = {
						["Origin"] = mouse.Hit.p + Vector3.new(0,15,0)
					}
				}
				DM:InvokeServer(unpack(args))
			end

			if mvtg.Ults.Solar.Value and ff() == false then
				DCM:FireServer("Solar","Unmatched Power of the Sun")
				local args = {
					[1] = "Solar",
					[2] = "Unmatched Power of the Sun",
					[3] = CFrame.new(targetChr.HumanoidRootPart.Position-Vector3.new(0,250,0))
				}
				DM:InvokeServer(unpack(args))
			end

			if mvtg.Teleports.Technology.Value and ff() == false then
				DCM:FireServer("Technology","Light Disc")
				local args = {
					[1] = "Technology",
					[2] = "Light Disc",
					[3] = {
						["Position"] = targetChr.HumanoidRootPart.CFrame
					}
				}
				DM:InvokeServer(unpack(args))
				RSR.RemoteEvent:FireServer("LightDisc2")
				wait(2)
				RSR.RemoteEvent:FireServer("LightDiscDelete")
			end

			if mvtg.Teleports.Explosion.Value then
				DCM:FireServer("Explosion", "Explosive Leap")
				local args = {
					[1] = "Explosion",
					[2] = "Explosive Leap",
					[3] = {
						["LastPos"] = targetChr.HumanoidRootPart.Position
					}
				}
				DM:InvokeServer(unpack(args))
			end

			if mvtg.Bullets.Solar.Value then
				DCM:FireServer("Solar", "Dying Star")
				DM:InvokeServer("Solar", "Dying Star", targetChr.HumanoidRootPart.CFrame)
			end

			if mvtg.Teleports.Earth.Value then
				DCM:FireServer("Earth", "Rock Fist")
				local args = {
					[1] = "Earth",
					[2] = "Rock Fist",
					[3] = {
						["Grounded"] = true
					}
				}
				DM:InvokeServer(unpack(args))
			end

			if mvtg.Bullets.Light.Value and ff() == false then
				DCM:FireServer("Light","Orbs of Enlightenment")
				local args = {
					[1] = "Light",
					[2] = "Orbs of Enlightenment",
					[3] = {
						["Coordinates"] = {
							[1] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[2] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[3] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[4] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[5] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[6] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[7] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[8] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[9] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[10] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[11] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[12] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[13] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[14] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[15] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[16] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[17] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[18] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[19] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0),
							[20] = targetChr.HumanoidRootPart.CFrame - Vector3.new(0,5,0)
						},
						["Origin"] = targetChr.HumanoidRootPart.Position
					}
				}
				DM:InvokeServer(unpack(args))
			end

			if mvtg.Ults.Reaper.Value and ff() == false then
				DCM:FireServer("Reaper", "Reaper's Rage")
				local args = {
					[1] = "Reaper",
					[2] = "Reaper's Rage",
					[3] = targetChr.HumanoidRootPart.CFrame
				}
				DM:InvokeServer(unpack(args))
			end		

			if mvtg.AoEs.Creation.Value and ff() == false then
				DCM:FireServer("Creation", "Continuous Strikes")
				local args = {
					[1] = "Creation",
					[2] = "Continuous Strikes",
					[3] = {
						["CF"] = targetChr.HumanoidRootPart.CFrame,
						["Charge"] = "2"
					}
				}
				DM:InvokeServer(unpack(args))
			end

			if mvtg.Bullets.Technology.Value and ff() == false then
				DCM:FireServer("Technology", "Hyperang")
				DM:InvokeServer("Technology", "Hyperang", targetChr.HumanoidRootPart.CFrame)
			end

			if mvtg.AoEs.Darkness.Value and ff() == false then
				DCM:FireServer("Darkness", "Murky Missiles")
				DM:InvokeServer("Darkness", "Murky Missiles", {lastMousePosition = CFrame.new(targetChr.HumanoidRootPart.Position)})
			end

			if mvtg.AoEs.Storm.Value then
				DCM:FireServer("Storm", "Lightning Dispersion")
				DM:InvokeServer("Storm", "Lightning Dispersion", {Grounded = true})
			end

			if mvtg.Blasts.Solar.Value and ff() == false then
				DCM:FireServer("Solar","Double Ray")			
				local args = {
					[1] = "Solar",
					[2] = "Double Ray",
					[3] = targetChr.HumanoidRootPart.CFrame * CFrame.Angles(math.rad(90), 0, 0)
				}			
				DM:InvokeServer(unpack(args))
			end

			if mvtg.Bullets.Storm.Value and ff() == false then
				local args = {
					[1] = "Storm",
					[2] = "Lightning Barrage"
				}			
				DCM:FireServer(unpack(args))			
				local args = {
					[1] = "Storm",
					[2] = "Lightning Barrage",
					[3] = {
						["Direction"] = targetChr.HumanoidRootPart.CFrame * CFrame.Angles(math.rad(90), 0, 0)
					}
				}			
				DM:InvokeServer(unpack(args))
			end

			if mvtg.Blasts.Technology.Value and ff() == false then
				local args = {
					[1] = "Technology",
					[2] = "Orbital Strike"
				}
				DCM:FireServer(unpack(args))
				local args = {
					[1] = "Technology",
					[2] = "Orbital Strike",
					[3] = CFrame.new(targetChr.HumanoidRootPart.Position + Vector3.new(0,500,0))
				}
				DM:InvokeServer(unpack(args))
			end

			if mvtg.Bullets.Spirit.Value and ff() == false then
				local args = {
					[1] = "Spirit",
					[2] = "Vigor Gyration"
				}
				DCM:FireServer(unpack(args))
				local args = {
					[1] = "Spirit",
					[2] = "Vigor Gyration",
					[3] = {
						[1] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[2] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[3] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[4] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[5] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[6] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[7] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[8] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[9] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[10] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[11] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0))
					}
				}
				DM:InvokeServer(unpack(args))
			end

			if mvtg.Bullets.Space.Value and ff() == false then
				local args = {
					[1] = "Space",
					[2] = "Asteroid Belt"
				}
				DCM:FireServer(unpack(args))
				local args = {
					[1] = "Space",
					[2] = "Asteroid Belt",
					[3] = {
						[1] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[2] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[3] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[4] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[5] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[6] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[7] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[8] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[9] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[10] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0)),
						[11] = CFrame.new(targetChr.HumanoidRootPart.Position - Vector3.new(0,5,0))
					}
				}
				DM:InvokeServer(unpack(args))
			end

			if mvtg.AoEs.Fire.Value and ff() == false then
				DCM:FireServer("Fire", "Blaze Column", Vector3.new(targetChr.HumanoidRootPart.Position))
				DM:InvokeServer("Fire", "Blaze Column", CFrame.new(targetChr.HumanoidRootPart.Position))
			end

			if mvtg.AoEs.Nature.Value and ff() == false then
				DCM:FireServer("Nature", "Vine Trap", Vector3.new(targetChr.HumanoidRootPart.Position))
				DM:InvokeServer("Nature", "Vine Trap", CFrame.new(targetChr.HumanoidRootPart.Position))
			end

			if mvtg.AoEs.Plasma.Value and ff() == false then
				DCM:FireServer("Plasma", "Plasma Implosion", Vector3.new(targetChr.HumanoidRootPart.Position))
				DM:InvokeServer("Plasma", "Plasma Implosion", CFrame.new(targetChr.HumanoidRootPart.Position))
			end

			if SlimeBuddiesEnabled and ff() == false then
				DCM:FireServer("Slime", "Slime Buddies")
				DM:InvokeServer("Slime", "Slime Buddies", targetChr.HumanoidRootPart.CFrame)
			end

			if CrystalArmamentEnabled and ff() == false then
				DCM:FireServer("Crystal", "Crystal Armament")
				DM:InvokeServer("Crystal", "Crystal Armament", {LastPosition = targetChr.HumanoidRootPart.Position + Vector3.new(0, 15, 0)})
			end

			if GravitalGlobeEnabled and ff() == false then
				DCM:FireServer("Gravity", "Gravital Globe")
				DM:InvokeServer("Gravity", "Gravital Globe", {lastPos = targetChr.HumanoidRootPart.Position + Vector3.new(0, 15, 0)})
			end

			if mvtg.AoEs.Gravity.Value and ff() == false then
				DCM:FireServer("Gravity", "Gravitational Field")
				DM:InvokeServer("Gravity", "Gravitational Field", targetChr.HumanoidRootPart.CFrame - Vector3.new(0, 15, 0))
			end

			if mvtg.AoEs.Light.Value and ff() == false then
				DCM:FireServer("Light", "Amaurotic Lambent")
				DM:InvokeServer("Light", "Amaurotic Lambent", {lastPos = targetChr.HumanoidRootPart.Position})
			end

			if mvtg.Ults.Light.Value and ff() == false then
				DCM:FireServer("Light", "Ablaze Judgement")
				DM:InvokeServer("Light", "Ablaze Judgement", {Origin = targetChr.HumanoidRootPart.Position - Vector3.new(0, 25, 0), orbPos = targetChr.HumanoidRootPart.Position - Vector3.new(0, 10, 0)})
			end

			if mvtg.Ults.Void.Value and ff() == false then
				DCM:FireServer("Void", "Void Opening")
				DM:InvokeServer("Void", "Void Opening", {pos = targetChr.HumanoidRootPart.Position - Vector3.new(0, 150, 0)})
			end

			if mvtg.AoEs.Nightmare.Value then
				DCM:FireServer("Nightmare", "Skeleton Grab")
				DM:InvokeServer("Nightmare", "Skeleton Grab", targetChr.HumanoidRootPart.CFrame)
			end

			if mvtg.AoEs.Time.Value then
				DCM:FireServer("Time", "Genesis Ray", player.Character.HumanoidRootPart.Position)
				DM:InvokeServer("Time", "Genesis Ray", {lv = Vector3.new(0, 0, 0), charge = GRCharge})
			end

			if mvtg.Ults.Time.Value and ff() == false then
				DCM:FireServer("Time", "The World", targetChr.HumanoidRootPart.Position)
				DM:InvokeServer("Time", "The World", {rhit = targetChr.HumanoidRootPart, norm = Vector3.new(0, 0, 0), rpos = targetChr.HumanoidRootPart.Position})
			end

			if mvtg.Ults.Aurora.Value and ff() == false then
				DCM:FireServer("Aurora", "Polaris")
				DM:InvokeServer("Aurora", "Polaris", targetChr.HumanoidRootPart.CFrame)
			end

			if mvtg.Blasts.Sound.Value and EchoesPhase ~= nil then
				DCM:FireServer("Sound", "Echoes")
				if EchoesAuto then
					DM:InvokeServer("Sound", "Echoes", {EchoesPhase, targetChr.HumanoidRootPart.Position})
				else
					DM:InvokeServer("Sound", "Echoes", {EchoesPhase, mouse.Hit.p})
				end
			end

			if mvtg.Ults.Explosion.Value and ff() == false then
				DCM:FireServer("Explosion", "Shattering Eruption")
				DM:InvokeServer("Explosion", "Shattering Eruption", targetChr.HumanoidRootPart.CFrame)
			end

			if mvtg.AoEs.Illusion.Value and ff() == false then
				DCM:FireServer("Illusion", "Illusive Atake")
				DM:InvokeServer("Illusion", "Illusive Atake", targetChr.HumanoidRootPart.CFrame)
			end

			if mvtg.Ults.Illusion.Value and ff() == false then
				DCM:FireServer("Illusion", "Ethereal Acumen")
				DM:InvokeServer("Illusion", "Ethereal Acumen", targetChr.HumanoidRootPart.CFrame)
			end

			if mvtg.AoEs.Dragon.Value and ff() == false then
				DCM:FireServer("Dragon", "Formidable Roar")
				DM:InvokeServer("Dragon", "Formidable Roar", {targetChr.HumanoidRootPart.CFrame, 175})
			end

			if mvtg.Ults.Acid.Value and ff() == false then
				player.Character.HumanoidRootPart.Anchored = true
				DCM:FireServer("Acid", "Toxic Basilisk")
				DM:InvokeServer("Acid", "Toxic Basilisk", {Direction = targetChr.HumanoidRootPart.CFrame, Floor = targetChr.HumanoidRootPart.CFrame})
				wait(17.5)
				if FreezeEnabled == false then
					player.Character.HumanoidRootPart.Anchored = false
				end
			end

			if mvtg.Ults.Angel.Value and ff() == false then
				DCM:FireServer("Angel", "Arcane Guardian")
				DM:InvokeServer("Angel", "Arcane Guardian", {Position = targetChr.HumanoidRootPart.Position + Vector3.new(0, 50, 0)})
			end

			if mvtg.AoEs.Slime.Value and ff() == false then
				DCM:FireServer("Slime", "Splitting Slime")
				DM:InvokeServer("Slime", "Splitting Slime", targetChr.HumanoidRootPart.CFrame - Vector3.new(0, 20, 0))
			end

			if mvtg.Ults.Technology.Value and ff() == false then
				DCM:FireServer("Technology", "Virtual Zone")
				DM:InvokeServer("Technology", "Virtual Zone", {targetChr.HumanoidRootPart.Position, Vector3.new(0, 0, 0)})
			end
		end

		--[[local function BeginTracking()
			local c = game:GetService("Workspace").CurrentCamera
			local hb = game:GetService("RunService").Heartbeat
			local m = player:GetMouse()
			local p = c:WorldToScreenPoint(players[target].Character.HumanoidRootPart.Position)
			hb:connect(function(step)
				mousemoveabs(p.X, (p.Y + 25))
			end)
		end]] -- For Aimbot, currently under development

		-- UIS

		local UIS = game:GetService("UserInputService")
		local terminateuis = false
		local connection

		connection = UIS.InputBegan:connect(function(input, gp)
			if not terminateuis then
				if not gp then
					local targetChr = game.Players[target].Character

					if input.KeyCode == Enum.KeyCode.Zero then
						commandBox:CaptureFocus()
						wait()
						if string.sub(commandBox.Text, string.len(commandBox.Text), string.len(commandBox.Text)) == "0" then
							commandBox.Text = string.sub(commandBox.Text, 1, string.len(commandBox.Text) - 1)
						end
					--[[elseif input.KeyCode == Enum.KeyCode.L then
						toggleAimbot()]]
					elseif input.KeyCode == Enum.KeyCode.C then
						exploit()
					elseif input.KeyCode == Enum.KeyCode.U then
						TPToTarget()
					elseif input.KeyCode == Enum.KeyCode.K then
						AntiBlindFunc()
					elseif input.KeyCode == Enum.KeyCode.T then
						beginSpeed()
					elseif input.KeyCode == Enum.KeyCode.X then
						if mvtg.Misc.Invis.Value == true then
							RSR.DoClientMagic:FireServer("Spirit", "Spectral Embodiment")
							RSR.DoMagic:InvokeServer("Spirit", "Spectral Embodiment")
						end
					elseif input.KeyCode == Enum.KeyCode.P then
						if SansTeleportEnabled then
							if game.PlaceId == 566399244 or game.PlaceId == 2569625809 then
								local SansPos = CFrame.new(-1685.91052, 230.035126, -181.798264)
								local SansAngles = CFrame.Angles(0, math.rad(20), 0)

								player.Character.HumanoidRootPart.CFrame = SansPos * SansAngles
								player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Climbing)
								wait()
								player.Character.HumanoidRootPart.Anchored = true
								wait(1)
								if not FreezeEnabled then
									player.Character.HumanoidRootPart.Anchored = false
								end
							end
						end
					elseif input.KeyCode == Enum.KeyCode.Z then
						beginNullifyForces()
					elseif input.KeyCode == Enum.KeyCode.G then
						AntiGravityFunc()
					elseif input.KeyCode == Enum.KeyCode.J then
						if ClickTPEnabled then
							clicktp(mouse.Hit)
						end
					elseif input.KeyCode == Enum.KeyCode.F then
						FreezeFunc()
					elseif input.KeyCode == Enum.KeyCode.Backquote then
						if mvtg.Teleports.Storm.Value then
							longflash()
						end
					elseif input.KeyCode == Enum.KeyCode.V then
						view()
					elseif input.KeyCode == Enum.KeyCode.B then
						toggleESP()
					elseif input.KeyCode == Enum.KeyCode.M then
						toggleESPGold()
					elseif input.KeyCode == Enum.KeyCode.LeftBracket then
						if not closedforever then
							if not buttonsdebounce then
								buttonsdebounce = true
								if buttonsopened == false then
									buttonsopened = true
									buttonsmain:TweenPosition(
										UDim2.new(1, 0, 0.65, 0),
										"Out",
										"Sine",
										.5,
										true
									)
								else
									buttonsopened = false
									buttonsmain:TweenPosition(
										UDim2.new(1.25, 0, 0.65, 0),
										"In",
										"Sine",
										.5,
										true
									)
								end
								wait(1)
								buttonsdebounce = false
							end
						end
					elseif input.KeyCode == Enum.KeyCode.RightBracket then
						commanddebounce = true
						if commandsopened == false then
							commandsopened = true
							commandsmain:TweenPosition(
								UDim2.new(1, 0, 0.45, 0),
								"Out",
								"Sine",
								.5,
								true
							)
						else
							commandsopened = false
							commandsmain:TweenPosition(
								UDim2.new(1.25, 0, 0.45, 0),
								"In",
								"Sine",
								.5,
								true
							)
						end
						wait(1)
						commanddebounce = false
					elseif UIS:IsKeyDown(Enum.KeyCode.Left) and UIS:IsKeyDown(Enum.KeyCode.Right) then
						commandBoxOutput.Text = "Thanks for using EBGui!"
						wait(2)
						if buttonsopened == true then
							terminateuis = true
							termEBGui()
							connection:Disconnect()
						end
					end
				end
			end
		end)

		-- Scripts and Functions END

		-- Entrance Animation

		wait(0.5)

		buttonsmain:TweenPosition(
			UDim2.new(1, 0, 0.65, 0),
			"Out",
			"Sine",
			.5,
			true
		)

		commandsmain:TweenPosition(
			UDim2.new(1, 0, 0.45, 0),
			"Out",
			"Sine",
			.5,
			true
		)

		-- Info

		print([[

		]])
		commandBoxOutput.Text = "Welcome to EBGui!"
		wait(2)
		commandBoxOutput.Text = "Current Target | (None)"
	end, function(e)
		local crash = {
			"I'm so, so, so so SO sorry!",
			"Water cooling? I prefer lava cooling.",
			"Your EBGui ran into a problem and needs to restart.",
			"STOP Code: 0xDEADBEEF",
			"Is this what development is like? I hate it.",
			"The Unstoppable Marching oF tiMe that is slOwly guiding us all tOwards an InevitaBlE DEATH. That spells \"Tum FM. OwO O, I be death.\"",
			"I guess you could call me an \"Ooer\".",
			"Error Message!",
			"Whoops, we're low on memory! Try remembering later.",
			"Whoops, we're low on memeory. Try sending Pepes later.",
			"Okay, who killed the computer hamsters?",
			"Can't keep up! Is the script overloaded, or have you melted your CPU?",
			"Oh, congratulations, " .. player.Name .. ", you broke it!",
			"I swear that was intentional.",
			"I promise it won't happen again.",
			"Okay, gonna be real, NO CLUE what went wrong there.",
			"Oh, no, nevermind, I know exactly what went wrong.",
			"A priest, a minister, and a rabbit walk into a blood bank.",
			"The nurse on duty asks the three for their blood type group to get them set up.",
			"The priest, dignified, says \"I'm AB!\".",
			"The minister, indifferent, replies \"I believe I'm type A.\"",
			"The rabbit, shyly and nervously, looks around the room, before announcing, \"I think I might be a type O.\".",
			"Hey, remember that time you *didn't* break everything? Me neither.",
			"Oops, my bad.",
			"Maybe if you bought Gold this wouldn't have happened.",
			"Quick, to the Discord!",
			"Now would be a fantastic time to go open a ticket...",
			"This is what I get? I do all of this for you, and you kill me?",
			"Who the hell said \"omae wa mou shinderu\" at me?!",
			"You're lucky this is Roblox or I'd have some choice words for you.",
			"Did that really just happen?!",
			"God, I'm so sorry, I promise I'll do better.",
			"This is usually the part where- oh, there's that crash dump.",
			"Unfortunately, it appears I've dropped it.",
			"We're currently experiencing technical difficulties. Please stand by.",
			"Tonight, we are unable to bring you Bingo Night Live.",
			"Yaknow, if this were a BBC television broadcast, this issue might seem normal.",
			"It's just one of those days, isn't it?",
			"Just whack the side a couple times, that should do it.",
			"On the first day of Christmas, my true love gave to me...",
		}

		print('------------------------')
		print(crash[math.random(1,#crash)])
		print('------------------------')
		warn("Something went wrong with EBGui!")
		print(e)
		print("This crash report was generated on " .. os.date('%x %X',os.time()) .. " and will be saved in your executor's Workspace folder.")

		local uf = os.date("%x_%X",os.time())
		local df = string.gsub(uf,"/","-")
		local dtf = string.gsub(df,":","-")
		local exec = identifyexecutor()

		if not isfolder("EBGui") then makefolder("EBGui") end
		writefile("EBGui\\CrashDump-"..dtf..".txt",

		"-----------------------\n" .. crash[math.random(1,#crash)] .. "\n-----------------------\n\n" ..

		[[EBGui stopped executing because it encountered a problem it didn't know how to handle.
		
Please report this crash in the Discord by going to #robots-unite and opening a ticket.]] ..

		"-- Begin Error Report --\n(Generated on " .. uf .. ")\n\n" ..

		"Executor: " .. tostring(exec) ..
		"\nClient ID: " .. tostring(clientid) ..
		"\nPlaceId: " .. tostring(game.PlaceId) ..
		"\nSmartAttack Enabled?: " .. tostring(SmartAttack) ..
		"\nIs Gold?: " .. tostring(isGold) .. 
		"\nIs Master?: " .. tostring(isMaster) ..

		"\n\nError: " .. e ..
		"\nAt: " .. debug.traceback() ..

		"\n\n-- End Error Report --")
	end)
end"