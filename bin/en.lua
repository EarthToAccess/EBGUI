encui = "aWYgbm90KGdhbWU6SXNMb2FkZWQoKSkgdGhlbgoJZ2FtZS5Mb2FkZWQ6V2FpdCgpCmVuZAoKaWYgKGdhbWUuQ29yZUd1aTpGaW5kRmlyc3RDaGlsZCgiZWJndWkiKSkgdGhlbgoJZ2FtZS5Db3JlR3VpLmViZ3VpOkRlc3Ryb3koKQplbmQKCmxvY2FsIGJsb2NrbGlzdCA9IHsKfQoKbG9jYWwgbWFzdGVybGlzdCA9IHsKCTMyNTczMzM0Cn0KCmxvY2FsIGdvbGRsaXN0ID0gewoJImdvbGRfMDkyMDIyX01hdHVyZVBsYXRmb3JtXzk3MTMxMCIKfQoKbG9jYWwgcGxheWVycyA9IGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpCmxvY2FsIHBsYXllciA9IHBsYXllcnMuTG9jYWxQbGF5ZXIKbG9jYWwgSUQgPSBwbGF5ZXIuVXNlcklkCmxvY2FsIGlzQmxvY2tlZCA9IGZhbHNlCmxvY2FsIGlzTWFzdGVyID0gZmFsc2UKbG9jYWwgaXNHb2xkID0gZmFsc2UKCmZvciBpLHYgaW4gcGFpcnMoYmxvY2tsaXN0KSBkbwogICAgaWYgdiA9PSBJRCB0aGVuCiAgICAgICAgaXNCbG9ja2VkID0gdHJ1ZQogICAgICAgIGJyZWFrCiAgICBlbmQKZW5kCgpmb3IgaSx2IGluIHBhaXJzKG1hc3Rlcmxpc3QpIGRvCiAgICBpZiB2ID09IElEIHRoZW4KICAgICAgICBpc01hc3RlciA9IHRydWUKICAgICAgICBicmVhawogICAgZW5kCmVuZAoKaWYgaXNCbG9ja2VkIHRoZW4KICAgIHdhcm4oIj09PT09PT09PT09PT09PT09PT09PT09W1sgQVRURU5USU9OIF1dPT09PT09PT09PT09PT09PT09PT09PT0iKQogICAgd2FybigifCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCIpCiAgICB3YXJuKCJ8ICAgICAgICAgICAgICBUaGlzIGFjY291bnQgaGFzIGJlZW4gYmxvY2tlZC4gICAgICAgICAgICAgICB8IikKICAgIHdhcm4oInwgICAgUGxlYXNlIHZpc2l0IHRoZSBFQkd1aSBEaXNjb3JkIGZvciBtb3JlIGluZm9ybWF0aW9uLiAgIHwiKQogICAgd2FybigifCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCIpCiAgICB3YXJuKCI9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IikKZWxzZWlmIG5vdCBFQkd1aUtleSBhbmQgbm90IGlzQmxvY2tlZCBhbmQgbm90IGlzTWFzdGVyIHRoZW4KICAgIHdhcm4oIj09PT09PT09PT09PT09PT09PT09PT09W1sgQVRURU5USU9OIF1dPT09PT09PT09PT09PT09PT09PT09PT0iKQogICAgd2FybigifCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCIpCiAgICB3YXJuKCJ8ICAgICAgIFlvdSBkb24ndCBoYXZlIHRoZSB1bmxvY2sga2V5IGluIHlvdXIgc2NyaXB0LiAgICAgICB8IikKICAgIHdhcm4oInwgICAgICAgWW91J2xsIG5lZWQgdG8gZmluZCB0aGUgYXBwcm9wcmlhdGUga2V5IGZpcnN0LiAgICAgIHwiKQogICAgd2FybigifCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCIpCiAgICB3YXJuKCI9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IikKZWxzZWlmIEVCR3VpS2V5IH49ICIwOTIwMjJfTWVhc2x5U2NpZW5jZV80ODM2ODgiIGFuZCBub3QgaXNCbG9ja2VkIGFuZCBub3QgaXNNYXN0ZXIgdGhlbgogICAgd2FybigiPT09PT09PT09PT09PT09PT09PT09PT1bWyBBVFRFTlRJT04gXV09PT09PT09PT09PT09PT09PT09PT09PSIpCiAgICB3YXJuKCJ8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IikKICAgIHdhcm4oInwgICAgICAgICAgICAgICBZb3VyIHVubG9jayBrZXkgaXMgaW5jb3JyZWN0LiAgICAgICAgICAgICAgIHwiKQogICAgd2FybigifCAgICAgICBZb3UnbGwgbmVlZCB0byBmaW5kIHRoZSBhcHByb3ByaWF0ZSBrZXkgZmlyc3QuICAgICAgfCIpCiAgICB3YXJuKCJ8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IikKICAgIHdhcm4oIj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0iKQplbHNlCglsb2Fkc3RyaW5nKGdhbWU6SHR0cEdldCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0VhcnRoVG9BY2Nlc3MvRUJHdWkvbWFpbi9iaW4vaW5mby5sdWEnKSkoKQoJbG9jYWwgdmVyTnVtID0gInYyLjgiCglsb2NhbCBkdW1iUXVvdGVzID0gewoJCSJKZWV6LCB3aGVuJ2QgaXQgZ2V0IHNvIGhvdCBpbiBoZXJlPyIsCgkJIklzIGl0IGp1c3QgbWUgb3IgaXMgdGhhdCAqdG9vKiBibHVlPyIsCgkJIkxpa2UgdGFraW5nIGNhbmR5IGZyb20gYSBiYWJ5LiIsCgkJIkRlZXogbnV0cyBhcmUgdG9vIHNxdWFyZSEiLAoJCSJBbHNvIHRyeSBNaW5lY3JhZnQhIiwKCQkiQWxzbyB0cnkgVGVycmFyaWEhIiwKCQkiTWVoLCBJIGxpa2VkIFJpc2sgb2YgUmFpbiAyIGJldHRlci4iLAoJCSJZb3UgbmVlZCBhIGZhaXJseSBoaWdoIElRIHRvIHVuZGVyc3RhbmQgRUJHdWkuIiwKCQkiSmFrZSwgZnJvbSBTdGF0ZSBGYXJtPyEiLAoJCSJXaGF0IHdvdWxkICp5b3UqIGRvIGZvciBhIEtsb25kaWtlIGJhcj8iLAoJCSJOb3cgd2l0aCAxMDAlIG1vcmUgR29sZCEiLAoJCSJNYWRlIGluIEx1YSEiLAoJCSJJRiAlRVJST1JMRVZFTCUgRVFVIDEgR09UTzpFT0YiLAoJCSJicnVoIG5lcmYgc29sYXIgYWxyZWFkeSIsCgkJIkJlY2F1c2UgdGhlIGRldnMgd29uJ3QgZG8gaXQuIiwKCQkiUGV0aXRpb24gWU9VUiBsb2NhbCBkZXZlbG9wZXIgZm9yIG1vcmUgdXBkYXRlcyEiLAoJCSJ3aHkgYXJlIHlvdSBidXlpbmcgY2xvdGhlcyBhdCB0aGUgc291cCBzdG9yZSIsCgkJIkkganVzdCB3YW5uYSBiZSBhIG5vcm1hbCBHVUkgd2l0aCBub3JtYWwga25lZXMuIgoJfQoKICAgIHdhcm4oW1tfX19fX18gX19fX18gX19fX18gICAgICAgXyAKICAgICAgICAgICAgfCAgX19ffCBfX18gXCAgX18gXCAgICAgKF8pCiAgICAgICAgICAgIHwgfF9fIHwgfF8vIC8gfCAgXC9fICAgXyBfIAogICAgICAgICAgICB8ICBfX3x8IF9fXyBcIHwgX198IHwgfCB8IHwKICAgICAgICAgICAgfCB8X19ffCB8Xy8gLyB8X1wgXCB8X3wgfCB8CiAgICAgICAgICAgIFxfX19fL1xfX19fLyBcX19fXy9cX18sX3xffCBdXSAuLiB2ZXJOdW0pCglwcmludCgiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikKCXByaW50KGR1bWJRdW90ZXNbbWF0aC5yYW5kb20oMSwxOCldKQoJcHJpbnQoIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpCgl3YXJuKCJXZWxjb21lIHRvIEVCR3VpLCAiIC4uIHBsYXllci5OYW1lIC4uICIhIikKCXdhcm4oIllvdSdyZSBvbiB0aGUgU3RhYmxlIGJyYW5jaCBvZiBFQkd1aSIpCgl3YXJuKCJRdWVzdGlvbnMgb3IgY29uY2VybnM/IExldCB1cyBrbm93IGluIHRoZSBEaXNjb3JkLCIpCgl3YXJuKCJvciBlbWFpbCBFYXJ0aCBoaW1zZWxmIGF0IGVhcnRodG9hY2Nlc3NAZ21haWwuY29tISIpCgl3YWl0KDAuNSkKCQoJaWYgaXNNYXN0ZXIgdGhlbgoJCXdhcm4oIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpICAgCgkJd2FybigiTG9hZGVkIGluIHVzaW5nIHRoZSBNYXN0ZXIgTGlzdCEgT3ZlcnJpZGluZyBhY2Nlc3MgZ2l2ZW4uIikKCQl3YXJuKCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQoJZW5kCgoJZm9yIGksdiBpbiBwYWlycyhnb2xkbGlzdCkgZG8KCQlpZiBub3QgRUJHdWlHb2xkIHRoZW4gZWxzZWlmIEVCR3VpR29sZCA9PSB2IHRoZW4KCQkJaXNHb2xkID0gdHJ1ZQoJCQlwcmludChbWwkJCQlfX19fICAgICAgICAgICAgIF9fXyAgICAgIF9fXyAKCQkJICAgICAgICAgICA2TU1NTWIvICAgICAgICAgICBgTU0gICAgICBgTU0gCgkJCSAgICAgICAgICA4UCAgICBZTSAgICAgICAgICAgIE1NICAgICAgIE1NIAoJCQkgICAgICAgICA2TSAgICAgIFkgICBfX19fXyAgICBNTSAgIF9fX19NTSAKCQkJICAgICAgICAgTU0gICAgICAgICA2TU1NTU1iICAgTU0gIDZNTU1NTU0gCgkJCSAgICAgICAgIE1NICAgICAgICA2TScgICBgTWIgIE1NIDZNJyAgYE1NIAoJCQkgICAgICAgICBNTSAgICAgX19fTU0gICAgIE1NICBNTSBNTSAgICBNTSAKCQkJICAgICAgICAgTU0gICAgIGBNJ01NICAgICBNTSAgTU0gTU0gICAgTU0gCgkJCSAgICAgICAgIFlNICAgICAgTSBNTSAgICAgTU0gIE1NIE1NICAgIE1NIAoJCQkgICAgICAgICAgOGIgICAgZDkgWU0uICAgLE05ICBNTSBZTS4gICxNTSAKCQkJICAgICAgICAgICBZTU1NTTkgICBZTU1NTU05ICBfTU1fIFlNTU1NTU1fXV0pCgkJCXdhcm4oIlRoYW5rIHlvdSBmb3IgYmVpbmcgYSBHT0xERU4gbWVtYmVyISIpCgkJCXdhcm4oJ0Vuam95IHRoZSB2YXJpb3VzICJvdmVycG93ZXJlZCIgc2NyaXB0cyB3ZSBoYXZlIGluIHN0b3JlIScpCgkJCWJyZWFrCgkJZWxzZSBlbmQKCWVuZAoKCS0tIEdVSSBJbnN0YW5jZXMsIEV2ZW50cyBhbmQgRnVuY3Rpb25zCgoJbG9jYWwgZWJndWkgPSBJbnN0YW5jZS5uZXcoIlNjcmVlbkd1aSIpCgllYmd1aS5OYW1lID0gImViZ3VpIgoJZWJndWkuUGFyZW50ID0gZ2FtZTpXYWl0Rm9yQ2hpbGQoIkNvcmVHdWkiKQoKCWdhbWUuQ29yZUd1aS5DaGlsZFJlbW92ZWQ6Y29ubmVjdChmdW5jdGlvbihjaGlsZCkKCQlpZiBjaGlsZC5OYW1lID09ICJlYmd1aSIgdGhlbgoJCQljbG9zZWRmb3JldmVyID0gdHJ1ZQoJCQlidXR0b25zb3BlbmVkID0gZmFsc2UKCQkJY29tbWFuZHNvcGVuZWQgPSBmYWxzZQoJCQlidXR0b25zZGVib3VuY2UgPSB0cnVlCgkJCWNvbW1hbmRkZWJvdW5jZSA9IHRydWUKCQkJdGVybWluYXRldWlzID0gdHJ1ZQoJCQlVSVMgPSBuaWwKCQkJYnJlYWthYmxlID0gdHJ1ZQoJCQlCbGF6ZUNvbHVtbkVuYWJsZWQgPSBuaWwKCQkJVmluZVRyYXBFbmFibGVkID0gbmlsCgkJCVBsYXNtYUltcGxvc2lvbkVuYWJsZWQgPSBuaWwKCQkJU2xpbWVCdWRkaWVzRW5hYmxlZCA9IG5pbAoJCQlDcnlzdGFsQXJtYW1lbnRFbmFibGVkID0gbmlsCgkJCUFtYXVyb3RpY0xhbWJlbnRFbmFibGVkID0gbmlsCgkJCUFibGF6ZUp1ZGdlbWVudEhhY2tFbmFibGVkID0gbmlsCgkJCVZvaWRPcGVuaW5nSGFja0VuYWJsZWQgPSBuaWwKCQkJU2tlbGV0b25HcmFiRW5hYmxlZCA9IG5pbAoJCQlUaGVXb3JsZEVuYWJsZWQgPSBuaWwKCQkJUG9sYXJpc0VuYWJsZWQgPSBuaWwKCQkJTGFnU2VydmVyRW5hYmxlZCA9IG5pbAoJCQlTaGF0dGVyaW5nRXJ1cHRpb25FbmFibGVkID0gbmlsCgkJCUlsbHVzaXZlQXRha2VFbmFibGVkID0gbmlsCgkJCUV0aGVyZWFsQWN1bWVuRW5hYmxlZCA9IG5pbAoJCQlGb3JtaWRhYmxlUm9hckVuYWJsZWQgPSBuaWwKCQkJU2V3ZXJCdXJzdEVuYWJsZWQgPSBuaWwKCQkJVG94aWNCYXNpbGlza0VuYWJsZWQgPSBuaWwKCQkJU3BsaXR0aW5nU2xpbWVFbmFibGVkID0gbmlsCgkJCVZpcnR1YWxab25lRW5hYmxlZCA9IG5pbAoJCQlBbnRpQmxpbmRFbmFibGVkID0gbmlsCgkJCUFudGlMYWdFbmFibGVkID0gbmlsCgkJCVNwZWVkaGFja0VuYWJsZWQgPSBuaWwKCQkJSG9sb2JlYW1FbmFibGVkID0gbmlsCgkJCVNldFNwZWVkID0gbmlsCgkJCUlnbm9yZVBoeXNpY3NFbmFibGVkID0gbmlsCgkJCUFudGlHcmF2aXR5RW5hYmxlZCA9IG5pbAoJCQlJbmVydGlhR3Jhdml0eUVuYWJsZWQgPSBuaWwKCQkJQ2xpY2tUUEVuYWJsZWQgPSBuaWwKCQkJRnJlZXplRW5hYmxlZCA9IG5pbAoJCQlUaHJ1c3RFbmFibGVkID0gbmlsCgkJCVRocnVzdFBvd2VyID0gbmlsCgkJCXZpZXdpbmcgPSBuaWwKCQkJVFBUYXJnZXRFbmFibGVkID0gbmlsCgkJCUxvb3BUUFRhcmdldEVuYWJsZWQgPSBuaWwKCQkJRVNQRW5hYmxlZCA9IG5pbAoJCQlUUFNoYXJkc0VuYWJsZWQgPSBuaWwKCQkJVFBEaWFtb25kc0VuYWJsZWQgPSBuaWwKCQkJRlBTRHJvcHBpbmcgPSBuaWwKCQkJc2Fuc0tpbGxlZCA9ICJ3aXAiCgkJCUFzdGVyb2lkQmVsdEVuYWJsZWQgPSBuaWwKCQkJVmlnb3JIYWNrRW5hYmxlZCA9IG5pbAoJCQlPcmJpdGFsSGFja0VuYWJsZWQgPSBuaWwKCQkJU3Rvcm1CdWxsZXRzRW5hYmxlZCA9IG5pbAoJCQlEb3VibGVSYXlFbmFibGVkID0gbmlsCgkJCURpc3BlcnNpb25FbmFibGVkID0gbmlsCgkJCURhcmtBb2VFbmFibGVkID0gbmlsCgkJCUh5cGVyYW5nRW5hYmxlZCA9IG5pbAoJCQlDcmVhdGlvbkhvbGRFbmFibGVkID0gbmlsCgkJCVJlYXBlclVsdEVuYWJsZWQgPSBuaWwKCQllbmQKCWVuZCkKCglsb2NhbCBtb3VzZSA9IHBsYXllcjpHZXRNb3VzZSgpCgoJbG9jYWwgYm9yZGVycyA9IHt9CgoJbG9jYWwgYnV0dG9uc21haW4gPSBJbnN0YW5jZS5uZXcoIkZyYW1lIikKCWJ1dHRvbnNtYWluLk5hbWUgPSAiYnV0dG9uc21haW4iCglidXR0b25zbWFpbi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygxLjI1LCAwLCAwLjY1LCAwKQoJYnV0dG9uc21haW4uU2l6ZSA9IFVEaW0yLm5ldygwLjQsIDAsIDAuMjI1LCAwKQoJdGFibGUuaW5zZXJ0KGJvcmRlcnMsIGJ1dHRvbnNtYWluKQoKCWJ1dHRvbnNkZWJvdW5jZSA9IGZhbHNlCglidXR0b25zb3BlbmVkID0gdHJ1ZQoKCgktLWlmIChpbml0aWF0aW9uTW9kZSA9PSAiTW9kZXJuIikgdGhlbgoJbG9jYWwgY29tbWFuZHNtYWluID0gSW5zdGFuY2UubmV3KCJGcmFtZSIpCgljb21tYW5kc21haW4uTmFtZSA9ICJjb21tYW5kc21haW4iCgljb21tYW5kc21haW4uUG9zaXRpb24gPSBVRGltMi5uZXcoMS4yNSwgMCwgMC40NSwgMCkKCWNvbW1hbmRzbWFpbi5TaXplID0gVURpbTIubmV3KDAuMywgMCwgMC4xNzUsIDApCgl0YWJsZS5pbnNlcnQoYm9yZGVycywgY29tbWFuZHNtYWluKQoJLS1lbmQKCgljb21tYW5kZGVib3VuY2UgPSBmYWxzZQoJY29tbWFuZHNvcGVuZWQgPSB0cnVlCgoJY2xvc2VkZm9yZXZlciA9IGZhbHNlCgoJbG9jYWwgZnJhbWVzID0ge30KCgktLSBGcmFtZSBmb3IgYXJvdW5kIHRoZSBidXR0b25zLgoJbG9jYWwgYnV0dG9uc2ZyYW1lID0gSW5zdGFuY2UubmV3KCJGcmFtZSIpCglidXR0b25zZnJhbWUuTmFtZSA9ICJidXR0b25zZnJhbWUiCglidXR0b25zZnJhbWUuQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDE4LCA1NCwgMTc5KQoJYnV0dG9uc2ZyYW1lLkJvcmRlckNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDEyOCwgMTI4LCAxMjgpCglidXR0b25zZnJhbWUuQm9yZGVyU2l6ZVBpeGVsID0gMgoJYnV0dG9uc2ZyYW1lLkFuY2hvclBvaW50ID0gVmVjdG9yMi5uZXcoMC41LCAwLjUpCglidXR0b25zZnJhbWUuUG9zaXRpb24gPSBVRGltMi5uZXcoMC41LCAwLCAwLjUsIDApCglidXR0b25zZnJhbWUuU2l6ZSA9IFVEaW0yLm5ldygwLjksIDAsIDAuODUsIDApCgl0YWJsZS5pbnNlcnQoZnJhbWVzLCBidXR0b25zZnJhbWUpCglidXR0b25zZnJhbWUuUGFyZW50ID0gYnV0dG9uc21haW4KCgktLSBGcmFtZSBmb3IgYXJvdW5kIHRoZSBjb21tYW5kIGJveC4KCWxvY2FsIGNvbW1hbmRzZnJhbWUgPSBJbnN0YW5jZS5uZXcoIkZyYW1lIikKCWNvbW1hbmRzZnJhbWUuTmFtZSA9ICJjb21tYW5kc2ZyYW1lIgoJY29tbWFuZHNmcmFtZS5BbmNob3JQb2ludCA9IFZlY3RvcjIubmV3KDAuNSwgMC41KQoJY29tbWFuZHNmcmFtZS5CYWNrZ3JvdW5kQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTgsIDU0LCAxNzkpCgljb21tYW5kc2ZyYW1lLkJvcmRlckNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDEyOCwgMTI4LCAxMjgpCgljb21tYW5kc2ZyYW1lLkJvcmRlclNpemVQaXhlbCA9IDIKCWNvbW1hbmRzZnJhbWUuUG9zaXRpb24gPSBVRGltMi5uZXcoMC41LCAwLCAwLjUsIDApCgljb21tYW5kc2ZyYW1lLlNpemUgPSBVRGltMi5uZXcoMC45LCAwLCAwLjg1LCAwKQoJdGFibGUuaW5zZXJ0KGZyYW1lcywgY29tbWFuZHNmcmFtZSkKCWNvbW1hbmRzZnJhbWUuUGFyZW50ID0gY29tbWFuZHNtYWluCgoJLS0gQ29tbWFuZCBib3guIFRoaXMgaXMgd2hlcmUgdXNlcnMgdHlwZSBpbiBjb21tYW5kcyBhbmQgdGFyZ2V0cy4KCWxvY2FsIGNvbW1hbmRCb3ggPSBJbnN0YW5jZS5uZXcoIlRleHRCb3giKQoJY29tbWFuZEJveC5OYW1lID0gImNvbW1hbmRCb3giCgljb21tYW5kQm94LkFuY2hvclBvaW50ID0gVmVjdG9yMi5uZXcoMC41LCAwLjUpCgljb21tYW5kQm94LkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNSwgNDAsIDQwKQoJY29tbWFuZEJveC5Cb3JkZXJDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigxMjgsIDEyOCwgMTI4KQoJY29tbWFuZEJveC5Cb3JkZXJTaXplUGl4ZWwgPSAyCgljb21tYW5kQm94LlBvc2l0aW9uID0gVURpbTIubmV3KDAuNSwgMCwgMC4zLCAwKQoJY29tbWFuZEJveC5TaXplID0gVURpbTIubmV3KDAuODUsIDAsIDAuMjAsIDApCgljb21tYW5kQm94LkZvbnQgPSBFbnVtLkZvbnQuU2FycGFuY2gKCWNvbW1hbmRCb3guVGV4dCA9ICIiCgljb21tYW5kQm94LlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTEsIDI1MSwgMjU1KQoJY29tbWFuZEJveC5UZXh0U2NhbGVkID0gdHJ1ZQoJY29tbWFuZEJveC5UZXh0U2l6ZSA9IDE0LjAwMAoJY29tbWFuZEJveC5UZXh0V3JhcHBlZCA9IHRydWUKCWNvbW1hbmRCb3guQ2xlYXJUZXh0T25Gb2N1cyA9IGZhbHNlCgljb21tYW5kQm94LlBhcmVudCA9IGNvbW1hbmRzZnJhbWUKCglsb2NhbCBsYWJlbHMgPSB7fQoKCS0tIFRoZSBvdXRwdXQgZm9yIHRoZSBjb21tYW5kIGJveCwgQUtBIHRoZSB3aGl0ZSB0ZXh0IGJlbG93IHRoYXQgbGlzdHMgeW91ciB0YXJnZXQuCglsb2NhbCBjb21tYW5kQm94T3V0cHV0ID0gSW5zdGFuY2UubmV3KCJUZXh0TGFiZWwiKQoJY29tbWFuZEJveE91dHB1dC5OYW1lID0gImNvbW1hbmRCb3hPdXRwdXQiCgljb21tYW5kQm94T3V0cHV0LkFuY2hvclBvaW50ID0gVmVjdG9yMi5uZXcoMC41LCAwLjUpCgljb21tYW5kQm94T3V0cHV0LkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQoJY29tbWFuZEJveE91dHB1dC5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5ID0gMS4wMDAKCWNvbW1hbmRCb3hPdXRwdXQuQm9yZGVyQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTI4LCAxMjgsIDEyOCkKCWNvbW1hbmRCb3hPdXRwdXQuQm9yZGVyU2l6ZVBpeGVsID0gMAoJY29tbWFuZEJveE91dHB1dC5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLjUsIDAsIDAuNiwgMCkKCWNvbW1hbmRCb3hPdXRwdXQuU2l6ZSA9IFVEaW0yLm5ldygwLjksIDAsIDAuMiwgMCkKCWNvbW1hbmRCb3hPdXRwdXQuRm9udCA9IEVudW0uRm9udC5TYXJwYW5jaAoJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1cnJlbnQgVGFyZ2V0IHwgKE5vbmUpIgoJY29tbWFuZEJveE91dHB1dC5UZXh0Q29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjUxLCAyNTEsIDI1NSkKCWNvbW1hbmRCb3hPdXRwdXQuVGV4dFNjYWxlZCA9IHRydWUKCWNvbW1hbmRCb3hPdXRwdXQuVGV4dFNpemUgPSAxNC4wMDAKCWNvbW1hbmRCb3hPdXRwdXQuVGV4dFdyYXBwZWQgPSB0cnVlCgl0YWJsZS5pbnNlcnQobGFiZWxzLCBjb21tYW5kQm94T3V0cHV0KQoJY29tbWFuZEJveE91dHB1dC5QYXJlbnQgPSBjb21tYW5kc2ZyYW1lCgoJLS0gVGhlIGluZm9ybWF0aW9uIGFib3ZlIHRoZSBidXR0b25zLCBlLmcuIHVzZXIncyBuYW1lLCBjaGFubmVsCglsb2NhbCBEZXRhaWxzID0gSW5zdGFuY2UubmV3KCJUZXh0TGFiZWwiKQoJRGV0YWlscy5OYW1lID0gIkRldGFpbHMiCglEZXRhaWxzLkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQoJRGV0YWlscy5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5ID0gMS4wMDAKCURldGFpbHMuQm9yZGVyQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTI4LCAxMjgsIDEyOCkKCURldGFpbHMuUG9zaXRpb24gPSBVRGltMi5uZXcoMCwgMCwgMC4wMTQxNDE0MTQzLCAwKQoJRGV0YWlscy5TaXplID0gVURpbTIubmV3KDEsIDAsIDAuMTUsIDApCglEZXRhaWxzLkZvbnQgPSBFbnVtLkZvbnQuU2FycGFuY2gKCWlmIG5vdCBpc0dvbGQgdGhlbgoJCURldGFpbHMuVGV4dCA9IHBsYXllci5OYW1lIC4uICIgfCBFQkd1aSB8IFN0YWJsZSIKCWVsc2UKCQlEZXRhaWxzLlRleHQgPSBwbGF5ZXIuTmFtZSAuLiAiIHwgRUJHdWkgR29sZCB8IFN0YWJsZSIKCWVuZAoJRGV0YWlscy5UZXh0Q29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjUxLCAyNTEsIDI1NSkKCURldGFpbHMuVGV4dFNjYWxlZCA9IHRydWUKCURldGFpbHMuWkluZGV4ID0gNQoJRGV0YWlscy5UZXh0U2l6ZSA9IDE0LjAwMAoJRGV0YWlscy5UZXh0V3JhcHBlZCA9IHRydWUKCXRhYmxlLmluc2VydChsYWJlbHMsIERldGFpbHMpCglEZXRhaWxzLlBhcmVudCA9IGJ1dHRvbnNmcmFtZQoKCS0tICJDbG9zZSB0aGlzIEdVSSIgZm9yIHRoZSBjb21tYW5kIGJveC4KCWxvY2FsIERldGFpbHMyID0gSW5zdGFuY2UubmV3KCJUZXh0TGFiZWwiKQoJRGV0YWlsczIuTmFtZSA9ICJEZXRhaWxzMiIKCURldGFpbHMyLkFuY2hvclBvaW50ID0gVmVjdG9yMi5uZXcoMC41LCAwLjUpCglEZXRhaWxzMi5CYWNrZ3JvdW5kQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjU1LCAyNTUsIDI1NSkKCURldGFpbHMyLkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSAxLjAwMAoJRGV0YWlsczIuQm9yZGVyQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTI4LCAxMjgsIDEyOCkKCURldGFpbHMyLlBvc2l0aW9uID0gVURpbTIubmV3KDAuNSwgMCwgMC45LCAwKQoJRGV0YWlsczIuU2l6ZSA9IFVEaW0yLm5ldygxLCAwLCAwLjE1LCAwKQoJRGV0YWlsczIuRm9udCA9IEVudW0uRm9udC5TYXJwYW5jaAoJRGV0YWlsczIuVGV4dCA9ICJQcmVzcyBdIHRvIG9wZW4gYW5kIGNsb3NlIHRoaXMgR1VJLiIKCURldGFpbHMyLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTEsIDI1MSwgMjU1KQoJRGV0YWlsczIuVGV4dFNjYWxlZCA9IHRydWUKCURldGFpbHMyLlRleHRTaXplID0gMTQuMDAwCglEZXRhaWxzMi5UZXh0V3JhcHBlZCA9IHRydWUKCXRhYmxlLmluc2VydChsYWJlbHMsIERldGFpbHMyKQoJRGV0YWlsczIuUGFyZW50ID0gY29tbWFuZHNmcmFtZQoKCS0tICJDbG9zZSB0aGlzIEdVSSIgZm9yIHRoZSBidXR0b25zLgoJbG9jYWwgRGV0YWlsczMgPSBJbnN0YW5jZS5uZXcoIlRleHRMYWJlbCIpCglEZXRhaWxzMy5OYW1lID0gIkRldGFpbHMzIgoJRGV0YWlsczMuQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCglEZXRhaWxzMy5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5ID0gMS4wMDAKCURldGFpbHMzLkJvcmRlckNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDEyOCwgMTI4LCAxMjgpCglEZXRhaWxzMy5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCAwLCAwLjg3NSwgMCkKCURldGFpbHMzLlNpemUgPSBVRGltMi5uZXcoMSwgMCwgMC4xNSwgMCkKCURldGFpbHMzLkZvbnQgPSBFbnVtLkZvbnQuU2FycGFuY2gKCURldGFpbHMzLlRleHQgPSAiUHJlc3MgWyB0byBvcGVuIGFuZCBjbG9zZSB0aGlzIEdVSS4iCglEZXRhaWxzMy5UZXh0Q29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjUxLCAyNTEsIDI1NSkKCURldGFpbHMzLlRleHRTY2FsZWQgPSB0cnVlCglEZXRhaWxzMy5UZXh0U2l6ZSA9IDE0LjAwMAoJRGV0YWlsczMuVGV4dFdyYXBwZWQgPSB0cnVlCgl0YWJsZS5pbnNlcnQobGFiZWxzLCBEZXRhaWxzMykKCURldGFpbHMzLlBhcmVudCA9IGJ1dHRvbnNmcmFtZQoKCS0tIFNjcmlwdCB0ZXJtaW5hdGlvbiBpbnN0cnVjdGlvbnMuCglsb2NhbCBEZXRhaWxzNCA9IEluc3RhbmNlLm5ldygiVGV4dExhYmVsIikKCURldGFpbHM0Lk5hbWUgPSAiRGV0YWlsczQiCglEZXRhaWxzNC5CYWNrZ3JvdW5kQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjU1LCAyNTUsIDI1NSkKCURldGFpbHM0LkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSAxLjAwMAoJRGV0YWlsczQuQm9yZGVyQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTI4LCAxMjgsIDEyOCkKCURldGFpbHM0LlBvc2l0aW9uID0gVURpbTIubmV3KDAsIDAsIDEuMSwgMCkKCURldGFpbHM0LlNpemUgPSBVRGltMi5uZXcoMSwgMCwgMC4xNzUsIDApCglEZXRhaWxzNC5Gb250ID0gRW51bS5Gb250LlNhcnBhbmNoCglEZXRhaWxzNC5UZXh0ID0gIkhvbGQgdGhlIExlZnQgYW5kIFJpZ2h0IGFycm93IGtleXMsIHRoZW4gcHJlc3MgYW55IGtleSB0byBxdWl0IEVCR3VpLiIKCURldGFpbHM0LlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTEsIDI1MSwgMjU1KQoJRGV0YWlsczQuVGV4dFNjYWxlZCA9IHRydWUKCURldGFpbHM0LlRleHRTaXplID0gMTQuMDAwCglEZXRhaWxzNC5UZXh0V3JhcHBlZCA9IHRydWUKCURldGFpbHM0LlBhcmVudCA9IGJ1dHRvbnNmcmFtZQoKCS0tIFRoZSB2ZXJzaW9uIG51bWJlciBhYm92ZSB0aGUgY29tbWFuZCBib3guCglsb2NhbCBWZXJzaW9uID0gSW5zdGFuY2UubmV3KCJUZXh0TGFiZWwiKQoJVmVyc2lvbi5OYW1lID0gIlZlcnNpb24iCglWZXJzaW9uLkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQoJVmVyc2lvbi5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5ID0gMS4wMDAKCVZlcnNpb24uQm9yZGVyQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTI4LCAxMjgsIDEyOCkKCVZlcnNpb24uUG9zaXRpb24gPSBVRGltMi5uZXcoMCwgMCwgMC4wNSwgMCkKCVZlcnNpb24uU2l6ZSA9IFVEaW0yLm5ldygxLCAwLCAwLjEsIDApCglWZXJzaW9uLkZvbnQgPSBFbnVtLkZvbnQuU2FycGFuY2gKCVZlcnNpb24uVGV4dCA9ICJWZXJzaW9uICIgLi4gdmVyTnVtCglWZXJzaW9uLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTEsIDI1MSwgMjU1KQoJVmVyc2lvbi5UZXh0U2NhbGVkID0gdHJ1ZQoJVmVyc2lvbi5UZXh0U2l6ZSA9IDE0LjAwMAoJVmVyc2lvbi5UZXh0V3JhcHBlZCA9IHRydWUKCXRhYmxlLmluc2VydChsYWJlbHMsIFZlcnNpb24pCglWZXJzaW9uLlBhcmVudCA9IGNvbW1hbmRzZnJhbWUKCgktLSBUaGUgYmFja2dyb3VuZCBmb3IgdGhlIFVJLgoJbG9jYWwgbWFpbmZyYW1lID0gSW5zdGFuY2UubmV3KCJTY3JvbGxpbmdGcmFtZSIpCgltYWluZnJhbWUuTmFtZSA9ICJtYWluZnJhbWUiCgltYWluZnJhbWUuQWN0aXZlID0gdHJ1ZQoJbWFpbmZyYW1lLkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQig0OSwgODMsIDg5KQoJbWFpbmZyYW1lLkJvcmRlckNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDEyOCwgMTI4LCAxMjgpCgltYWluZnJhbWUuQm9yZGVyU2l6ZVBpeGVsID0gMgoJbWFpbmZyYW1lLlBvc2l0aW9uID0gVURpbTIubmV3KDAuNSwgMCwgMC41LCAwKQoJbWFpbmZyYW1lLkFuY2hvclBvaW50ID0gVmVjdG9yMi5uZXcoMC41LCAwLjUpCgltYWluZnJhbWUuU2l6ZSA9IFVEaW0yLm5ldygwLjg2Nzc2ODU4NiwgMCwgMC42LCAwKQoJbWFpbmZyYW1lLlNjcm9sbEJhclRoaWNrbmVzcyA9IDYKCW1haW5mcmFtZS5QYXJlbnQgPSBidXR0b25zbWFpbgoKCS0tIEdyaWQgbGF5b3V0IGZvciB0aGUgYnV0dG9ucy4KCWxvY2FsIFVJR3JpZExheW91dCA9IEluc3RhbmNlLm5ldygiVUlHcmlkTGF5b3V0IikKCVVJR3JpZExheW91dC5GaWxsRGlyZWN0aW9uID0gRW51bS5GaWxsRGlyZWN0aW9uLkhvcml6b250YWwKCVVJR3JpZExheW91dC5Ib3Jpem9udGFsQWxpZ25tZW50ID0gRW51bS5Ib3Jpem9udGFsQWxpZ25tZW50LkNlbnRlcgoJVUlHcmlkTGF5b3V0LkNlbGxQYWRkaW5nID0gVURpbTIubmV3KDAsIDcsIDAsIDcpCglVSUdyaWRMYXlvdXQuQ2VsbFNpemUgPSBVRGltMi5uZXcoMC40NSwgMCwgMCwgMzApCglVSUdyaWRMYXlvdXQuU29ydE9yZGVyID0gRW51bS5Tb3J0T3JkZXIuTGF5b3V0T3JkZXIKCVVJR3JpZExheW91dC5QYXJlbnQgPSBtYWluZnJhbWUKCglsb2NhbCBidXR0b25zID0ge30KCgktLS0tLS0gQnV0dG9ucyBmb3IgaGFja3MuCgoJLS0tLSBBb0VzCgktLSBJbnN0YW50IEJsYXplIENvbHVtbgoKCWxvY2FsIEJsYXplQ29sdW1uID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCUJsYXplQ29sdW1uLk5hbWUgPSAiQmxhemVDb2x1bW4iCglCbGF6ZUNvbHVtbi5UZXh0ID0gIkluc3RhbnQgQmxhemUgQ29sdW1uIChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIEJsYXplQ29sdW1uKQoKCUJsYXplQ29sdW1uRW5hYmxlZCA9IGZhbHNlCgoJQmxhemVDb2x1bW4uTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBCbGF6ZUNvbHVtbkVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlCbGF6ZUNvbHVtbkVuYWJsZWQgPSB0cnVlCgkJCUJsYXplQ29sdW1uLlRleHQgPSAiSW5zdGFudCBCbGF6ZSBDb2x1bW4gKE9uKSIKCQllbHNlCgkJCUJsYXplQ29sdW1uRW5hYmxlZCA9IGZhbHNlCgkJCUJsYXplQ29sdW1uLlRleHQgPSAiSW5zdGFudCBCbGF6ZSBDb2x1bW4gKE9mZikiCgkJZW5kCgllbmQpCgoJLS0gQW1wbGlmaWVkIEdlbmVzaXMgUmF5CgoJbG9jYWwgR2VuZXNpc1JheSA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglHZW5lc2lzUmF5Lk5hbWUgPSAiR2VuZXNpc1JheSIKCUdlbmVzaXNSYXkuVGV4dCA9ICJBbXBsaWZpZWQgR2VuZXNpcyBSYXkgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgR2VuZXNpc1JheSkKCglsb2NhbCBHZW5lc2lzUmF5RW5hYmxlZCA9IGZhbHNlCglsb2NhbCBHUkNoYXJnZSA9IDEgLS0gMTAwMDAwMAoKCUdlbmVzaXNSYXkuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBHZW5lc2lzUmF5RW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCUdlbmVzaXNSYXlFbmFibGVkID0gdHJ1ZQoJCQlHZW5lc2lzUmF5LlRleHQgPSAiQW1wbGlmaWVkIEdlbmVzaXMgUmF5IChPbikiCgkJZWxzZQoJCQlHZW5lc2lzUmF5RW5hYmxlZCA9IGZhbHNlCgkJCUdlbmVzaXNSYXkuVGV4dCA9ICJBbXBsaWZpZWQgR2VuZXNpcyBSYXkgKE9mZikiCgkJZW5kCgllbmQpCgoJLS0gQ3JlYXRpb24gSG9sZCBIYWNrCgoJbG9jYWwgQ2hhaW5Ib2xkID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCUNoYWluSG9sZC5OYW1lID0gIkNoYWluSG9sZCIKCUNoYWluSG9sZC5UZXh0ID0gIihHKSBJbnN0YW50IENoYWluIEhhY2sgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgQ2hhaW5Ib2xkKQoKCWxvY2FsIENyZWF0aW9uSG9sZEVuYWJsZWQgPSBmYWxzZQoKCUNoYWluSG9sZC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIGlzR29sZCBvciBpc01hc3RlciB0aGVuCgkJCWlmIG5vdCBDcmVhdGlvbkhvbGRFbmFibGVkIHRoZW4KCQkJCUNyZWF0aW9uSG9sZEVuYWJsZWQgPSB0cnVlCgkJCQlDaGFpbkhvbGQuVGV4dCA9ICIoRykgSW5zdGFudCBDaGFpbiBIYWNrIChPbikiCgkJCWVsc2UKCQkJCUNyZWF0aW9uSG9sZEVuYWJsZWQgPSBmYWxzZQoJCQkJQ2hhaW5Ib2xkLlRleHQgPSAiKEcpIEluc3RhbnQgQ2hhaW4gSGFjayAoT2ZmKSIKCQkJZW5kCgkJZWxzZQoJCQlDaGFpbkhvbGQuVGV4dCA9ICJNZW1iZXIgTm90IEdvbGQiCgkJCXdhaXQoMSkKCQkJQ2hhaW5Ib2xkLlRleHQgPSAiKEcpIEluc3RhbnQgQ2hhaW4gSGFjayAoT2ZmKSIKCQllbmQKCWVuZCkKCgktLSBJbnN0YW50IFZpbmUgVHJhcAoKCWxvY2FsIFZpbmVUcmFwID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCVZpbmVUcmFwLk5hbWUgPSAiVmluZVRyYXAiCglWaW5lVHJhcC5UZXh0ID0gIkluc3RhbnQgVmluZSBUcmFwIChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFZpbmVUcmFwKQoKCVZpbmVUcmFwRW5hYmxlZCA9IGZhbHNlCgoJVmluZVRyYXAuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBWaW5lVHJhcEVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlWaW5lVHJhcEVuYWJsZWQgPSB0cnVlCgkJCVZpbmVUcmFwLlRleHQgPSAiSW5zdGFudCBWaW5lIFRyYXAgKE9uKSIKCQllbHNlCgkJCVZpbmVUcmFwRW5hYmxlZCA9IGZhbHNlCgkJCVZpbmVUcmFwLlRleHQgPSAiSW5zdGFudCBWaW5lIFRyYXAgKE9mZikiCgkJZW5kCgllbmQpCgoJLS0gSWxsdXNpdmUgQXRha2UgSGFjawoKCWxvY2FsIElsbHVzaXZlQXRha2UgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJSWxsdXNpdmVBdGFrZS5OYW1lID0gIklsbHVzaXZlQXRha2UiCglJbGx1c2l2ZUF0YWtlLlRleHQgPSAiSWxsdXNpdmUgQXRha2UgSGFjayAoT2ZmKSIKCXRhYmxlLmluc2VydChidXR0b25zLCBJbGx1c2l2ZUF0YWtlKQoKCUlsbHVzaXZlQXRha2VFbmFibGVkID0gZmFsc2UKCglJbGx1c2l2ZUF0YWtlLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgSWxsdXNpdmVBdGFrZUVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlJbGx1c2l2ZUF0YWtlRW5hYmxlZCA9IHRydWUKCQkJSWxsdXNpdmVBdGFrZS5UZXh0ID0gIklsbHVzaXZlIEF0YWtlIEhhY2sgKE9uKSIKCQllbHNlCgkJCUlsbHVzaXZlQXRha2VFbmFibGVkID0gZmFsc2UKCQkJSWxsdXNpdmVBdGFrZS5UZXh0ID0gIklsbHVzaXZlIEF0YWtlIEhhY2sgKE9mZikiCgkJZW5kCgllbmQpCgoJLS0gSW5zdGFudCBNdXJreSBNaXNzaWxlcwoKCWxvY2FsIERhcmtBb2UgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJRGFya0FvZS5OYW1lID0gIkRhcmtBb2UiCglEYXJrQW9lLlRleHQgPSAiSW5zdGFudCBNdXJreSBNaXNzaWxlcyAoT2ZmKSIKCXRhYmxlLmluc2VydChidXR0b25zLCBEYXJrQW9lKQoKCWxvY2FsIERhcmtBb2VFbmFibGVkID0gZmFsc2UKCglEYXJrQW9lLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgbm90IERhcmtBb2VFbmFibGVkIHRoZW4KCQkJRGFya0FvZUVuYWJsZWQgPSB0cnVlCgkJCURhcmtBb2UuVGV4dCA9ICJJbnN0YW50IE11cmt5IE1pc3NpbGVzIChPbikiCgkJZWxzZQoJCQlEYXJrQW9lRW5hYmxlZCA9IGZhbHNlCgkJCURhcmtBb2UuVGV4dCA9ICJJbnN0YW50IE11cmt5IE1pc3NpbGVzIChPZmYpIgoJCWVuZAoJZW5kKQoJCgktLSBJbnN0YW50IEFpciBEaXNwZXJzaW9uCgoJbG9jYWwgU3Rvcm1Bb2UgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJU3Rvcm1Bb2UuTmFtZSA9ICJTdG9ybUFvZSIKCVN0b3JtQW9lLlRleHQgPSAiKEcpIEluc3RhbnQgU3Rvcm0gQW9FIChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFN0b3JtQW9lKQoKCWxvY2FsIERpc3BlcnNpb25FbmFibGVkID0gZmFsc2UKCglTdG9ybUFvZS5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIGlzR29sZCBvciBpc01hc3RlciB0aGVuCgkJCWlmIG5vdCBEaXNwZXJzaW9uRW5hYmxlZCB0aGVuCgkJCQlEaXNwZXJzaW9uRW5hYmxlZCA9IHRydWUKCQkJCVN0b3JtQW9lLlRleHQgPSAiKEcpIEluc3RhbnQgU3Rvcm0gQW9FIChPbikiCgkJCWVsc2UKCQkJCURpc3BlcnNpb25FbmFibGVkID0gZmFsc2UKCQkJCVN0b3JtQW9lLlRleHQgPSAiKEcpIEluc3RhbnQgU3Rvcm0gQW9FIChPZmYpIgoJCQllbmQJCgkJZWxzZQoJCQlTdG9ybUFvZS5UZXh0ID0gIk1lbWJlciBOb3QgR29sZCIKCQkJd2FpdCgxKQoJCQlTdG9ybUFvZS5UZXh0ID0gIihHKSBJbnN0YW50IFN0b3JtIEFvRSAoT2ZmKSIKCQllbmQKCWVuZCkKCgktLSBTcGxpdHRpbmcgU2xpbWUgSGFjawoKCWxvY2FsIFNwbGl0dGluZ1NsaW1lID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCVNwbGl0dGluZ1NsaW1lLk5hbWUgPSAiU3BsaXR0aW5nU2xpbWUiCglTcGxpdHRpbmdTbGltZS5UZXh0ID0gIlNwbGl0dGluZyBTbGltZSBIYWNrIChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFNwbGl0dGluZ1NsaW1lKQoKCVNwbGl0dGluZ1NsaW1lRW5hYmxlZCA9IGZhbHNlCgoJU3BsaXR0aW5nU2xpbWUuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBTcGxpdHRpbmdTbGltZUVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlTcGxpdHRpbmdTbGltZUVuYWJsZWQgPSB0cnVlCgkJCVNwbGl0dGluZ1NsaW1lLlRleHQgPSAiU3BsaXR0aW5nIFNsaW1lIEhhY2sgKE9uKSIKCQllbHNlCgkJCVNwbGl0dGluZ1NsaW1lRW5hYmxlZCA9IGZhbHNlCgkJCVNwbGl0dGluZ1NsaW1lLlRleHQgPSAiU3BsaXR0aW5nIFNsaW1lIEhhY2sgKE9mZikiCgkJZW5kCgllbmQpCgoJLS0gQW1hdXJvdGljIExhbWJlbnQgSGFjawoKCWxvY2FsIEFtYXVyb3RpY0xhbWJlbnQgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJQW1hdXJvdGljTGFtYmVudC5OYW1lID0gIkFtYXVyb3RpY0xhbWJlbnQiCglBbWF1cm90aWNMYW1iZW50LlRleHQgPSAiQW1hdXJvdGljIExhbWJlbnQgSGFjayAoT2ZmKSIKCXRhYmxlLmluc2VydChidXR0b25zLCBBbWF1cm90aWNMYW1iZW50KQoKCUFtYXVyb3RpY0xhbWJlbnRFbmFibGVkID0gZmFsc2UKCglBbWF1cm90aWNMYW1iZW50Lk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgQW1hdXJvdGljTGFtYmVudEVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlBbWF1cm90aWNMYW1iZW50RW5hYmxlZCA9IHRydWUKCQkJQW1hdXJvdGljTGFtYmVudC5UZXh0ID0gIkFtYXVyb3RpYyBMYW1iZW50IEhhY2sgKE9uKSIKCQllbHNlCgkJCUFtYXVyb3RpY0xhbWJlbnRFbmFibGVkID0gZmFsc2UKCQkJQW1hdXJvdGljTGFtYmVudC5UZXh0ID0gIkFtYXVyb3RpYyBMYW1iZW50IEhhY2sgKE9mZikiCgkJZW5kCgllbmQpCgoJLS0gSW5zdGFudCBQbGFzbWEgSW1wbG9zaW9uCgoJbG9jYWwgUGxhc21hSW1wbG9zaW9uID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCVBsYXNtYUltcGxvc2lvbi5OYW1lID0gIlBsYXNtYUltcGxvc2lvbiIKCVBsYXNtYUltcGxvc2lvbi5UZXh0ID0gIkluc3RhbnQgUGxhc21hIEltcGxvc2lvbiAoT2ZmKSIKCXRhYmxlLmluc2VydChidXR0b25zLCBQbGFzbWFJbXBsb3Npb24pCgoJUGxhc21hSW1wbG9zaW9uRW5hYmxlZCA9IGZhbHNlCgoJUGxhc21hSW1wbG9zaW9uLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgUGxhc21hSW1wbG9zaW9uRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCVBsYXNtYUltcGxvc2lvbkVuYWJsZWQgPSB0cnVlCgkJCVBsYXNtYUltcGxvc2lvbi5UZXh0ID0gIkluc3RhbnQgUGxhc21hIEltcGxvc2lvbiAoT24pIgoJCWVsc2UKCQkJUGxhc21hSW1wbG9zaW9uRW5hYmxlZCA9IGZhbHNlCgkJCVBsYXNtYUltcGxvc2lvbi5UZXh0ID0gIkluc3RhbnQgUGxhc21hIEltcGxvc2lvbiAoT2ZmKSIKCQllbmQKCWVuZCkKCgktLSBGb3JtaWRhYmxlIFJvYXIgSGFjawoKCWxvY2FsIEZvcm1pZGFibGVSb2FyID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCUZvcm1pZGFibGVSb2FyLk5hbWUgPSAiRm9ybWlkYWJsZVJvYXIiCglGb3JtaWRhYmxlUm9hci5UZXh0ID0gIkZvcm1pZGFibGUgUm9hciBIYWNrIChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIEZvcm1pZGFibGVSb2FyKQoKCUZvcm1pZGFibGVSb2FyRW5hYmxlZCA9IGZhbHNlCgoJRm9ybWlkYWJsZVJvYXIuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBGb3JtaWRhYmxlUm9hckVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlGb3JtaWRhYmxlUm9hckVuYWJsZWQgPSB0cnVlCgkJCUZvcm1pZGFibGVSb2FyLlRleHQgPSAiRm9ybWlkYWJsZSBSb2FyIEhhY2sgKE9uKSIKCQllbHNlCgkJCUZvcm1pZGFibGVSb2FyRW5hYmxlZCA9IGZhbHNlCgkJCUZvcm1pZGFibGVSb2FyLlRleHQgPSAiRm9ybWlkYWJsZSBSb2FyIEhhY2sgKE9mZikiCgkJZW5kCgllbmQpCgoJLS0gSW5zdGFudCBTa2VsZXRvbiBHcmFiCgoJbG9jYWwgU2tlbGV0b25HcmFiID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCVNrZWxldG9uR3JhYi5OYW1lID0gIlNrZWxldG9uR3JhYiIKCVNrZWxldG9uR3JhYi5UZXh0ID0gIkluc3RhbnQgU2tlbGV0b24gR3JhYiAoT2ZmKSBbQUlNRURdIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFNrZWxldG9uR3JhYikKCglTa2VsZXRvbkdyYWJFbmFibGVkID0gZmFsc2UKCglTa2VsZXRvbkdyYWIuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBTa2VsZXRvbkdyYWJFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJU2tlbGV0b25HcmFiRW5hYmxlZCA9IHRydWUKCQkJU2tlbGV0b25HcmFiLlRleHQgPSAiSW5zdGFudCBTa2VsZXRvbiBHcmFiIChPbikgW0FJTUVEXSIKCQllbHNlCgkJCVNrZWxldG9uR3JhYkVuYWJsZWQgPSBmYWxzZQoJCQlTa2VsZXRvbkdyYWIuVGV4dCA9ICJJbnN0YW50IFNrZWxldG9uIEdyYWIgKE9mZikgW0FJTUVEXSIKCQllbmQKCWVuZCkKCgktLSBHcmF2aXRhdGlvbmFsIEZpZWxkIEhhY2sKCglsb2NhbCBHcmF2aXRhdGlvbmFsRmllbGQgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJR3Jhdml0YXRpb25hbEZpZWxkLk5hbWUgPSAiR3Jhdml0YXRpb25hbEZpZWxkIgoJR3Jhdml0YXRpb25hbEZpZWxkLlRleHQgPSAiR3Jhdml0YXRpb25hbCBGaWVsZCBIYWNrIChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIEdyYXZpdGF0aW9uYWxGaWVsZCkKCglHcmF2aXRhdGlvbmFsRmllbGRFbmFibGVkID0gZmFsc2UKCglHcmF2aXRhdGlvbmFsRmllbGQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBHcmF2aXRhdGlvbmFsRmllbGRFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJR3Jhdml0YXRpb25hbEZpZWxkRW5hYmxlZCA9IHRydWUKCQkJR3Jhdml0YXRpb25hbEZpZWxkLlRleHQgPSAiR3Jhdml0YXRpb25hbCBGaWVsZCBIYWNrIChPbikiCgkJZWxzZQoJCQlHcmF2aXRhdGlvbmFsRmllbGRFbmFibGVkID0gZmFsc2UKCQkJR3Jhdml0YXRpb25hbEZpZWxkLlRleHQgPSAiR3Jhdml0YXRpb25hbCBGaWVsZCBIYWNrIChPZmYpIgoJCWVuZAoJZW5kKQoKCS0tIEluc3RhbnQgUm9jayBBcm1vcgoKCWxvY2FsIFJvY2tBcm1vciA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglSb2NrQXJtb3IuTmFtZSA9ICJSb2NrQXJtb3IiCglSb2NrQXJtb3IuVGV4dCA9ICJJbnN0YW50IFJvY2sgQXJtb3IiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgUm9ja0FybW9yKQoKCVJvY2tBcm1vci5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIHBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkJvZHkgQ29sb3JzIikgdGhlbgoJCQlwbGF5ZXIuQ2hhcmFjdGVyWyJCb2R5IENvbG9ycyJdOkRlc3Ryb3koKQoJCWVuZAoJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIkVhcnRoIiwgIlJvY2sgQXJtb3IiKQoJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiRWFydGgiLCAiUm9jayBBcm1vciIpCgllbmQpCgoJLS0tLSBQbGF5ZXIgbW9kaWZpY2F0aW9ucwoJLS0gU2xpbWUgQnVkZGllcyBIYWNrCgoJbG9jYWwgU2xpbWVCdWRkaWVzID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCVNsaW1lQnVkZGllcy5OYW1lID0gIlNsaW1lQnVkZGllcyIKCVNsaW1lQnVkZGllcy5UZXh0ID0gIihHKSBTbGltZSBCdWRkaWVzIEhhY2sgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgU2xpbWVCdWRkaWVzKQoKCWxvY2FsIFNsaW1lQnVkZGllc0VuYWJsZWQgPSBmYWxzZQoKCVNsaW1lQnVkZGllcy5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIGlzR29sZCBvciBpc01hc3RlciB0aGVuCgkJCWlmIFNsaW1lQnVkZGllc0VuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJU2xpbWVCdWRkaWVzRW5hYmxlZCA9IHRydWUKCQkJCVNsaW1lQnVkZGllcy5UZXh0ID0gIihHKSBTbGltZSBCdWRkaWVzIEhhY2sgKE9uKSIKCQkJZWxzZQoJCQkJU2xpbWVCdWRkaWVzRW5hYmxlZCA9IGZhbHNlCgkJCQlTbGltZUJ1ZGRpZXMuVGV4dCA9ICIoRykgU2xpbWUgQnVkZGllcyBIYWNrIChPZmYpIgoJCQllbmQKCQllbHNlCgkJCVNsaW1lQnVkZGllcy5UZXh0ID0gIk1lbWJlciBOb3QgR29sZCIKCQkJd2FpdCgxKQoJCQlTbGltZUJ1ZGRpZXMuVGV4dCA9ICIoRykgU2xpbWUgQnVkZGllcyBIYWNrIChPZmYpIgoJCWVuZAoJZW5kKQoKCS0tIEluZXJ0aWEgR3Jhdml0eQoKCWxvY2FsIEluZXJ0aWFHcmF2aXR5ID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCUluZXJ0aWFHcmF2aXR5Lk5hbWUgPSAiSW5lcnRpYUdyYXZpdHkiCglJbmVydGlhR3Jhdml0eS5UZXh0ID0gIkluZXJ0aWEgR3Jhdml0eSAoT2ZmKSIKCXRhYmxlLmluc2VydChidXR0b25zLCBJbmVydGlhR3Jhdml0eSkKCglJbmVydGlhR3Jhdml0eUVuYWJsZWQgPSBmYWxzZQoKCUluZXJ0aWFHcmF2aXR5Lk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgSW5lcnRpYUdyYXZpdHlFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJSW5lcnRpYUdyYXZpdHlFbmFibGVkID0gdHJ1ZQoJCQlJbmVydGlhR3Jhdml0eS5UZXh0ID0gIkluZXJ0aWEgR3Jhdml0eSAoT24pIgoJCQlsb2NhbCBCb2R5Rm9yY2UgPSBJbnN0YW5jZS5uZXcoIkJvZHlGb3JjZSIpCgkJCUJvZHlGb3JjZS5QYXJlbnQgPSBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQKCQkJQm9keUZvcmNlLk5hbWUgPSAiSW5lcnRpYUdyYXZpdHlGb3JjZSIKCQkJQm9keUZvcmNlLkZvcmNlID0gVmVjdG9yMy5uZXcoMCwgMTYzOCwgMCkKCQllbHNlCgkJCUluZXJ0aWFHcmF2aXR5RW5hYmxlZCA9IGZhbHNlCgkJCUluZXJ0aWFHcmF2aXR5LlRleHQgPSAiSW5lcnRpYSBHcmF2aXR5IChPZmYpIgoJCQlpZiBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQ6RmluZEZpcnN0Q2hpbGQoIkluZXJ0aWFHcmF2aXR5Rm9yY2UiKSB0aGVuCgkJCQlwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuSW5lcnRpYUdyYXZpdHlGb3JjZTpEZXN0cm95KCkKCQkJZW5kCgkJZW5kCgllbmQpCgoJLS0gU3BlY3RyYWwgRW1ib2RpbWVudAoKCWxvY2FsIFNwZWN0cmFsRW1ib2RpbWVudCA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglTcGVjdHJhbEVtYm9kaW1lbnQuTmFtZSA9ICJTcGVjdHJhbEVtYm9kaW1lbnQiCglTcGVjdHJhbEVtYm9kaW1lbnQuVGV4dCA9ICJTcGVjdHJhbCBFbWJvZGltZW50IEtleWJpbmQgKE9mZikgW1hdIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFNwZWN0cmFsRW1ib2RpbWVudCkKCglTcGVjdHJhbEVtYm9kaW1lbnRFbmFibGVkID0gZmFsc2UKCglTcGVjdHJhbEVtYm9kaW1lbnQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBTcGVjdHJhbEVtYm9kaW1lbnRFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJU3BlY3RyYWxFbWJvZGltZW50RW5hYmxlZCA9IHRydWUKCQkJU3BlY3RyYWxFbWJvZGltZW50LlRleHQgPSAiU3BlY3RyYWwgRW1ib2RpbWVudCBLZXliaW5kIChPbikgW1hdIgoJCWVsc2UKCQkJU3BlY3RyYWxFbWJvZGltZW50RW5hYmxlZCA9IGZhbHNlCgkJCVNwZWN0cmFsRW1ib2RpbWVudC5UZXh0ID0gIlNwZWN0cmFsIEVtYm9kaW1lbnQgS2V5YmluZCAoT2ZmKSBbWF0iCgkJZW5kCgllbmQpCgoJLS0gQW50aS1CbGluZAoKCWxvY2FsIEFudGlCbGluZCA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglBbnRpQmxpbmQuTmFtZSA9ICJBbnRpQmxpbmQiCglBbnRpQmxpbmQuVGV4dCA9ICJBbnRpLUJsaW5kIChPZmYpIFtLXSIKCXRhYmxlLmluc2VydChidXR0b25zLCBBbnRpQmxpbmQpCgoJQW50aUJsaW5kRW5hYmxlZCA9IGZhbHNlCgoJbG9jYWwgbm9ybWFsRm9nQ29sb3IgPSBnYW1lLkxpZ2h0aW5nLkZvZ0NvbG9yCglsb2NhbCBub3JtYWxGb2dFbmQgPSBnYW1lLkxpZ2h0aW5nLkZvZ0VuZAoJbG9jYWwgbm9ybWFsQnJpZ2h0bmVzcyA9IGdhbWUuTGlnaHRpbmcuQnJpZ2h0bmVzcwoJbG9jYWwgbm9ybWFsQ2xvY2tUaW1lID0gZ2FtZS5MaWdodGluZy5DbG9ja1RpbWUKCglsb2NhbCBmdW5jdGlvbiBBbnRpQmxpbmRGdW5jKCkKCQlpZiBBbnRpQmxpbmRFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJQW50aUJsaW5kRW5hYmxlZCA9IHRydWUKCQkJQW50aUJsaW5kLlRleHQgPSAiQW50aS1CbGluZCAoT24pIFtLXSIKCQkJd2hpbGUgQW50aUJsaW5kRW5hYmxlZCBkbwoJCQkJd2FpdCgpCgkJCQlnYW1lLkxpZ2h0aW5nLkZvZ0NvbG9yID0gbm9ybWFsRm9nQ29sb3IKCQkJCWdhbWUuTGlnaHRpbmcuRm9nRW5kID0gbm9ybWFsRm9nRW5kCgkJCQlnYW1lLkxpZ2h0aW5nLkJyaWdodG5lc3MgPSBub3JtYWxCcmlnaHRuZXNzCgkJCQlnYW1lLkxpZ2h0aW5nLkNsb2NrVGltZSA9IG5vcm1hbENsb2NrVGltZQoJCQllbmQKCQllbHNlCgkJCUFudGlCbGluZEVuYWJsZWQgPSBmYWxzZQoJCQlBbnRpQmxpbmQuVGV4dCA9ICJBbnRpLUJsaW5kIChPZmYpIFtLXSIKCQllbmQKCWVuZAoKCUFudGlCbGluZC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoQW50aUJsaW5kRnVuYykKCglwbGF5ZXI6V2FpdEZvckNoaWxkKCJQbGF5ZXJHdWkiKS5EZXNjZW5kYW50QWRkZWQ6Q29ubmVjdChmdW5jdGlvbihkKQoJCWlmIEFudGlCbGluZEVuYWJsZWQgdGhlbgoJCQlpZiBkLk5hbWUgPT0gIlNjcmVlbkd1aSIgdGhlbgoJCQkJd2FpdCgpCgkJCQlwbGF5ZXIuUGxheWVyR3VpLlNjcmVlbkd1aTpEZXN0cm95KCkKCQkJZWxzZWlmIGQuTmFtZSA9PSAiRGlzdG9ydCIgdGhlbgoJCQkJd2FpdCgpCgkJCQlwbGF5ZXIuUGxheWVyR3VpLkRpc3RvcnQ6RGVzdHJveSgpCgkJCWVuZAoJCWVuZAoJZW5kKQoKCS0tIFNwZWVkIGhhY2sKCglsb2NhbCBTcGVlZGhhY2sgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJU3BlZWRoYWNrLk5hbWUgPSAiU3BlZWRoYWNrIgoJU3BlZWRoYWNrLlRleHQgPSAiU3BlZWRoYWNrIFtkZWZhdWx0IDY0XSAoT2ZmKSBbVF0iCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgU3BlZWRoYWNrKQoKCVNwZWVkaGFja0VuYWJsZWQgPSBmYWxzZQoJU2V0U3BlZWQgPSA2NAoKCWZ1bmN0aW9uIG1vZGlmeVNwZWVkKCkKCQlwbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpLkNoYW5nZWQ6Y29ubmVjdChmdW5jdGlvbigpCgkJCWlmIFNwZWVkaGFja0VuYWJsZWQgYW5kIFNldFNwZWVkIH49IG5pbCB0aGVuCgkJCQlwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkLldhbGtTcGVlZCA9IFNldFNwZWVkCgkJCWVsc2UKCQkJCXJldHVybgoJCQllbmQKCQllbmQpCgllbmQKCglmdW5jdGlvbiBiZWdpblNwZWVkKCkKCQlpZiBTcGVlZGhhY2tFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJU3BlZWRoYWNrRW5hYmxlZCA9IHRydWUKCQkJU3BlZWRoYWNrLlRleHQgPSAiU3BlZWRoYWNrIFtkZWZhdWx0IDY0XSAoT24pIFtUXSIKCQkJbW9kaWZ5U3BlZWQoKQoJCQl3YWl0KCkKCQkJcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZC5XYWxrU3BlZWQgPSBTZXRTcGVlZAoJCQl3aGlsZSBTcGVlZGhhY2tFbmFibGVkIGRvCgkJCQl3YWl0KCkKCQkJCWlmIHBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQuSGVhbHRoID09IDAgdGhlbgoJCQkJCXJlcGVhdCB3YWl0KCkgdW50aWwgcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZC5IZWFsdGggfj0gMAoJCQkJCW1vZGlmeVNwZWVkKCkKCQkJCQl3YWl0KCkKCQkJCQlwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkLldhbGtTcGVlZCA9IFNldFNwZWVkCgkJCQllbmQKCQkJZW5kCgkJZWxzZQoJCQlTcGVlZGhhY2tFbmFibGVkID0gZmFsc2UKCQkJU3BlZWRoYWNrLlRleHQgPSAiU3BlZWRoYWNrIFtkZWZhdWx0IDY0XSAoT2ZmKSBbVF0iCgkJZW5kCgllbmQKCglTcGVlZGhhY2suTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGJlZ2luU3BlZWQpCgoJLS0tLSBCdWxsZXRzCgktLSBIeXBlcmFuZyBIYWNrCgoJbG9jYWwgVGVjaFJhbmcgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJVGVjaFJhbmcuTmFtZSA9ICJUZWNoUmFuZyIKCVRlY2hSYW5nLlRleHQgPSAiSHlwZXJhbmcgSGFjayAoT2ZmKSIKCXRhYmxlLmluc2VydChidXR0b25zLCBUZWNoUmFuZykKCglsb2NhbCBIeXBlcmFuZ0VuYWJsZWQgPSBmYWxzZQoKCVRlY2hSYW5nLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgbm90IEh5cGVyYW5nRW5hYmxlZCB0aGVuCgkJCUh5cGVyYW5nRW5hYmxlZCA9IHRydWUKCQkJVGVjaFJhbmcuVGV4dCA9ICJIeXBlcmFuZyBIYWNrIChPbikiCgkJZWxzZQoJCQlIeXBlcmFuZ0VuYWJsZWQgPSBmYWxzZQoJCQlUZWNoUmFuZy50ZXh0ID0gIkh5cGVyYW5nIEhhY2sgKE9mZikiCgkJZW5kCgllbmQpCgoJLS0gQXN0ZXJvaWQgQmVsdCBIYWNrCgoJbG9jYWwgQXN0ZXJvaWRCZWx0SGFjayA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglBc3Rlcm9pZEJlbHRIYWNrLk5hbWUgPSAiQXN0ZXJvaWRCZWx0SGFjayIKCUFzdGVyb2lkQmVsdEhhY2suVGV4dCA9ICJBdGVyb2lkcyBCZWx0IEhhY2sgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgQXN0ZXJvaWRCZWx0SGFjaykKCQoJbG9jYWwgQXN0ZXJvaWRCZWx0RW5hYmxlZCA9IGZhbHNlCgkKCUFzdGVyb2lkQmVsdEhhY2suTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBBc3Rlcm9pZEJlbHRFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJQXN0ZXJvaWRCZWx0RW5hYmxlZCA9IHRydWUKCQkJQXN0ZXJvaWRCZWx0SGFjay5UZXh0ID0gIkFzdGVyb2lkIEJlbHQgSGFjayAoT24pIgoJCWVsc2UKCQkJQXN0ZXJvaWRCZWx0RW5hYmxlZCA9IGZhbHNlCgkJCUFzdGVyb2lkQmVsdEhhY2suVGV4dCA9ICJBdGVyb2lkcyBCZWx0IEhhY2sgKE9mZikiCgkJZW5kCgllbmQpCgoJLS0gVmlnb3IgR3lyYXRpb24gSGFjawoKCWxvY2FsIFZpZ0d5cmF0SGFjayA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglWaWdHeXJhdEhhY2suTmFtZSA9ICJWaWdHeXJhdEhhY2siCglWaWdHeXJhdEhhY2suVGV4dCA9ICJWaWdvciBHeXJhdGlvbiBIYWNrIChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFZpZ0d5cmF0SGFjaykKCQoJbG9jYWwgVmlnb3JIYWNrRW5hYmxlZCA9IGZhbHNlCgkKCVZpZ0d5cmF0SGFjay5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIFZpZ29ySGFja0VuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlWaWdvckhhY2tFbmFibGVkID0gdHJ1ZQoJCQlWaWdHeXJhdEhhY2suVGV4dCA9ICJWaWdvciBHeXJhdGlvbiBIYWNrIChPbikiCgkJZWxzZQoJCQlWaWdvckhhY2tFbmFibGVkID0gZmFsc2UKCQkJVmlnR3lyYXRIYWNrLlRleHQgPSAiVmlnb3IgR3lyYXRpb24gSGFjayAoT2ZmKSIKCQllbmQKCWVuZCkKCgktLSBMaWdodG5pbmcgQmFycmFnZSBIYWNrCgoJbG9jYWwgQmFycmFnZSA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglCYXJyYWdlLk5hbWUgPSAiQmFycmFnZSIKCUJhcnJhZ2UuVGV4dCA9ICJCYXJyYWdlIEhhY2sgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgQmFycmFnZSkKCglCYXJyYWdlLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgbm90IFN0b3JtQnVsbGV0c0VuYWJsZWQgdGhlbgoJCQlTdG9ybUJ1bGxldHNFbmFibGVkID0gdHJ1ZQoJCQlCYXJyYWdlLlRleHQgPSAiQmFycmFnZSBIYWNrIChPbikiCgkJZWxzZQoJCQlTdG9ybUJ1bGxldHNFbmFibGVkID0gZmFsc2UKCQkJQmFycmFnZS5UZXh0ID0gIkJhcnJhZ2UgSGFjayAoT2ZmKSIKCQllbmQKCWVuZCkKCgktLS0tIEJsYXN0cwoJLS0gT3JiaXRhbCBTdHJpa2UgSGFjawoKCWxvY2FsIE9yYml0YWwgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJT3JiaXRhbC5OYW1lID0gIk9yaWJ0YWwiCglPcmJpdGFsLlRleHQgPSAiKEcpIE9yYml0YWwgU3RyaWtlIEhhY2sgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgT3JiaXRhbCkKCglsb2NhbCBPcmJpdGFsSGFja0VuYWJsZWQgPSBmYWxzZQoKCU9yYml0YWwuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBpc0dvbGQgb3IgaXNNYXN0ZXIgdGhlbgoJCQlpZiBub3QgT3JiaXRhbEhhY2tFbmFibGVkIHRoZW4KCQkJCU9yYml0YWxIYWNrRW5hYmxlZCA9IHRydWUKCQkJCU9yYml0YWwuVGV4dCA9ICIoRykgT3JiaXRhbCBTdHJpa2UgSGFjayAoT24pIgoJCQllbHNlCgkJCQlPcmJpdGFsSGFja0VuYWJsZWQgPSBmYWxzZQoJCQkJT3JiaXRhbC5UZXh0ID0gIihHKSBPcmJpdGFsIFN0cmlrZSBIYWNrIChPZmYpIgoJCQllbmQKCQllbHNlCgkJCU9yYml0YWwuVGV4dCA9ICJNZW1iZXIgTm90IEdvbGQiCgkJCXdhaXQoMSkKCQkJT3JiaXRhbC5UZXh0ID0gIihHKSBPcmJpdGFsIFN0cmlrZSBIYWNrIChPZmYpIgoJCWVuZAoJZW5kKQoKCS0tIERvdWJsZSBSYXkgSGFjawoKCWxvY2FsIERvdWJsZVJheSA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglEb3VibGVSYXkuTmFtZSA9ICJEb3VibGVSYXkiCglEb3VibGVSYXkuVGV4dCA9ICIoRykgRG91YmxlIFJheSBIYWNrIChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIERvdWJsZVJheSkKCglEb3VibGVSYXkuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBpc0dvbGQgb3IgaXNNYXN0ZXIgdGhlbgoJCQlpZiBub3QgRG91YmxlUmF5RW5hYmxlZCB0aGVuCgkJCQlEb3VibGVSYXlFbmFibGVkID0gdHJ1ZQoJCQkJRG91YmxlUmF5LlRleHQgPSAiKEcpIERvdWJsZSBSYXkgSGFjayAoT24pIgoJCQllbHNlCgkJCQlEb3VibGVSYXlFbmFibGVkID0gZmFsc2UKCQkJCURvdWJsZVJheS5UZXh0ID0gIihHKSBEb3VibGUgUmF5IEhhY2sgKE9mZikiCgkJCWVuZAoJCWVsc2UKCQkJRG91YmxlUmF5LlRleHQgPSAiTWVtYmVyIE5vdCBHb2xkIgoJCQl3YWl0KDEpCgkJCURvdWJsZVJheS5UZXh0ID0gIihHKSBEb3VibGUgUmF5IEhhY2sgKE9mZikiCgkJZW5kCgllbmQpCgoJLS0gSG9sb2JlYW0gQ2FtZXJhIEF0dGFjaAoKCWxvY2FsIEhvbG9iZWFtID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCUhvbG9iZWFtLk5hbWUgPSAiSG9sb2JlYW0iCglIb2xvYmVhbS5UZXh0ID0gIkhvbG9iZWFtIENhbWVyYSBBdHRhY2ggKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgSG9sb2JlYW0pCgoJSG9sb2JlYW1FbmFibGVkID0gZmFsc2UKCglmdW5jdGlvbiBhdHRhY2hDYW1lcmEodikKCQlpZiAodiB+PSBuaWwpIHRoZW4KCQkJaWYgbm90KHZpZXdpbmcpIGFuZCAodi5OYW1lID09ICJIb2xvYmVhbSIpIHRoZW4KCQkJCWdhbWUuV29ya3NwYWNlLkNhbWVyYS5DYW1lcmFTdWJqZWN0ID0gZ2FtZS5Xb3Jrc3BhY2VbJy5JZ25vcmUnXVsnLkF0dGFja3MnXVt2Lk5hbWVdCgkJCWVsc2UKCQkJCXY6RGVzdHJveSgpCgkJCQlyZXR1cm4KCQkJZW5kCgkJCQoJCQl2LlRyYW5zcGFyZW5jeSA9IDAKCgkJCXdhaXQoNCkKCQkJaWYgbm90KHZpZXdpbmcpIGFuZCBub3QoZ2FtZS5Xb3Jrc3BhY2UuQ2FtZXJhLkNhbWVyYVN1YmplY3QgPT0gcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZCkgdGhlbgoJCQkJZ2FtZS5Xb3Jrc3BhY2UuQ2FtZXJhLkNhbWVyYVN1YmplY3QgPSBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkCgkJCWVuZAoJCQkKCQkJdjpEZXN0cm95KCkKCQllbmQKCWVuZAoJCglnYW1lLldvcmtzcGFjZVsnLklnbm9yZSddWycuQXR0YWNrcyddLkRlc2NlbmRhbnRBZGRlZDpDb25uZWN0KGZ1bmN0aW9uKHYpCgkJaWYgSG9sb2JlYW1FbmFibGVkIHRoZW4KCQkJaWYgKHYuTmFtZSA9PSAiUGFydCIpIGFuZCAocGxheWVyLkNoYXJhY3RlcikgdGhlbgoJCQkJbG9jYWwgZGlzdGFuY2UgPSAocGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gdi5Qb3NpdGlvbikuTWFnbml0dWRlCgkJCQkKCQkJCWlmICh2LlNpemUgPT0gVmVjdG9yMy5uZXcoNSwgNSwgNSkpIGFuZCAoZGlzdGFuY2UgPCAxMCkgYW5kICh2OldhaXRGb3JDaGlsZCgiQm9keVZlbG9jaXR5IiwgMSkpIGFuZCAodjpXYWl0Rm9yQ2hpbGQoIkJvZHlHeXJvIiwgMSkpIGFuZCAodi5Cb2R5VmVsb2NpdHkuUCA+PSAxMjUwKSB0aGVuCgkJCQkKCQkJCQl2Lk5hbWUgPSAiSG9sb2JlYW0iCgkJCQkKCQkJCQlwY2FsbChmdW5jdGlvbigpCgkJCQkJCWNvcm91dGluZS5yZXN1bWUoY29yb3V0aW5lLmNyZWF0ZShmdW5jdGlvbigpIAoJCQkJCQkJYXR0YWNoQ2FtZXJhKHYpIAoJCQkJCQllbmQpKQoJCQkJCWVuZCkKCQkJCQkKCQkJCQlsb2NhbCBndWkgPSBwbGF5ZXIuUGxheWVyR3VpLk1haW4uU2tpbGxzQmFyCgkJCQkJCgkJCQkJd2FpdCgwLjUpCgkJCQkJCgkJCQkJd2hpbGUgd2FpdCgpIGRvCgkJCQkJCWlmIG5vdChndWlbJzEnXS5DRC5UZXh0ID09ICIuLi4iKSBhbmQgbm90KGd1aVsnMiddLkNELlRleHQgPT0gIi4uLiIpIGFuZCBub3QoZ3VpWyczJ10uQ0QuVGV4dCA9PSAiLi4uIikgYW5kIG5vdChndWlbJzQnXS5DRC5UZXh0ID09ICIuLi4iKSBhbmQgbm90KGd1aVsnNSddLkNELlRleHQgPT0gIi4uLiIpIHRoZW4KCQkJCQkJCXBjYWxsKGZ1bmN0aW9uKCkKCQkJCQkJCQlpZiBub3Qodmlld2luZykgYW5kIG5vdChnYW1lLldvcmtzcGFjZS5DYW1lcmEuQ2FtZXJhU3ViamVjdCA9PSBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkKSB0aGVuCgkJCQkJCQkJCWdhbWUuV29ya3NwYWNlLkNhbWVyYS5DYW1lcmFTdWJqZWN0ID0gcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZAoJCQkJCQkJCWVuZAoJCQkKCQkJCQkJCQl2OkRlc3Ryb3koKQoJCQkJCQkJZW5kKQoJCQkJCQkJCgkJCQkJCQlicmVhawoJCQkJCQllbmQKCQkJCQllbmQKCQkJCWVuZAoJCQllbmQKCQllbmQKCWVuZCkKCglIb2xvYmVhbS5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIEhvbG9iZWFtRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCUhvbG9iZWFtRW5hYmxlZCA9IHRydWUKCQkJSG9sb2JlYW0uVGV4dCA9ICJIb2xvYmVhbSBDYW1lcmEgQXR0YWNoIChPbikiCgkJCQoJCQlmb3IgaSwgdiBpbiBwYWlycyhnYW1lLldvcmtzcGFjZVsnLklnbm9yZSddWycuQXR0YWNrcyddOkdldENoaWxkcmVuKCkpIGRvCgkJCQlpZiAodi5OYW1lID09ICJQYXJ0IikgYW5kICh2OldhaXRGb3JDaGlsZCgiQm9keVZlbG9jaXR5IiwgMSkpIGFuZCAodjpXYWl0Rm9yQ2hpbGQoIkJvZHlHeXJvIiwgMSkpIGFuZCAodi5Cb2R5VmVsb2NpdHkuUCA+PSAxMjUwKSB0aGVuIHY6RGVzdHJveSgpIGVuZAoJCQllbmQKCQllbHNlCgkJCUhvbG9iZWFtRW5hYmxlZCA9IGZhbHNlCgkJCUhvbG9iZWFtLlRleHQgPSAiSG9sb2JlYW0gQ2FtZXJhIEF0dGFjaCAoT2ZmKSIKCQllbmQKCWVuZCkKCgktLSBDb250cm9sbGVkIEVjaG9lcwoKCWxvY2FsIEVjaG9lcyA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglFY2hvZXMuTmFtZSA9ICJFY2hvZXMiCglFY2hvZXMuVGV4dCA9ICJDb250cm9sbGVkIEVjaG9lcyAoT2ZmKSIKCXRhYmxlLmluc2VydChidXR0b25zLCBFY2hvZXMpCgoJQ29udHJvbGxlZEVjaG9lc0VuYWJsZWQgPSBmYWxzZQoJRWNob2VzUGhhc2UgPSAxCgoJRWNob2VzLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgQ29udHJvbGxlZEVjaG9lc0VuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlDb250cm9sbGVkRWNob2VzRW5hYmxlZCA9IHRydWUKCQkJRWNob2VzLlRleHQgPSAiQ29udHJvbGxlZCBFY2hvZXMgKE9uKSIKCQllbHNlCgkJCUNvbnRyb2xsZWRFY2hvZXNFbmFibGVkID0gZmFsc2UKCQkJRWNob2VzLlRleHQgPSAiQ29udHJvbGxlZCBFY2hvZXMgKE9mZikiCgkJZW5kCgllbmQpCgoJLS0tLSBTaGllbGRzCgktLSBDcnlzdGFsIEFybWFtZW50IEhhY2sKCglsb2NhbCBDcnlzdGFsQXJtYW1lbnQgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJQ3J5c3RhbEFybWFtZW50Lk5hbWUgPSAiQ3J5c3RhbEFybWFtZW50IgoJQ3J5c3RhbEFybWFtZW50LlRleHQgPSAiSW5zdGFudCBDcnlzdGFsIEFybWFtZW50IChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIENyeXN0YWxBcm1hbWVudCkKCglDcnlzdGFsQXJtYW1lbnRFbmFibGVkID0gZmFsc2UKCglDcnlzdGFsQXJtYW1lbnQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBDcnlzdGFsQXJtYW1lbnRFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJQ3J5c3RhbEFybWFtZW50RW5hYmxlZCA9IHRydWUKCQkJQ3J5c3RhbEFybWFtZW50LlRleHQgPSAiSW5zdGFudCBDcnlzdGFsIEFybWFtZW50IChPbikiCgkJZWxzZQoJCQlDcnlzdGFsQXJtYW1lbnRFbmFibGVkID0gZmFsc2UKCQkJQ3J5c3RhbEFybWFtZW50LlRleHQgPSAiSW5zdGFudCBDcnlzdGFsIEFybWFtZW50IChPZmYpIgoJCWVuZAoJZW5kKQoKCS0tIEdyYXZpdGFsIEdsb2JlIEhhY2sKCglsb2NhbCBHcmF2aXRhbEdsb2JlID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCUdyYXZpdGFsR2xvYmUuTmFtZSA9ICJHcmF2aXRhbEdsb2JlIgoJR3Jhdml0YWxHbG9iZS5UZXh0ID0gIkdyYXZpdGFsIEdsb2JlIEhhY2sgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgR3Jhdml0YWxHbG9iZSkKCglHcmF2aXRhbEdsb2JlRW5hYmxlZCA9IGZhbHNlCgoJR3Jhdml0YWxHbG9iZS5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIEdyYXZpdGFsR2xvYmVFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJR3Jhdml0YWxHbG9iZUVuYWJsZWQgPSB0cnVlCgkJCUdyYXZpdGFsR2xvYmUuVGV4dCA9ICJHcmF2aXRhbCBHbG9iZSBIYWNrIChPbikiCgkJZWxzZQoJCQlHcmF2aXRhbEdsb2JlRW5hYmxlZCA9IGZhbHNlCgkJCUdyYXZpdGFsR2xvYmUuVGV4dCA9ICJHcmF2aXRhbCBHbG9iZSBIYWNrIChPZmYpIgoJCWVuZAoJZW5kKQoKCS0tLS0gVWx0cwoJLS0gUmVhcGVyJ3MgUmFnZQoJbG9jYWwgUmVhcGVyVWx0ID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCVJlYXBlclVsdC5OYW1lID0gIlJlYXBlclVsdCIKCVJlYXBlclVsdC5UZXh0ID0gIihHKSBSZWFwZXIncyBSYWdlIEhhY2sgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgUmVhcGVyVWx0KQoKCWxvY2FsIFJlYXBlclVsdEVuYWJsZWQgPSBmYWxzZQoKCVJlYXBlclVsdC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIGlzR29sZCBvciBpc01hc3RlciB0aGVuCgkJCWlmIG5vdCBSZWFwZXJVbHRFbmFibGVkIHRoZW4KCQkJCVJlYXBlclVsdEVuYWJsZWQgPSB0cnVlCgkJCQlSZWFwZXJVbHQuVGV4dCA9ICIoRykgUmVhcGVyJ3MgUmFnZSBIYWNrIChPbikiCgkJCWVsc2UKCQkJCVJlYXBlclVsdEVuYWJsZWQgPSBmYWxzZQoJCQkJUmVhcGVyVWx0LlRleHQgPSAiKEcpIFJlYXBlcidzIFJhZ2UgSGFjayAoT2ZmKSIKCQkJZW5kCgkJZWxzZQoJCQlSZWFwZXJVbHQuVGV4dCA9ICJNZW1iZXIgTm90IEdvbGQiCgkJCXdhaXQoMSkKCQkJUmVhcGVyVWx0LlRleHQgPSAiKEcpIFJlYXBlcidzIFJhZ2UgSGFjayAoT2ZmKSIKCQllbmQKCWVuZCkKCgktLSBBYmxhemUgSnVkZ2VtZW50IEhhY2sKCglsb2NhbCBBYmxhemVKdWRnZW1lbnQgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJQWJsYXplSnVkZ2VtZW50Lk5hbWUgPSAiQWJsYXplSnVkZ2VtZW50IgoJQWJsYXplSnVkZ2VtZW50LlRleHQgPSAiQWJsYXplIEp1ZGdlbWVudCBIYWNrIChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIEFibGF6ZUp1ZGdlbWVudCkKCglBYmxhemVKdWRnZW1lbnRIYWNrRW5hYmxlZCA9IGZhbHNlCgoJQWJsYXplSnVkZ2VtZW50Lk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgQWJsYXplSnVkZ2VtZW50SGFja0VuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlBYmxhemVKdWRnZW1lbnRIYWNrRW5hYmxlZCA9IHRydWUKCQkJQWJsYXplSnVkZ2VtZW50LlRleHQgPSAiQWJsYXplIEp1ZGdlbWVudCBIYWNrIChPbikiCgkJZWxzZQoJCQlBYmxhemVKdWRnZW1lbnRIYWNrRW5hYmxlZCA9IGZhbHNlCgkJCUFibGF6ZUp1ZGdlbWVudC5UZXh0ID0gIkFibGF6ZSBKdWRnZW1lbnQgSGFjayAoT2ZmKSIKCQllbmQKCWVuZCkKCgktLSBWb2lkIE9wZW5pbmcgSGFjawoKCWxvY2FsIFZvaWRPcGVuaW5nID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCVZvaWRPcGVuaW5nLk5hbWUgPSAiVm9pZE9wZW5pbmciCglWb2lkT3BlbmluZy5UZXh0ID0gIlZvaWQgT3BlbmluZyBIYWNrIChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFZvaWRPcGVuaW5nKQoKCVZvaWRPcGVuaW5nSGFja0VuYWJsZWQgPSBmYWxzZQoKCVZvaWRPcGVuaW5nLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgVm9pZE9wZW5pbmdIYWNrRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCVZvaWRPcGVuaW5nSGFja0VuYWJsZWQgPSB0cnVlCgkJCVZvaWRPcGVuaW5nLlRleHQgPSAiVm9pZCBPcGVuaW5nIEhhY2sgKE9uKSIKCQllbHNlCgkJCVZvaWRPcGVuaW5nSGFja0VuYWJsZWQgPSBmYWxzZQoJCQlWb2lkT3BlbmluZy5UZXh0ID0gIlZvaWQgT3BlbmluZyBIYWNrIChPZmYpIgoJCWVuZAoJZW5kKQoKCS0tIFRoZSBXb3JsZCBIYWNrCgoJbG9jYWwgVGhlV29ybGQgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJVGhlV29ybGQuTmFtZSA9ICJUaGVXb3JsZCIKCVRoZVdvcmxkLlRleHQgPSAiVGhlIFdvcmxkIEhhY2sgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgVGhlV29ybGQpCgoJVGhlV29ybGRFbmFibGVkID0gZmFsc2UKCglUaGVXb3JsZC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIFRoZVdvcmxkRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCVRoZVdvcmxkRW5hYmxlZCA9IHRydWUKCQkJVGhlV29ybGQuVGV4dCA9ICJUaGUgV29ybGQgSGFjayAoT24pIgoJCWVsc2UKCQkJVGhlV29ybGRFbmFibGVkID0gZmFsc2UKCQkJVGhlV29ybGQuVGV4dCA9ICJUaGUgV29ybGQgSGFjayAoT2ZmKSIKCQllbmQKCWVuZCkKCgktLSBQb2xhcmlzIEhhY2sKCglsb2NhbCBQb2xhcmlzID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCVBvbGFyaXMuTmFtZSA9ICJQb2xhcmlzIgoJUG9sYXJpcy5UZXh0ID0gIlBvbGFyaXMgSGFjayAoT2ZmKSIKCXRhYmxlLmluc2VydChidXR0b25zLCBQb2xhcmlzKQoKCVBvbGFyaXNFbmFibGVkID0gZmFsc2UKCglQb2xhcmlzLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgUG9sYXJpc0VuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlQb2xhcmlzRW5hYmxlZCA9IHRydWUKCQkJUG9sYXJpcy5UZXh0ID0gIlBvbGFyaXMgSGFjayAoT24pIgoJCWVsc2UKCQkJUG9sYXJpc0VuYWJsZWQgPSBmYWxzZQoJCQlQb2xhcmlzLlRleHQgPSAiUG9sYXJpcyBIYWNrIChPZmYpIgoJCWVuZAoJZW5kKQoKCS0tIEluc3RhbnQgU2hhdHRlcmluZyBFcnVwdGlvbgoKCWxvY2FsIFNoYXR0ZXJpbmdFcnVwdGlvbiA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglTaGF0dGVyaW5nRXJ1cHRpb24uTmFtZSA9ICJTaGF0dGVyaW5nRXJ1cHRpb24iCglTaGF0dGVyaW5nRXJ1cHRpb24uVGV4dCA9ICJJbnN0YW50IFNoYXR0ZXJpbmcgRXJ1cHRpb24gKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgU2hhdHRlcmluZ0VydXB0aW9uKQoKCVNoYXR0ZXJpbmdFcnVwdGlvbkVuYWJsZWQgPSBmYWxzZQoKCVNoYXR0ZXJpbmdFcnVwdGlvbi5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIFNoYXR0ZXJpbmdFcnVwdGlvbkVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlTaGF0dGVyaW5nRXJ1cHRpb25FbmFibGVkID0gdHJ1ZQoJCQlTaGF0dGVyaW5nRXJ1cHRpb24uVGV4dCA9ICJJbnN0YW50IFNoYXR0ZXJpbmcgRXJ1cHRpb24gKE9uKSIKCQllbHNlCgkJCVNoYXR0ZXJpbmdFcnVwdGlvbkVuYWJsZWQgPSBmYWxzZQoJCQlTaGF0dGVyaW5nRXJ1cHRpb24uVGV4dCA9ICJJbnN0YW50IFNoYXR0ZXJpbmcgRXJ1cHRpb24gKE9mZikiCgkJZW5kCgllbmQpCgoJLS0gRXRoZXJlYWwgQWN1bWVuIEhhY2sKCglsb2NhbCBFdGhlcmVhbEFjdW1lbiA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglFdGhlcmVhbEFjdW1lbi5OYW1lID0gIkV0aGVyZWFsQWN1bWVuIgoJRXRoZXJlYWxBY3VtZW4uVGV4dCA9ICJFdGhlcmVhbCBBY3VtZW4gSGFjayAoT2ZmKSIKCXRhYmxlLmluc2VydChidXR0b25zLCBFdGhlcmVhbEFjdW1lbikKCglFdGhlcmVhbEFjdW1lbkVuYWJsZWQgPSBmYWxzZQoKCUV0aGVyZWFsQWN1bWVuLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgRXRoZXJlYWxBY3VtZW5FbmFibGVkID09IGZhbHNlIHRoZW4KCQkJRXRoZXJlYWxBY3VtZW5FbmFibGVkID0gdHJ1ZQoJCQlFdGhlcmVhbEFjdW1lbi5UZXh0ID0gIkV0aGVyZWFsIEFjdW1lbiBIYWNrIChPbikiCgkJZWxzZQoJCQlFdGhlcmVhbEFjdW1lbkVuYWJsZWQgPSBmYWxzZQoJCQlFdGhlcmVhbEFjdW1lbi5UZXh0ID0gIkV0aGVyZWFsIEFjdW1lbiBIYWNrIChPZmYpIgoJCWVuZAoJZW5kKQoKCS0tIFRveGljIEJhc2lsaXNrIEhhY2sKCglsb2NhbCBUb3hpY0Jhc2lsaXNrID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCVRveGljQmFzaWxpc2suTmFtZSA9ICJUb3hpY0Jhc2lsaXNrIgoJVG94aWNCYXNpbGlzay5UZXh0ID0gIlRveGljIEJhc2lsaXNrIEhhY2sgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgVG94aWNCYXNpbGlzaykKCglUb3hpY0Jhc2lsaXNrRW5hYmxlZCA9IGZhbHNlCgoJVG94aWNCYXNpbGlzay5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIFRveGljQmFzaWxpc2tFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJVG94aWNCYXNpbGlza0VuYWJsZWQgPSB0cnVlCgkJCVRveGljQmFzaWxpc2suVGV4dCA9ICJUb3hpYyBCYXNpbGlzayBIYWNrIChPbikiCgkJZWxzZQoJCQlUb3hpY0Jhc2lsaXNrRW5hYmxlZCA9IGZhbHNlCgkJCVRveGljQmFzaWxpc2suVGV4dCA9ICJUb3hpYyBCYXNpbGlzayBIYWNrIChPZmYpIgoJCWVuZAoJZW5kKQoKCS0tIEFyY2FuZSBHdWFyZGlhbiBIYWNrCgoJbG9jYWwgQXJjYW5lR3VhcmRpYW4gPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJQXJjYW5lR3VhcmRpYW4uTmFtZSA9ICJBcmNhbmVHdWFyZGlhbiIKCUFyY2FuZUd1YXJkaWFuLlRleHQgPSAiQXJjYW5lIEd1YXJkaWFuIEhhY2sgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgQXJjYW5lR3VhcmRpYW4pCgoJQXJjYW5lR3VhcmRpYW5FbmFibGVkID0gZmFsc2UKCglBcmNhbmVHdWFyZGlhbi5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIEFyY2FuZUd1YXJkaWFuRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCUFyY2FuZUd1YXJkaWFuRW5hYmxlZCA9IHRydWUKCQkJQXJjYW5lR3VhcmRpYW4uVGV4dCA9ICJBcmNhbmUgR3VhcmRpYW4gSGFjayAoT24pIgoJCWVsc2UKCQkJQXJjYW5lR3VhcmRpYW5FbmFibGVkID0gZmFsc2UKCQkJQXJjYW5lR3VhcmRpYW4uVGV4dCA9ICJBcmNhbmUgR3VhcmRpYW4gSGFjayAoT2ZmKSIKCQllbmQKCWVuZCkKCgktLSBWaXJ0dWFsIFpvbmUgSGFjawoKCWxvY2FsIFZpcnR1YWxab25lID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCVZpcnR1YWxab25lLk5hbWUgPSAiVmlydHVhbFpvbmUiCglWaXJ0dWFsWm9uZS5UZXh0ID0gIlZpcnR1YWwgWm9uZSBIYWNrIChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIFZpcnR1YWxab25lKQoKCVZpcnR1YWxab25lRW5hYmxlZCA9IGZhbHNlCgoJVmlydHVhbFpvbmUuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBWaXJ0dWFsWm9uZUVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlWaXJ0dWFsWm9uZUVuYWJsZWQgPSB0cnVlCgkJCVZpcnR1YWxab25lLlRleHQgPSAiVmlydHVhbCBab25lIEhhY2sgKE9uKSIKCQllbHNlCgkJCVZpcnR1YWxab25lRW5hYmxlZCA9IGZhbHNlCgkJCVZpcnR1YWxab25lLlRleHQgPSAiVmlydHVhbCBab25lIEhhY2sgKE9mZikiCgkJZW5kCgllbmQpCgoJLS0tLSBNaXNjZWxsYW5lb3VzCgktLSBTaGFyZCBDb2xvcnMKCglsb2NhbCBSYW5kb21Db2xvcnMgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJUmFuZG9tQ29sb3JzLk5hbWUgPSAiUmFuZG9tQ29sb3JzIgoJUmFuZG9tQ29sb3JzLlRleHQgPSAiUmFuZG9tIFNoYXJkIENvbG9ycyAoT2ZmKSIKCXRhYmxlLmluc2VydChidXR0b25zLCBSYW5kb21Db2xvcnMpCgoJbG9jYWwgQ29sb3JzTGlzdCA9IHsiUmVhbGx5IHJlZCIsICJSZWFsbHkgYmx1ZSIsICJOZXcgWWVsbGVyIiwgIkhvdCBwaW5rIiwgIlJveWFsIHB1cnBsZSIsICJMaW1lIGdyZWVuIiwgIkRlZXAgb3JhbmdlIiwgIlRvb3RocGFzdGUiLCAiSW5zdGl0dXRpb25hbCB3aGl0ZSJ9Cglsb2NhbCBTaGFyZENvbG9yRW5hYmxlZCA9IGZhbHNlCgoJbG9jYWwgZnVuY3Rpb24gc2hhcmRSYW5kb21pemVyKCkKCQlmb3IgaSwgY2hpbGQgaW4gcGFpcnMoZ2FtZS5Xb3Jrc3BhY2VbIi5JZ25vcmUiXVsiLlNlcnZlckVmZmVjdHMiXTpHZXRDaGlsZHJlbigpKSBkbwoJCQlpZiBub3QgY2hpbGQuTmFtZSA9PSAiU2hhcmQiIHRoZW4gcHJpbnQoIkNoaWxkIG5vdCBhIFNoYXJkIikKCQkJZWxzZWlmIGNoaWxkLk5hbWUgPT0gIlNoYXJkIiBhbmQgbm90IGNoaWxkOkZpbmRGaXJzdENoaWxkKCJDQ0Jvb2wiKSB0aGVuCgkJCQl4cGNhbGwoZnVuY3Rpb24oKQoJCQkJCWNoaWxkLkJyaWNrQ29sb3IgPSBCcmlja0NvbG9yLm5ldyhDb2xvcnNMaXN0W21hdGgucmFuZG9tKDEsOSldKQoJCQkJZW5kLCBmdW5jdGlvbihlKQoJCQkJCXByaW50KCJFbmNvdW50ZXJlZCBhbiBlcnJvciEgeHBjYWxsIHNheXM6IiwgZSkKCQkJCQl3YXJuKCJbdHJhY2ViYWNrXSAiLCBkZWJ1Zy50cmFjZWJhY2soKSkKCQkJCWVuZCkKCQkJCWxvY2FsIENDQm9vbCA9IEluc3RhbmNlLm5ldygiQm9vbFZhbHVlIikKCQkJCUNDQm9vbC5OYW1lID0gIkNDQm9vbCIKCQkJCUNDQm9vbC5QYXJlbnQgPSBjaGlsZAoJCQkJQ0NCb29sLlZhbHVlID0gdHJ1ZQoJCQllbHNlaWYgY2hpbGQuTmFtZSA9PSAiU2hhcmQiIGFuZCBjaGlsZDpGaW5kRmlyc3RDaGlsZCgiQ0NCb29sIikuVmFsdWUgdGhlbiBlbmQKCQllbmQKCWVuZAoKCVJhbmRvbUNvbG9ycy5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIFNoYXJkQ29sb3JFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJU2hhcmRDb2xvckVuYWJsZWQgPSB0cnVlCgkJCXByaW50KCJUdXJuZWQgb24gUmFuZG9tIFNoYXJkIENvbG9ycyIpCgkJCVJhbmRvbUNvbG9ycy5UZXh0ID0gIlJhbmRvbSBTaGFyZCBDb2xvcnMgKE9uKSIKCQkJd2hpbGUgU2hhcmRDb2xvckVuYWJsZWQgZG8KCQkJCXNoYXJkUmFuZG9taXplcigpCgkJCQl3YWl0KDEpCgkJCWVuZAoJCWVsc2UKCQkJU2hhcmRDb2xvckVuYWJsZWQgPSBmYWxzZQoJCQlSYW5kb21Db2xvcnMuVGV4dCA9ICJSYW5kb20gU2hhcmQgQ29sb3JzIChPZmYpIgoJCWVuZAkKCWVuZCkKCgktLSBBbnRpLUxhZwoKCWxvY2FsIEFudGlMYWcgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJQW50aUxhZy5OYW1lID0gIkFudGlMYWciCglBbnRpTGFnLlRleHQgPSAiQW50aS1MYWcgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgQW50aUxhZykKCglBbnRpTGFnRW5hYmxlZCA9IGZhbHNlCgoJZnVuY3Rpb24gcmVtb3ZlTGFnKCkKCQlmb3IgaSwgdiBpbiBwYWlycyhnYW1lLldvcmtzcGFjZVsnLklnbm9yZSddWycuTG9jYWxFZmZlY3RzJ106R2V0Q2hpbGRyZW4oKSkgZG8KCQkJaWYgdjpGaW5kRmlyc3RDaGlsZCgiTWVzaCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJEMSIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJEMiIpIHRoZW4KCQkJCWlmIHYuRDEuVGV4dHVyZSA9PSAicmJ4YXNzZXRpZDovLzI2NzE2MjI2NDYiIHRoZW4KCQkJCQl2OkRlc3Ryb3koKQoJCQkJZW5kCgkJCWVsc2VpZiB2OkZpbmRGaXJzdENoaWxkKCJGcm9udERlY2FsIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkJhY2tEZWNhbCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJTcGVjaWFsTWVzaCIpIHRoZW4KCQkJCWlmIHYuRnJvbnREZWNhbC5UZXh0dXJlID09ICJyYnhhc3NldGlkOi8vOTc5MDA0MjkxIiB0aGVuCgkJCQkJdjpEZXN0cm95KCkKCQkJCWVuZAoJCQllbHNlaWYgKHYuTmFtZSA9PSAiT3JiaXRhbFN0cmlrZSIpIG9yICh2Lk5hbWUgPT0gIkJvbHRQYXJ0Iikgb3IgKHN0cmluZy5zdWIodi5OYW1lLCAxLCAxMCkgPT0gIlNvdW5kX1RlY2giKSB0aGVuCgkJCQl2OkRlc3Ryb3koKQoJCQllbHNlaWYgKHYuTmFtZSA9PSAiTGlnaHREaXNjIikgdGhlbgoJCQkJdjpEZXN0cm95KCkKCQkJZW5kCgkJZW5kCgoJCWZvciBpLCB2IGluIHBhaXJzKGdhbWUuV29ya3NwYWNlWycuSWdub3JlJ11bJy5BdHRhY2tzJ106R2V0Q2hpbGRyZW4oKSkgZG8KCQkJaWYgdi5Db2xvciA9PSBDb2xvcjMuZnJvbVJHQigyNTUsIDAsIDApIHRoZW4KCQkJCWlmIHYuTWVzaC5NZXNoVHlwZSA9PSAiU3BoZXJlIiB0aGVuCgkJCQkJd2FpdCgpCgkJCQkJdjpEZXN0cm95KCkKCQkJCWVuZAoJCQllbmQKCQllbmQKCgkJZm9yIGksIHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzOkdldFBsYXllcnMoKSkgZG8KCQkJZm9yIF8sIHggaW4gcGFpcnModi5DaGFyYWN0ZXI6R2V0Q2hpbGRyZW4oKSkgZG8KCQkJCWlmIHguTmFtZSA9PSAiQW5nZWxTd29yZCIgdGhlbgoJCQkJCXg6RGVzdHJveSgpCgkJCQllbmQKCQkJZW5kCgkJZW5kCgllbmQKCglnYW1lLldvcmtzcGFjZS5EZXNjZW5kYW50QWRkZWQ6Y29ubmVjdChmdW5jdGlvbih2KQoJCWlmIEFudGlMYWdFbmFibGVkIHRoZW4KCQkJaWYgdjpGaW5kRmlyc3RDaGlsZCgiTWVzaCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJEMSIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJEMiIpIHRoZW4KCQkJCWlmIHYuRDEuVGV4dHVyZSA9PSAicmJ4YXNzZXRpZDovLzI2NzE2MjI2NDYiIHRoZW4KCQkJCQl3YWl0KCkKCQkJCQl2OkRlc3Ryb3koKQoJCQkJZW5kCgkJCWVsc2VpZiB2Lk5hbWUgPT0gIkFuZ2VsU3dvcmQiIHRoZW4KCQkJCXdhaXQoKQoJCQkJdjpEZXN0cm95KCkKCQkJZWxzZWlmIHY6RmluZEZpcnN0Q2hpbGQoIkZyb250RGVjYWwiKSB0aGVuCgkJCQlpZiB2LkZyb250RGVjYWwuVGV4dHVyZSA9PSAicmJ4YXNzZXRpZDovLzk3OTAwNDI5MSIgdGhlbgoJCQkJCXdhaXQoKQoJCQkJCXY6RGVzdHJveSgpCgkJCQllbmQKCQkJZWxzZWlmIHYuQ29sb3IgPT0gQ29sb3IzLmZyb21SR0IoMjU1LCAwLCAwKSB0aGVuCgkJCQlpZiB2Lk1lc2guTWVzaFR5cGUgPT0gIlNwaGVyZSIgdGhlbgoJCQkJCXdhaXQoKQoJCQkJCXY6RGVzdHJveSgpCgkJCQllbmQKCQkJZWxzZWlmICh2Lk5hbWUgPT0gIk9yYml0YWxTdHJpa2UiKSBvciAodi5OYW1lID09ICJCb2x0UGFydCIpIG9yIChzdHJpbmcuc3ViKHYuTmFtZSwgMSwgMTApID09ICJTb3VuZF9UZWNoIikgdGhlbgoJCQkJd2FpdCgpCgkJCQl2OkRlc3Ryb3koKQoJCQllbmQKCQllbmQKCWVuZCkKCglBbnRpTGFnLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgQW50aUxhZ0VuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlBbnRpTGFnRW5hYmxlZCA9IHRydWUKCQkJQW50aUxhZy5UZXh0ID0gIkFudGktTGFnIChPbikiCgkJCXJlbW92ZUxhZygpCgkJZWxzZQoJCQlBbnRpTGFnRW5hYmxlZCA9IGZhbHNlCgkJCUFudGlMYWcuVGV4dCA9ICJBbnRpLUxhZyAoT2ZmKSIKCQllbmQKCWVuZCkKCgktLSBJZ25vcmUgUGh5c2ljcwoKCWxvY2FsIElnbm9yZVBoeXNpY3MgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJSWdub3JlUGh5c2ljcy5OYW1lID0gImZJZ25vcmVQaHlzaWNzIgoJSWdub3JlUGh5c2ljcy5UZXh0ID0gIklnbm9yZSBQaHlzaWNzIChPZmYpIFtaXSIKCXRhYmxlLmluc2VydChidXR0b25zLCBJZ25vcmVQaHlzaWNzKQoKCUlnbm9yZVBoeXNpY3NFbmFibGVkID0gZmFsc2UKCglsb2NhbCBmdW5jdGlvbiBpbml0aWFsTnVsbGlmeUZvcmNlcygpCgkJZm9yIGksIHYgaW4gcGFpcnMocGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0OkdldENoaWxkcmVuKCkpIGRvCgkJCWlmIHY6SXNBKCJCb2R5R3lybyIpIHRoZW4KCQkJCXdhaXQoKQoJCQkJdjpEZXN0cm95KCkKCQkJZWxzZWlmIHY6SXNBKCJCb2R5UG9zaXRpb24iKSB0aGVuCgkJCQl3YWl0KCkKCQkJCXY6RGVzdHJveSgpCgkJCWVsc2VpZiB2OklzQSgiQm9keVZlbG9jaXR5IikgdGhlbgoJCQkJd2FpdCgpCgkJCQl2OkRlc3Ryb3koKQoJCQllbHNlaWYgdjpJc0EoIkJvZHlBbmd1bGFyVmVsb2NpdHkiKSB0aGVuCgkJCQl3YWl0KCkKCQkJCXY6RGVzdHJveSgpCgkJCWVsc2VpZiB2OklzQSgiQm9keUZvcmNlIikgdGhlbgoJCQkJd2FpdCgpCgkJCQl2OkRlc3Ryb3koKQoJCQllbHNlaWYgdjpJc0EoIkJvZHlUaHJ1c3QiKSB0aGVuCgkJCQl3YWl0KCkKCQkJCXY6RGVzdHJveSgpCgkJCWVsc2VpZiB2OklzQSgiUm9ja2V0UHJvcHVsc2lvbiIpIHRoZW4KCQkJCXdhaXQoKQoJCQkJdjpEZXN0cm95KCkKCQkJZW5kCgkJZW5kCgoJCWZvciBpLCB2IGluIHBhaXJzKHBsYXllci5DaGFyYWN0ZXIuRmxpcHNIb2xkZXI6R2V0Q2hpbGRyZW4oKSkgZG8KCQkJaWYgdjpJc0EoIkJvZHlHeXJvIikgdGhlbgoJCQkJd2FpdCgpCgkJCQl2OkRlc3Ryb3koKQoJCQllbHNlaWYgdjpJc0EoIkJvZHlQb3NpdGlvbiIpIHRoZW4KCQkJCXdhaXQoKQoJCQkJdjpEZXN0cm95KCkKCQkJZWxzZWlmIHY6SXNBKCJCb2R5VmVsb2NpdHkiKSB0aGVuCgkJCQl3YWl0KCkKCQkJCXY6RGVzdHJveSgpCgkJCWVsc2VpZiB2OklzQSgiQm9keUFuZ3VsYXJWZWxvY2l0eSIpIHRoZW4KCQkJCXdhaXQoKQoJCQkJdjpEZXN0cm95KCkKCQkJZWxzZWlmIHY6SXNBKCJCb2R5Rm9yY2UiKSB0aGVuCgkJCQl3YWl0KCkKCQkJCXY6RGVzdHJveSgpCgkJCWVsc2VpZiB2OklzQSgiQm9keVRocnVzdCIpIHRoZW4KCQkJCXdhaXQoKQoJCQkJdjpEZXN0cm95KCkKCQkJZWxzZWlmIHY6SXNBKCJSb2NrZXRQcm9wdWxzaW9uIikgdGhlbgoJCQkJd2FpdCgpCgkJCQl2OkRlc3Ryb3koKQoJCQllbmQKCQllbmQKCWVuZAoKCWxvY2FsIGZ1bmN0aW9uIEFmdGVyTnVsbGlmeUZvcmNlcygpCgkJcGxheWVyLkNoYXJhY3Rlci5EZXNjZW5kYW50QWRkZWQ6Y29ubmVjdChmdW5jdGlvbih2KQoJCQlpZiBJZ25vcmVQaHlzaWNzRW5hYmxlZCB0aGVuCgkJCQlpZiB2OklzQSgiQm9keUd5cm8iKSB0aGVuCgkJCQkJd2FpdCgpCgkJCQkJdjpEZXN0cm95KCkKCQkJCWVsc2VpZiB2OklzQSgiQm9keVBvc2l0aW9uIikgdGhlbgoJCQkJCXdhaXQoKQoJCQkJCXY6RGVzdHJveSgpCgkJCQllbHNlaWYgdjpJc0EoIkJvZHlWZWxvY2l0eSIpIHRoZW4KCQkJCQl3YWl0KCkKCQkJCQl2OkRlc3Ryb3koKQoJCQkJZWxzZWlmIHY6SXNBKCJCb2R5QW5ndWxhclZlbG9jaXR5IikgdGhlbgoJCQkJCXdhaXQoKQoJCQkJCXY6RGVzdHJveSgpCgkJCQllbHNlaWYgdjpJc0EoIkJvZHlGb3JjZSIpIHRoZW4KCQkJCQl3YWl0KCkKCQkJCQl2OkRlc3Ryb3koKQoJCQkJZWxzZWlmIHY6SXNBKCJCb2R5VGhydXN0IikgdGhlbgoJCQkJCXdhaXQoKQoJCQkJCXY6RGVzdHJveSgpCgkJCQllbHNlaWYgdjpJc0EoIlJvY2tldFByb3B1bHNpb24iKSB0aGVuCgkJCQkJd2FpdCgpCgkJCQkJdjpEZXN0cm95KCkKCQkJCWVuZAoJCQllbmQKCQllbmQpCgllbmQKCglmdW5jdGlvbiBiZWdpbk51bGxpZnlGb3JjZXMoKQoJCWlmIElnbm9yZVBoeXNpY3NFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJSWdub3JlUGh5c2ljc0VuYWJsZWQgPSB0cnVlCgkJCUlnbm9yZVBoeXNpY3MuVGV4dCA9ICJJZ25vcmUgUGh5c2ljcyAoT24pIFtaXSIKCQkJaW5pdGlhbE51bGxpZnlGb3JjZXMoKQoJCQlBZnRlck51bGxpZnlGb3JjZXMoKQoJCQl3aGlsZSBJZ25vcmVQaHlzaWNzRW5hYmxlZCBkbwoJCQkJd2FpdCgpCgkJCQlpZiBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkLkhlYWx0aCA9PSAwIHRoZW4KCQkJCQlyZXBlYXQgd2FpdCgpIHVudGlsIHBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQuSGVhbHRoIH49IDAKCQkJCQlBZnRlck51bGxpZnlGb3JjZXMoKQoJCQkJZW5kCgkJCWVuZAoJCWVsc2UKCQkJSWdub3JlUGh5c2ljc0VuYWJsZWQgPSBmYWxzZQoJCQlJZ25vcmVQaHlzaWNzLlRleHQgPSAiSWdub3JlIFBoeXNpY3MgKE9mZikgW1pdIgoJCWVuZAoJZW5kCgoJSWdub3JlUGh5c2ljcy5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoYmVnaW5OdWxsaWZ5Rm9yY2VzKQoKCS0tIEFudGktR3Jhdml0eQoKCWxvY2FsIEFudGlHcmF2aXR5ID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCUFudGlHcmF2aXR5Lk5hbWUgPSAiQW50aUdyYXZpdHkiCglBbnRpR3Jhdml0eS5UZXh0ID0gIkFudGktR3Jhdml0eSAoT2ZmKSBbR10iCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgQW50aUdyYXZpdHkpCgoJQW50aUdyYXZpdHlFbmFibGVkID0gZmFsc2UKCglmdW5jdGlvbiBBbnRpR3Jhdml0eUZ1bmMoKQoJCWlmIEFudGlHcmF2aXR5RW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCUFudGlHcmF2aXR5RW5hYmxlZCA9IHRydWUKCQkJQW50aUdyYXZpdHkuVGV4dCA9ICJBbnRpLUdyYXZpdHkgKE9uKSBbR10iCgkJCWxvY2FsIEJvZHlGb3JjZSA9IEluc3RhbmNlLm5ldygiQm9keUZvcmNlIikKCQkJQm9keUZvcmNlLlBhcmVudCA9IHBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydAoJCQlCb2R5Rm9yY2UuTmFtZSA9ICJBbnRpR3Jhdml0eUZvcmNlIgoJCQlCb2R5Rm9yY2UuRm9yY2UgPSBWZWN0b3IzLm5ldygwLCA1MDAwLCAwKQoJCWVsc2UKCQkJQW50aUdyYXZpdHlFbmFibGVkID0gZmFsc2UKCQkJQW50aUdyYXZpdHkuVGV4dCA9ICJBbnRpLUdyYXZpdHkgKE9mZikgW0ddIgoJCQlpZiBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQ6RmluZEZpcnN0Q2hpbGQoIkFudGlHcmF2aXR5Rm9yY2UiKSB0aGVuCgkJCQlwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQW50aUdyYXZpdHlGb3JjZTpEZXN0cm95KCkKCQkJZW5kCgkJZW5kCgllbmQKCglBbnRpR3Jhdml0eS5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoQW50aUdyYXZpdHlGdW5jKQoKCS0tIENsaWNrLVRQCgoJbG9jYWwgQ2xpY2tUUCA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglDbGlja1RQLk5hbWUgPSAiQ2xpY2tUUCIKCUNsaWNrVFAuVGV4dCA9ICJDbGljay1UUCAoT2ZmKSBbSiB0byB0cCB0byBtb3VzZV0iCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgQ2xpY2tUUCkKCglDbGlja1RQRW5hYmxlZCA9IGZhbHNlCgoJQ2xpY2tUUC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIENsaWNrVFBFbmFibGVkID09IHRydWUgdGhlbgoJCQlDbGlja1RQRW5hYmxlZCA9IGZhbHNlCgkJCUNsaWNrVFAuVGV4dCA9ICJDbGljay1UUCAoT2ZmKSBbSiB0byBDbGljay1UUF0iCgkJZWxzZQoJCQlDbGlja1RQRW5hYmxlZCA9IHRydWUKCQkJQ2xpY2tUUC5UZXh0ID0gIkNsaWNrLVRQIChPbikgW0ogdG8gQ2xpY2stVFBdIgoJCWVuZAoJZW5kKQoKCWZ1bmN0aW9uIGNsaWNrdHAocG9zaXRpb24pCgkJaWYgcGxheWVyID09IG5pbCBvciBwbGF5ZXIuQ2hhcmFjdGVyID09IG5pbCB0aGVuIHJldHVybiBlbmQKCQlwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gQ0ZyYW1lLm5ldyhWZWN0b3IzLm5ldyhwb3NpdGlvbi54LCBwb3NpdGlvbi55ICsgMywgcG9zaXRpb24ueikpCgllbmQKCgktLSBGcmVlemUKCglsb2NhbCBGcmVlemUgPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQoJRnJlZXplLk5hbWUgPSAiRnJlZXplIgoJRnJlZXplLlRleHQgPSAiRnJlZXplIChPZmYpIFtGXSIKCXRhYmxlLmluc2VydChidXR0b25zLCBGcmVlemUpCgoJRnJlZXplRW5hYmxlZCA9IGZhbHNlCgoJZnVuY3Rpb24gRnJlZXplRnVuYygpCgkJaWYgRnJlZXplRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCUZyZWV6ZUVuYWJsZWQgPSB0cnVlCgkJCUZyZWV6ZS5UZXh0ID0gIkZyZWV6ZSAoT24pIFtGXSIKCQkJcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkFuY2hvcmVkID0gdHJ1ZQoJCWVsc2UKCQkJRnJlZXplRW5hYmxlZCA9IGZhbHNlCgkJCUZyZWV6ZS5UZXh0ID0gIkZyZWV6ZSAoT2ZmKSBbRl0iCgkJCXBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5BbmNob3JlZCA9IGZhbHNlCgkJZW5kCgllbmQKCglGcmVlemUuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KEZyZWV6ZUZ1bmMpCgoJLS0gSW5maW5pdGUgU3ByaW50CgoJbG9jYWwgSW5mU3ByaW50ID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCUluZlNwcmludC5OYW1lID0gIkluZlNwcmludCIKCUluZlNwcmludC5UZXh0ID0gIihHKSBJbmZpbml0ZSBTcHJpbnQgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgSW5mU3ByaW50KQoKCWxvY2FsIEluZlNwcmludEVuYWJsZWQgPSBmYWxzZQoKCWxvY2FsIGZ1bmN0aW9uIFNwcmludFJlbW90ZSgpCgkJd2hpbGUgd2FpdCguNSkgZG8KCQkJcmVwZWF0IHdhaXQoKSB1bnRpbCBwbGF5ZXIuQ2hhcmFjdGVyIH49IG5pbAoJCQlsb2NhbCBhcmdzID0gewoJCQkJWzFdID0gIlJ1bm5pbmciLAoJCQkJWzJdID0gZmFsc2UsCgkJCX0KCQkJZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuUGxheWVyRGF0YTpGaXJlU2VydmVyKHVucGFjayhhcmdzKSkKCQllbmQKCWVuZAoKCUluZlNwcmludC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIGlzR29sZCBvciBpc01hc3RlciB0aGVuCgkJCWlmIG5vdCBJbmZTcHJpbnRFbmFibGVkIHRoZW4KCQkJCUluZlNwcmludEVuYWJsZWQgPSB0cnVlCgkJCQlJbmZTcHJpbnQuVGV4dCA9ICIoRykgSW5maW5pdGUgU3ByaW50IChPbikiCgkJCQlTcHJpbnRSZW1vdGUoKQoJCQllbHNlCgkJCQlJbmZTcHJpbnRFbmFibGVkID0gZmFsc2UKCQkJCUluZlNwcmludC5UZXh0ID0gIihHKSBJbmZpbml0ZSBTcHJpbnQgKE9mZikiCgkJCWVuZAkJCQkKCQllbmQKCWVuZCkKCgktLSBMb25nIEZsYXNoCgoJbG9jYWwgTEZsYXNoID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCUxGbGFzaC5OYW1lID0gIkZsYXNoIgoJTEZsYXNoLlRleHQgPSAiTG9uZyBGbGFzaCAoT2ZmKSBbYCB0byB1c2VdIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIExGbGFzaCkKCglGbGFzaEVuYWJsZWQgPSBmYWxzZQoKCWZ1bmN0aW9uIGxvbmdmbGFzaCgpCgkJbG9jYWwgbW91c2Vwb3MgPSBtb3VzZS5IaXQucAoJCWxvY2FsIGFyZ3MgPSB7CgkJCVsxXSA9ICJTdG9ybSIsCgkJCVsyXSA9ICJMaWdodG5pbmcgRmxhc2giCgkJfQoJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCWxvY2FsIGFyZ3MgPSB7CgkJCVsxXSA9ICJTdG9ybSIsCgkJCVsyXSA9ICJMaWdodG5pbmcgRmxhc2giLAoJCQlbM10gPSB7CgkJCQlbIkVuZCJdID0gbW91c2Vwb3MsCgkJCQlbIk9yaWdpbiJdID0gcGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUucAoJCQl9CgkJfQoJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCgllbmQKCglMRmxhc2guTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBGbGFzaEVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlGbGFzaEVuYWJsZWQgPSB0cnVlCgkJCUxGbGFzaC5UZXh0ID0gIkxvbmcgRmxhc2ggKE9uKSBbYCB0byB1c2VdIgoJCWVsc2UKCQkJRmxhc2hFbmFibGVkID0gZmFsc2UKCQkJTEZsYXNoLlRleHQgPSAiTG9uZyBGbGFzaCAoT2ZmKSBbYCB0byB1c2VdIgoJCWVuZAoJZW5kKQoKCS0tIFZpZXcgVGFyZ2V0CgoJbG9jYWwgVmlld1RhcmdldCA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglWaWV3VGFyZ2V0Lk5hbWUgPSAiVmlld1RhcmdldCIKCVZpZXdUYXJnZXQuVGV4dCA9ICJWaWV3IFRhcmdldCAoT2ZmKSBbVl0iCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgVmlld1RhcmdldCkKCgl2aWV3aW5nID0gZmFsc2UKCglmdW5jdGlvbiB2aWV3KCkKCQlpZiB0YXJnZXQgfj0gcGxheWVyLk5hbWUgdGhlbgoJCQlpZiB2aWV3aW5nID09IGZhbHNlIHRoZW4KCQkJCXZpZXdpbmcgPSB0cnVlCgkJCQlnYW1lLldvcmtzcGFjZS5DYW1lcmEuQ2FtZXJhU3ViamVjdCA9IGdhbWUuUGxheWVyc1t0YXJnZXRdLkNoYXJhY3Rlci5IdW1hbm9pZAoJCQkJVmlld1RhcmdldC5UZXh0ID0gIlZpZXcgVGFyZ2V0IChPbikgW1ZdIgoJCQllbHNlCgkJCQl2aWV3aW5nID0gZmFsc2UKCQkJCWdhbWUuV29ya3NwYWNlLkNhbWVyYS5DYW1lcmFTdWJqZWN0ID0gcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZAoJCQkJVmlld1RhcmdldC5UZXh0ID0gIlZpZXcgVGFyZ2V0IChPZmYpIFtWXSIKCQkJZW5kCgkJZWxzZWlmIHZpZXdpbmcgPT0gdHJ1ZSB0aGVuIAoJCQl2aWV3aW5nID0gZmFsc2UKCQkJZ2FtZS5Xb3Jrc3BhY2UuQ2FtZXJhLkNhbWVyYVN1YmplY3QgPSBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkCgkJCVZpZXdUYXJnZXQuVGV4dCA9ICJWaWV3IFRhcmdldCAoT2ZmKSBbVl0iCgkJZW5kCgllbmQKCglWaWV3VGFyZ2V0Lk1vdXNlQnV0dG9uMURvd246Y29ubmVjdCh2aWV3KQoKCS0tIFRlbGVwb3J0IHRvIFRhcmdldAoKCWxvY2FsIFRQVGFyZ2V0ID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCVRQVGFyZ2V0Lk5hbWUgPSAiVFBUYXJnZXQiCglUUFRhcmdldC5UZXh0ID0gIlRlbGVwb3J0IFRvIFRhcmdldCAoT2ZmKSBbVV0iCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgVFBUYXJnZXQpCgoJVFBUYXJnZXRFbmFibGVkID0gZmFsc2UKCglsb2NhbCBmdW5jdGlvbiBUUFRvVGFyZ2V0KCkKCQlpZiBUUFRhcmdldEVuYWJsZWQgYW5kIHRhcmdldCB+PSBwbGF5ZXIuTmFtZSB0aGVuCgkJCXJlcGVhdCB3YWl0KCkgdW50aWwgZ2V0SFJQKHBsYXllci5DaGFyYWN0ZXIpIGFuZCBnZXRIUlAoZ2FtZS5QbGF5ZXJzW3RhcmdldF0uQ2hhcmFjdGVyKQoKCQkJZ2V0SFJQKHBsYXllci5DaGFyYWN0ZXIpLkNGcmFtZSA9IGdldEhSUChnYW1lLlBsYXllcnNbdGFyZ2V0XS5DaGFyYWN0ZXIpLkNGcmFtZQoJCWVuZAoJZW5kCgoJVFBUYXJnZXQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBUUFRhcmdldEVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlUUFRhcmdldEVuYWJsZWQgPSB0cnVlCgkJCVRQVGFyZ2V0LlRleHQgPSAiVGVsZXBvcnQgVG8gVGFyZ2V0IChPbikgW1VdIgoJCWVsc2UKCQkJVFBUYXJnZXRFbmFibGVkID0gZmFsc2UKCQkJVFBUYXJnZXQuVGV4dCA9ICJUZWxlcG9ydCBUbyBUYXJnZXQgKE9mZikgW1VdIgoJCWVuZAoJZW5kKQoKCS0tIExvb3AgVGVsZXBvcnQgdG8gVGFyZ2V0CgoJbG9jYWwgTG9vcFRQVGFyZ2V0ID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCUxvb3BUUFRhcmdldC5OYW1lID0gIkxvb3BUUFRhcmdldCIKCUxvb3BUUFRhcmdldC5UZXh0ID0gIkxvb3AgVGVsZXBvcnQgVG8gVGFyZ2V0IChPZmYpIgoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIExvb3BUUFRhcmdldCkKCglMb29wVFBUYXJnZXRFbmFibGVkID0gZmFsc2UKCglMb29wVFBUYXJnZXQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KGZ1bmN0aW9uKCkKCQlpZiBMb29wVFBUYXJnZXRFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJTG9vcFRQVGFyZ2V0RW5hYmxlZCA9IHRydWUKCQkJTG9vcFRQVGFyZ2V0LlRleHQgPSAiTG9vcCBUZWxlcG9ydCBUbyBUYXJnZXQgKE9uKSIKCQkJd2hpbGUgTG9vcFRQVGFyZ2V0RW5hYmxlZCBkbwoJCQkJd2FpdCgpCgkJCQlUUFRvVGFyZ2V0KCkKCQkJZW5kCgkJZWxzZQoJCQlMb29wVFBUYXJnZXRFbmFibGVkID0gZmFsc2UKCQkJTG9vcFRQVGFyZ2V0LlRleHQgPSAiTG9vcCBUZWxlcG9ydCBUbyBUYXJnZXQgKE9mZikiCgkJZW5kCgllbmQpCgoJLS0gU3RhbmRhcmQgRVNQCgoJbG9jYWwgRVNQID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9uIikKCUVTUC5OYW1lID0gIkVTUCIKCUVTUC5UZXh0ID0gIkVTUCAoT2ZmKSBbQl0iCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgRVNQKQoKCUVTUEVuYWJsZWQgPSBmYWxzZQoKCWxvY2FsIEhvbGRlciA9IEluc3RhbmNlLm5ldygiRm9sZGVyIiwgZ2FtZS5Db3JlR3VpKQoJSG9sZGVyLk5hbWUgPSAiRVNQIgoKCWxvY2FsIFVwZGF0ZUZ1bmNzID0ge30KCglsb2NhbCBCb3ggPSBJbnN0YW5jZS5uZXcoIkJveEhhbmRsZUFkb3JubWVudCIpCglCb3guTmFtZSA9ICJuaWxCb3hHIgoJQm94LlNpemUgPSBWZWN0b3IzLm5ldyg0LCA3LCA0KQoJQm94LkNvbG9yMyA9IENvbG9yMy5uZXcoMTAwIC8gMjU1LCAxMDAgLyAyNTUsIDEwMCAvIDI1NSkKCUJveC5UcmFuc3BhcmVuY3kgPSAwLjcKCUJveC5aSW5kZXggPSAwCglCb3guQWx3YXlzT25Ub3AgPSB0cnVlCglCb3guVmlzaWJsZSA9IHRydWUKCglsb2NhbCBOYW1lVGFnID0gSW5zdGFuY2UubmV3KCJCaWxsYm9hcmRHdWkiKQoJTmFtZVRhZy5OYW1lID0gIm5pbE5hbWVUYWdHIgoJTmFtZVRhZy5FbmFibGVkID0gdHJ1ZQoJTmFtZVRhZy5TaXplID0gVURpbTIubmV3KDAsIDIwMCwgMCwgNTApCglOYW1lVGFnLkFsd2F5c09uVG9wID0gdHJ1ZQoJTmFtZVRhZy5TdHVkc09mZnNldCA9IFZlY3RvcjMubmV3KDAsIDMuNiwgMCkKCglsb2NhbCBUYWcgPSBJbnN0YW5jZS5uZXcoIlRleHRMYWJlbCIsIE5hbWVUYWcpCglUYWcuTmFtZSA9ICJUYWciCglUYWcuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDEKCVRhZy5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCAtNTAsIDAsIDApCglUYWcuU2l6ZSA9IFVEaW0yLm5ldygwLCAzMDAsIDAsIDIwKQoJVGFnLlRleHRTaXplID0gMjAKCVRhZy5UZXh0Q29sb3IzID0gQ29sb3IzLm5ldygxMDAgLyAyNTUsIDEwMCAvIDI1NSwgMTAwIC8gMjU1KQoJVGFnLlRleHRTdHJva2VDb2xvcjMgPSBDb2xvcjMubmV3KDAgLyAyNTUsIDAgLyAyNTUsIDAgLyAyNTUpCglUYWcuVGV4dFN0cm9rZVRyYW5zcGFyZW5jeSA9IDAuNAoJVGFnLlRleHQgPSAiTm90IEF2YWlsYWJsZSIKCVRhZy5Gb250ID0gRW51bS5Gb250LlNhcnBhbmNoCglUYWcuVGV4dFNjYWxlZCA9IGZhbHNlCglUYWcuVGV4dFRyYW5zcGFyZW5jeSA9IDAKCglmdW5jdGlvbiBMb2FkQ2hhcmFjdGVyKHYpCgkJaWYgdiB+PSBwbGF5ZXIgdGhlbgoJCQlyZXBlYXQgd2FpdCgpIHVudGlsIHYuQ2hhcmFjdGVyIH49IG5pbAoJCQl2LkNoYXJhY3RlcjpXYWl0Rm9yQ2hpbGQoIkh1bWFub2lkIikKCQkJbG9jYWwgdkhvbGRlciA9IEhvbGRlcjpGaW5kRmlyc3RDaGlsZCh2Lk5hbWUpCgkJCXZIb2xkZXI6Q2xlYXJBbGxDaGlsZHJlbigpCgoJCQlsb2NhbCBiID0gQm94OkNsb25lKCkKCQkJYi5OYW1lID0gdi5OYW1lIC4uICJCb3giCgkJCWIuQWRvcm5lZSA9IHYuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQKCQkJYi5QYXJlbnQgPSB2SG9sZGVyCgoJCQlsb2NhbCB0ID0gTmFtZVRhZzpDbG9uZSgpCgkJCXQuTmFtZSA9IHYuTmFtZSAuLiAiTmFtZVRhZyIKCQkJdC5QYXJlbnQgPSB2SG9sZGVyCgkJCXQuQWRvcm5lZSA9IHYuQ2hhcmFjdGVyOldhaXRGb3JDaGlsZCgiSHVtYW5vaWRSb290UGFydCIsIDUpCgkJCWlmIG5vdCB0LkFkb3JuZWUgdGhlbgoJCQkJcmV0dXJuIFVubG9hZENoYXJhY3Rlcih2KQoJCQllbmQKCQkJdC5UYWcuVGV4dCA9IHYuTmFtZQoJCQl0LkVuYWJsZWQgPSB0cnVlCgkJCXdhaXQoKQoKCQkJbG9jYWwgZnVuY3Rpb24gVXBkYXRlTmFtZVRhZygpCgkJCQlpZiBub3QgcGNhbGwoZnVuY3Rpb24oKQoJCQkJCQktLSB2LkNoYXJhY3Rlci5IdW1hbm9pZC5EaXNwbGF5RGlzdGFuY2VUeXBlID0gRW51bS5IdW1hbm9pZERpc3BsYXlEaXN0YW5jZVR5cGUuTm9uZQoJCQkJCQlsb2NhbCBtYXhoID0gbWF0aC5jZWlsKHYuQ2hhcmFjdGVyLkh1bWFub2lkLk1heEhlYWx0aCAqIDEwKQoJCQkJCQlsb2NhbCBoID0gbWF0aC5jZWlsKHYuQ2hhcmFjdGVyLkh1bWFub2lkLkhlYWx0aCAqIDEwKQoJCQkJCQl0LlRhZy5UZXh0ID0gdi5OYW1lIC4uICJcbiIgLi4gKChtYXhoIH49IDAgYW5kIHRvc3RyaW5nKG1hdGguY2VpbCgoaCAvIG1heGgpICogMTAwKSkpIG9yICIwIikgLi4gIiUgICIgLi4gdG9zdHJpbmcoaCkgLi4gIi8iIC4uIHRvc3RyaW5nKG1heGgpCgkJCQkJCWlmIEVTUEVuYWJsZWQgdGhlbgoJCQkJCQkJdC5UYWcuVGV4dFRyYW5zcGFyZW5jeSA9IDAKCQkJCQkJCWIuVHJhbnNwYXJlbmN5ID0gMC43CgkJCQkJCWVsc2UKCQkJCQkJCXQuVGFnLlRleHRUcmFuc3BhcmVuY3kgPSAxCgkJCQkJCQliLlRyYW5zcGFyZW5jeSA9IDEKCQkJCQkJZW5kCgkJCQkJCWlmIGggLyBtYXhoID09IDEgdGhlbgoJCQkJCQkJdC5UYWcuVGV4dENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCgkJCQkJCQliLkNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCgkJCQkJCWVsc2VpZiBoIC8gbWF4aCA9PSAwIHRoZW4KCQkJCQkJCXQuVGFnLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigwLCAwLCAwKQoJCQkJCQkJYi5Db2xvcjMgPSBDb2xvcjMuZnJvbVJHQigwLCAwLCAwKQoJCQkJCQllbHNlCgkJCQkJCQl0LlRhZy5UZXh0Q29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTkyLCAoMTkyICogKGggLyBtYXhoKSksICgxOTIgKiAoaCAvIG1heGgpKSkKCQkJCQkJCWIuQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMTkyLCAoMTkyICogKGggLyBtYXhoKSksICgxOTIgKiAoaCAvIG1heGgpKSkKCQkJCQkJZW5kCgkJCQkJZW5kKSB0aGVuCgkJCQkJVXBkYXRlRnVuY3Nbdl0gPSBuaWwKCQkJCWVuZAoJCQllbmQKCQkJVXBkYXRlTmFtZVRhZygpCgkJCVVwZGF0ZUZ1bmNzW3ZdID0gVXBkYXRlTmFtZVRhZwoJCWVuZAoJZW5kCgoJZnVuY3Rpb24gVW5sb2FkQ2hhcmFjdGVyKHYpCgkJbG9jYWwgdkhvbGRlciA9IEhvbGRlcjpGaW5kRmlyc3RDaGlsZCh2Lk5hbWUpCgkJaWYgdkhvbGRlciBhbmQgKHZIb2xkZXI6RmluZEZpcnN0Q2hpbGQodi5OYW1lIC4uICJCb3giKSB+PSBuaWwgb3IgdkhvbGRlcjpGaW5kRmlyc3RDaGlsZCh2Lk5hbWUgLi4gIk5hbWVUYWciKSB+PSBuaWwpIHRoZW4KCQkJdkhvbGRlcjpDbGVhckFsbENoaWxkcmVuKCkKCQllbmQKCWVuZAoKCWZ1bmN0aW9uIExvYWRQbGF5ZXIodikKCQlpZiB2IH49IHBsYXllciB0aGVuCgkJCWxvY2FsIHZIb2xkZXIgPSBJbnN0YW5jZS5uZXcoIkZvbGRlciIsIEhvbGRlcikKCQkJdkhvbGRlci5OYW1lID0gdi5OYW1lCgkJCXYuQ2hhcmFjdGVyQWRkZWQ6Q29ubmVjdChmdW5jdGlvbigpCgkJCQlpZiBFU1BFbmFibGVkID09IHRydWUgdGhlbgoJCQkJCXBjYWxsKExvYWRDaGFyYWN0ZXIsIHYpCgkJCQllbmQKCQkJZW5kKQoJCQl2LkNoYXJhY3RlclJlbW92aW5nOkNvbm5lY3QoZnVuY3Rpb24oKQoJCQkJcGNhbGwoVW5sb2FkQ2hhcmFjdGVyLCB2KQoJCQllbmQpCgkJCUxvYWRDaGFyYWN0ZXIodikKCQllbmQKCWVuZAoKCWZ1bmN0aW9uIFVubG9hZFBsYXllcih2KQoJCVVubG9hZENoYXJhY3Rlcih2KQoJCWxvY2FsIHZIb2xkZXIgPSBIb2xkZXI6RmluZEZpcnN0Q2hpbGQodi5OYW1lKQoJCWlmIHZIb2xkZXIgdGhlbgoJCQl2SG9sZGVyOkRlc3Ryb3koKQoJCWVuZAoJZW5kCgoJZm9yIGksIHYgaW4gcGFpcnMocGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCgkJc3Bhd24oZnVuY3Rpb24oKSBwY2FsbChMb2FkUGxheWVyLCB2KSBlbmQpCgllbmQKCglwbGF5ZXJzLlBsYXllckFkZGVkOkNvbm5lY3QoZnVuY3Rpb24odikKCQlwY2FsbChMb2FkUGxheWVyLCB2KQoJZW5kKQoKCXBsYXllcnMuUGxheWVyUmVtb3Zpbmc6Q29ubmVjdChmdW5jdGlvbih2KQoJCXBjYWxsKFVubG9hZFBsYXllciwgdikKCWVuZCkKCglnYW1lLkl0ZW1DaGFuZ2VkOkNvbm5lY3QoZnVuY3Rpb24oaSkKCQlpZiBpOklzQSgiUGxheWVyIikgdGhlbgoJCQlpZiBIb2xkZXI6RmluZEZpcnN0Q2hpbGQoaS5OYW1lKSB0aGVuCgkJCQlVbmxvYWRDaGFyYWN0ZXIoaSkKCQkJCXdhaXQoKQoJCQkJTG9hZENoYXJhY3RlcihpKQoJCQllbmQKCQllbHNlaWYgaTpJc0EoIkh1bWFub2lkIikgYW5kIGkuUGFyZW50IHRoZW4KCQkJbG9jYWwgcCA9IHBsYXllcnM6R2V0UGxheWVyRnJvbUNoYXJhY3RlcihpLlBhcmVudCkKCQkJaWYgcCB+PSBwbGF5ZXIgYW5kIHAgfj0gbmlsIGFuZCBIb2xkZXI6RmluZEZpcnN0Q2hpbGQocC5OYW1lKSB0aGVuCgkJCQlwY2FsbChmdW5jdGlvbigpCgkJCQkJVXBkYXRlRnVuY3NbcF0oKQoJCQkJZW5kKQoJCQllbmQKCQllbmQKCWVuZCkKCglmdW5jdGlvbiB0b2dnbGVFU1AoKQoJCWlmIEVTUEVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQlpZiBHRVNQRW5hYmxlZCB0aGVuCgkJCQlHRVNQRW5hYmxlZCA9IGZhbHNlCgkJCQlFU1BFbmFibGVkID0gdHJ1ZQoJCQkJRVNQR29sZC5UZXh0ID0gIlN0YW5kYXJkIEVTUCBFbmFibGVkIgoJCQkJd2FpdCgxKQoJCQkJRVNQR29sZC5UZXh0ID0gIihHKSBEZXRhaWxlZCBFU1AgKE9mZikgW01dIgoJCQllbHNlCgkJCQlFU1BFbmFibGVkID0gdHJ1ZQoJCQllbmQKCQkJRVNQLlRleHQgPSAiRVNQIChPbikgW0JdIgoJCQlmb3IgaSx2IGluIHBhaXJzKHBsYXllcnM6R2V0UGxheWVycygpKSBkbwoJCQkJc3Bhd24oZnVuY3Rpb24oKSBwY2FsbChMb2FkUGxheWVyLCB2KSBlbmQpCgkJCWVuZAoJCWVsc2UKCQkJRVNQRW5hYmxlZCA9IGZhbHNlCgkJCUVTUC5UZXh0ID0gIkVTUCAoT2ZmKSBbQl0iCgkJCWZvciBpLCB2IGluIHBhaXJzKGdhbWUuUGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCgkJCQlzcGF3bihmdW5jdGlvbigpIHBjYWxsKFVubG9hZFBsYXllciwgdikgZW5kKQoJCQllbmQKCQllbmQKCWVuZAoKCUVTUC5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QodG9nZ2xlRVNQKQoKCS0tIEdvbGQgRVNQCgoJbG9jYWwgRVNQR29sZCA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglFU1BHb2xkLk5hbWUgPSAiRVNQR29sZCIKCWlmIGlzR29sZCBvciBpc01hc3RlciB0aGVuCgkJR0VTUEVuYWJsZWQgPSB0cnVlCgkJRVNQR29sZC5UZXh0ID0gIihHKSBEZXRhaWxlZCBFU1AgKE9uKSBbTV0iCgllbHNlCgkJR0VTUEVuYWJsZWQgPSBmYWxzZQoJCUVTUEdvbGQuVGV4dCA9ICIoRykgRGV0YWlsZWQgRVNQIChPZmYpIFtNXSIKCWVuZAoJdGFibGUuaW5zZXJ0KGJ1dHRvbnMsIEVTUEdvbGQpCgoJbG9jYWwgR0hvbGRlciA9IEluc3RhbmNlLm5ldygiRm9sZGVyIiwgZ2FtZS5Db3JlR3VpKQoJR0hvbGRlci5OYW1lID0gIkVTUEdvbGQiCgoJbG9jYWwgR1VwZGF0ZUZ1bmNzID0ge30KCglsb2NhbCBHQm94ID0gSW5zdGFuY2UubmV3KCJCb3hIYW5kbGVBZG9ybm1lbnQiKQoJR0JveC5OYW1lID0gIm5pbEJveEciCglHQm94LlNpemUgPSBWZWN0b3IzLm5ldyg0LCA3LCA0KQoJR0JveC5Db2xvcjMgPSBDb2xvcjMubmV3KDEwMCAvIDI1NSwgMTAwIC8gMjU1LCAxMDAgLyAyNTUpCglHQm94LlRyYW5zcGFyZW5jeSA9IDAuNwoJR0JveC5aSW5kZXggPSAwCglHQm94LkFsd2F5c09uVG9wID0gdHJ1ZQoJR0JveC5WaXNpYmxlID0gdHJ1ZQoKCWxvY2FsIEdOYW1lVGFnID0gSW5zdGFuY2UubmV3KCJCaWxsYm9hcmRHdWkiKQoJR05hbWVUYWcuTmFtZSA9ICJuaWxOYW1lVGFnRyIKCUdOYW1lVGFnLkVuYWJsZWQgPSB0cnVlCglHTmFtZVRhZy5TaXplID0gVURpbTIubmV3KDAsIDIwMCwgMCwgNTApCglHTmFtZVRhZy5BbHdheXNPblRvcCA9IHRydWUKCUdOYW1lVGFnLlN0dWRzT2Zmc2V0ID0gVmVjdG9yMy5uZXcoMCwgMy42LCAwKQoKCWxvY2FsIEdUYWcgPSBJbnN0YW5jZS5uZXcoIlRleHRMYWJlbCIsIEdOYW1lVGFnKQoJR1RhZy5OYW1lID0gIkdUYWciCglHVGFnLkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSAxCglHVGFnLlBvc2l0aW9uID0gVURpbTIubmV3KDAsIC01MCwgMCwgMCkKCUdUYWcuU2l6ZSA9IFVEaW0yLm5ldygwLCAzMDAsIDAsIDIwKQoJR1RhZy5UZXh0U2l6ZSA9IDIwCglHVGFnLlRleHRDb2xvcjMgPSBDb2xvcjMubmV3KDEwMCAvIDI1NSwgMTAwIC8gMjU1LCAxMDAgLyAyNTUpCglHVGFnLlRleHRTdHJva2VDb2xvcjMgPSBDb2xvcjMubmV3KDAgLyAyNTUsIDAgLyAyNTUsIDAgLyAyNTUpCglHVGFnLlRleHRTdHJva2VUcmFuc3BhcmVuY3kgPSAwLjQKCUdUYWcuVGV4dCA9ICJOb3QgQXZhaWxhYmxlIgoJR1RhZy5Gb250ID0gRW51bS5Gb250LlNhcnBhbmNoCglHVGFnLlRleHRTY2FsZWQgPSBmYWxzZQoJR1RhZy5UZXh0VHJhbnNwYXJlbmN5ID0gMAoKCWZ1bmN0aW9uIEdMb2FkQ2hhcmFjdGVyKHYpCgkJCgkJbG9jYWwgdGJsUGxheWVyRGF0YSA9IHt9CgkJUlNSOldhaXRGb3JDaGlsZCgiUGxheWVyRGF0YSIpLk9uQ2xpZW50RXZlbnQ6Q29ubmVjdChmdW5jdGlvbih2LCB0YmxEYXRhKQoJCQl0YmxQbGF5ZXJEYXRhW3ZdID0gdGJsRGF0YQoJCWVuZCkKCQkKCQlpZiB2IH49IHBsYXllciB0aGVuCgkJCXJlcGVhdCB3YWl0KCkgdW50aWwgdi5DaGFyYWN0ZXIgfj0gbmlsCgkJCXYuQ2hhcmFjdGVyOldhaXRGb3JDaGlsZCgiSHVtYW5vaWQiKQoJCQlsb2NhbCB2SG9sZGVyID0gR0hvbGRlcjpGaW5kRmlyc3RDaGlsZCh2Lk5hbWUpCgkJCXZIb2xkZXI6Q2xlYXJBbGxDaGlsZHJlbigpCgoJCQlsb2NhbCBiID0gR0JveDpDbG9uZSgpCgkJCWIuTmFtZSA9IHYuTmFtZSAuLiAiR0JveCIKCQkJYi5BZG9ybmVlID0gdi5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydAoJCQliLlBhcmVudCA9IHZIb2xkZXIKCgkJCWxvY2FsIHQgPSBHTmFtZVRhZzpDbG9uZSgpCgkJCXQuTmFtZSA9IHYuTmFtZSAuLiAiR05hbWVUYWciCgkJCXQuUGFyZW50ID0gdkhvbGRlcgoJCQl0LkFkb3JuZWUgPSB2LkNoYXJhY3RlcjpXYWl0Rm9yQ2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiLCA1KQoJCQlpZiBub3QgdC5BZG9ybmVlIHRoZW4KCQkJCXJldHVybiBHVW5sb2FkQ2hhcmFjdGVyKHYpCgkJCWVuZAoJCQl0LkdUYWcuVGV4dCA9IHYuTmFtZQoJCQl0LkVuYWJsZWQgPSB0cnVlCgkJCXdhaXQoKQoKCQkJbG9jYWwgZnVuY3Rpb24gR1VwZGF0ZU5hbWVUYWcoKQoJCQkJaWYgbm90IHBjYWxsKGZ1bmN0aW9uKCkKCQkJCQkJLS0gdi5DaGFyYWN0ZXIuSHVtYW5vaWQuRGlzcGxheURpc3RhbmNlVHlwZSA9IEVudW0uSHVtYW5vaWREaXNwbGF5RGlzdGFuY2VUeXBlLk5vbmUKCQkJCQkJbG9jYWwgbWF4aCA9IG1hdGguY2VpbCh2LkNoYXJhY3Rlci5IdW1hbm9pZC5NYXhIZWFsdGggKiAxMCkKCQkJCQkJbG9jYWwgaCA9IG1hdGguY2VpbCh2LkNoYXJhY3Rlci5IdW1hbm9pZC5IZWFsdGggKiAxMCkKCQkJCQkJbG9jYWwgc3RyaCA9ICJIOiAiIC4uIChub3QobWF4aCA9PSAwKSBhbmQgdG9zdHJpbmcobWF0aC5jZWlsKDEwMCAqIGggLyBtYXhoKSkgb3IgMCkgLi4gIiUgWyIgLi4gdG9zdHJpbmcoaCkgLi4gInwiIC4uIHRvc3RyaW5nKG1heGgpIC4uICJdIgoJCQkJCQktLQoJCQkJCQlsb2NhbCBtYXhtID0gdGJsUGxheWVyRGF0YVt2XSBhbmQgbWF0aC5jZWlsKHRibFBsYXllckRhdGFbdl0uTWF4TWFuYSAqIDEwKSBvciAxMDAwCgkJCQkJCWxvY2FsIG0gPSB0YmxQbGF5ZXJEYXRhW3ZdIGFuZCBtYXRoLmNlaWwodGJsUGxheWVyRGF0YVt2XS5NYW5hICogMTApIG9yIDEwMDAKCQkJCQkJbG9jYWwgc3RybSA9ICJNOiAiIC4uIChub3QobWF4bSA9PSAwKSBhbmQgdG9zdHJpbmcobWF0aC5jZWlsKDEwMCAqIG0gLyBtYXhtKSkgb3IgMCkgLi4gIiUgWyIgLi4gdG9zdHJpbmcobSkgLi4gInwiIC4uIHRvc3RyaW5nKG1heG0pIC4uICJdIgoJCQkJCQktLQoJCQkJCQlsb2NhbCBtYXhzID0gdGJsUGxheWVyRGF0YVt2XSBhbmQgbWF0aC5jZWlsKHRibFBsYXllckRhdGFbdl0uTWF4U3RhbWluYSAqIDEwKSBvciAxMDAwCgkJCQkJCWxvY2FsIHMgPSB0YmxQbGF5ZXJEYXRhW3ZdIGFuZCBtYXRoLmNlaWwodGJsUGxheWVyRGF0YVt2XS5TdGFtaW5hICogMTApIG9yIDEwMDAKCQkJCQkJbG9jYWwgc3RycyA9ICAiUzogIiAuLiAobm90KG1heHMgPT0gMCkgYW5kIHRvc3RyaW5nKG1hdGguY2VpbCgxMDAgKiBzIC8gbWF4cykpIG9yIDApIC4uICIlIFsiIC4uIHRvc3RyaW5nKHMpIC4uICJ8IiAuLiB0b3N0cmluZyhtYXhzKSAuLiAiXSIKCgkJCQkJCXQuR1RhZy5UZXh0ID0gdi5OYW1lIC4uICgiXG4iIC4uIHN0cmgpIC4uICgiXG4iIC4uIHN0cm0pIC4uICgiXG4iIC4uIHN0cnMpCgkJCQkJCQoJCQkJCQlpZiBHRVNQRW5hYmxlZCB0aGVuCgkJCQkJCQl0LkdUYWcuVGV4dFRyYW5zcGFyZW5jeSA9IDAKCQkJCQkJCWIuVHJhbnNwYXJlbmN5ID0gMC43CgkJCQkJCWVsc2UKCQkJCQkJCXQuR1RhZy5UZXh0VHJhbnNwYXJlbmN5ID0gMQoJCQkJCQkJYi5UcmFuc3BhcmVuY3kgPSAxCgkJCQkJCWVuZAoJCQkJCQlpZiBoIC8gbWF4aCA9PSAxIHRoZW4KCQkJCQkJCXQuR1RhZy5UZXh0Q29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjU1LCAyNTUsIDI1NSkKCQkJCQkJCWIuQ29sb3IzID0gQ29sb3IzLmZyb21SR0IoMjU1LCAyNTUsIDI1NSkKCQkJCQkJZWxzZWlmIGggLyBtYXhoID09IDAgdGhlbgoJCQkJCQkJdC5HVGFnLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigwLCAwLCAwKQoJCQkJCQkJYi5Db2xvcjMgPSBDb2xvcjMuZnJvbVJHQigwLCAwLCAwKQoJCQkJCQllbHNlCgkJCQkJCQl0LkdUYWcuVGV4dENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDE5MiwgKDE5MiAqIChoIC8gbWF4aCkpLCAoMTkyICogKGggLyBtYXhoKSkpCgkJCQkJCQliLkNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDE5MiwgKDE5MiAqIChoIC8gbWF4aCkpLCAoMTkyICogKGggLyBtYXhoKSkpCgkJCQkJCWVuZAoJCQkJCWVuZCkgdGhlbgoJCQkJCUdVcGRhdGVGdW5jc1t2XSA9IG5pbAoJCQkJZW5kCgkJCWVuZAoJCQlHVXBkYXRlTmFtZVRhZygpCgkJCUdVcGRhdGVGdW5jc1t2XSA9IEdVcGRhdGVOYW1lVGFnCgkJZW5kCgllbmQKCglmdW5jdGlvbiBHVW5sb2FkQ2hhcmFjdGVyKHYpCgkJbG9jYWwgdkhvbGRlciA9IEdIb2xkZXI6RmluZEZpcnN0Q2hpbGQodi5OYW1lKQoJCWlmIHZIb2xkZXIgYW5kICh2SG9sZGVyOkZpbmRGaXJzdENoaWxkKHYuTmFtZSAuLiAiR0JveCIpIH49IG5pbCBvciB2SG9sZGVyOkZpbmRGaXJzdENoaWxkKHYuTmFtZSAuLiAiR05hbWVUYWciKSB+PSBuaWwpIHRoZW4KCQkJdkhvbGRlcjpDbGVhckFsbENoaWxkcmVuKCkKCQllbmQKCWVuZAoKCWZ1bmN0aW9uIEdMb2FkUGxheWVyKHYpCgkJaWYgdiB+PSBwbGF5ZXIgdGhlbgoJCQlsb2NhbCB2SG9sZGVyID0gSW5zdGFuY2UubmV3KCJGb2xkZXIiLCBHSG9sZGVyKQoJCQl2SG9sZGVyLk5hbWUgPSB2Lk5hbWUKCQkJdi5DaGFyYWN0ZXJBZGRlZDpDb25uZWN0KGZ1bmN0aW9uKCkKCQkJCWlmIEdFU1BFbmFibGVkID09IHRydWUgdGhlbgoJCQkJCXBjYWxsKEdMb2FkQ2hhcmFjdGVyLCB2KQoJCQkJZW5kCgkJCWVuZCkKCQkJdi5DaGFyYWN0ZXJSZW1vdmluZzpDb25uZWN0KGZ1bmN0aW9uKCkKCQkJCXBjYWxsKEdVbmxvYWRDaGFyYWN0ZXIsIHYpCgkJCWVuZCkKCQkJR0xvYWRDaGFyYWN0ZXIodikKCQllbmQKCWVuZAoKCWZ1bmN0aW9uIEdVbmxvYWRQbGF5ZXIodikKCQlHVW5sb2FkQ2hhcmFjdGVyKHYpCgkJbG9jYWwgdkhvbGRlciA9IEdIb2xkZXI6RmluZEZpcnN0Q2hpbGQodi5OYW1lKQoJCWlmIHZIb2xkZXIgdGhlbgoJCQl2SG9sZGVyOkRlc3Ryb3koKQoJCWVuZAoJZW5kCgoJZm9yIGksIHYgaW4gcGFpcnMocGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCgkJc3Bhd24oZnVuY3Rpb24oKSBwY2FsbChHTG9hZFBsYXllciwgdikgZW5kKQoJZW5kCgoJcGxheWVycy5QbGF5ZXJBZGRlZDpDb25uZWN0KGZ1bmN0aW9uKHYpCgkJcGNhbGwoR0xvYWRQbGF5ZXIsIHYpCgllbmQpCgoJcGxheWVycy5QbGF5ZXJSZW1vdmluZzpDb25uZWN0KGZ1bmN0aW9uKHYpCgkJcGNhbGwoR1VubG9hZFBsYXllciwgdikKCWVuZCkKCglnYW1lLkl0ZW1DaGFuZ2VkOkNvbm5lY3QoZnVuY3Rpb24oaSkKCQlpZiBpOklzQSgiUGxheWVyIikgdGhlbgoJCQlpZiBHSG9sZGVyOkZpbmRGaXJzdENoaWxkKGkuTmFtZSkgdGhlbgoJCQkJR1VubG9hZENoYXJhY3RlcihpKQoJCQkJd2FpdCgpCgkJCQlHTG9hZENoYXJhY3RlcihpKQoJCQllbmQKCQllbHNlaWYgaTpJc0EoIkh1bWFub2lkIikgYW5kIGkuUGFyZW50IHRoZW4KCQkJbG9jYWwgcCA9IHBsYXllcnM6R2V0UGxheWVyRnJvbUNoYXJhY3RlcihpLlBhcmVudCkKCQkJaWYgcCB+PSBwbGF5ZXIgYW5kIHAgfj0gbmlsIGFuZCBHSG9sZGVyOkZpbmRGaXJzdENoaWxkKHAuTmFtZSkgdGhlbgoJCQkJcGNhbGwoZnVuY3Rpb24oKQoJCQkJCUdVcGRhdGVGdW5jc1twXSgpCgkJCQllbmQpCgkJCWVuZAoJCWVuZAoJZW5kKQoKCWZ1bmN0aW9uIHRvZ2dsZUVTUEdvbGQoKQoJCWlmIGlzR29sZCBvciBpc01hc3RlciB0aGVuCgkJCWlmIEdFU1BFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCWlmIEVTUEVuYWJsZWQgdGhlbgoJCQkJCUVTUEVuYWJsZWQgPSBmYWxzZQoJCQkJCUdFU1BFbmFibGVkID0gdHJ1ZQoJCQkJCUVTUC5UZXh0ID0gIkRldGFpbGVkIEVTUCBFbmFibGVkIgoJCQkJCXdhaXQoMSkKCQkJCQlFU1AuVGV4dCA9ICJFU1AgKE9mZikgW0JdIgoJCQkJZWxzZQoJCQkJCUdFU1BFbmFibGVkID0gdHJ1ZQoJCQkJZW5kCgkJCQlFU1BHb2xkLlRleHQgPSAiKEcpIERldGFpbGVkIEVTUCAoT24pIFtNXSIKCQkJCWZvciBpLHYgaW4gcGFpcnMocGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCgkJCQkJc3Bhd24oZnVuY3Rpb24oKSBwY2FsbChHTG9hZFBsYXllciwgdikgZW5kKQoJCQkJZW5kCgkJCWVsc2UKCQkJCUdFU1BFbmFibGVkID0gZmFsc2UKCQkJCUVTUEdvbGQuVGV4dCA9ICIoRykgRGV0YWlsZWQgRVNQIChPZmYpIFtNXSIKCQkJCWZvciBpLCB2IGluIHBhaXJzKGdhbWUuUGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCgkJCQkJc3Bhd24oZnVuY3Rpb24oKSBwY2FsbChHVW5sb2FkUGxheWVyLCB2KSBlbmQpCgkJCQllbmQKCQkJZW5kCgkJZWxzZQoJCQlFU1BHb2xkLlRleHQgPSAiTWVtYmVyIE5vdCBHb2xkIgoJCQl3YWl0KDMpCgkJCUVTUEdvbGQuVGV4dCA9ICIoRykgRGV0YWlsZWQgRVNQIChPZmYpIFtNXSIKCQllbmQKCWVuZAoKCUVTUEdvbGQuTW91c2VCdXR0b24xRG93bjpjb25uZWN0KHRvZ2dsZUVTUEdvbGQpCgoJLS0gVFAgdG8gRHJvcHMKCglsb2NhbCBUUFNoYXJkcyA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglUUFNoYXJkcy5OYW1lID0gIlRQU2hhcmRzIgoJVFBTaGFyZHMuVGV4dCA9ICJUZWxlcG9ydCB0byBTaGFyZHMgKE9mZikiCgl0YWJsZS5pbnNlcnQoYnV0dG9ucywgVFBTaGFyZHMpCgoJVFBTaGFyZHNFbmFibGVkID0gZmFsc2UJCgoJbG9jYWwgVFBEaWFtb25kcyA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpCglUUERpYW1vbmRzLk5hbWUgPSAiVFBEaWFtb25kcyIKCVRQRGlhbW9uZHMuVGV4dCA9ICJUZWxlcG9ydCB0byBEaWFtb25kcyAoT2ZmKSIKCXRhYmxlLmluc2VydChidXR0b25zLCBUUERpYW1vbmRzKQoKCVRQRGlhbW9uZHNFbmFibGVkID0gZmFsc2UKCglsb2NhbCBwbGF0ZSA9IEluc3RhbmNlLm5ldygiUGFydCIpCglwbGF0ZS5QYXJlbnQgPSBnYW1lLldvcmtzcGFjZQoJcGxhdGUuU2l6ZSA9IFZlY3RvcjMubmV3KDQwLCAxLCA0MCkKCXBsYXRlLlBvc2l0aW9uID0gVmVjdG9yMy5uZXcoMCwgMTAwMDAwLCAwKQoJcGxhdGUuQW5jaG9yZWQgPSB0cnVlCglwbGF0ZS5SZWZsZWN0YW5jZSA9IDAuNQoJcGxhdGUuVHJhbnNwYXJlbmN5ID0gMC41CgoJbG9jYWwgdGltZSA9IDAKCWxvY2FsIGNhbkludmlzID0gZmFsc2UKCglmdW5jdGlvbiB0ZWxlcG9ydFRvRHJvcHMoKQoJCWxvY2FsIGhycCA9IHBsYXllci5DaGFyYWN0ZXI6V2FpdEZvckNoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikKCQlmb3IgaSwgdiBpbiBwYWlycyhnYW1lLldvcmtzcGFjZVsnLklnbm9yZSddWycuU2VydmVyRWZmZWN0cyddOkdldENoaWxkcmVuKCkpIGRvCgkJCWlmIFRQU2hhcmRzRW5hYmxlZCBhbmQgdi5OYW1lID09ICJTaGFyZCIgdGhlbgoJCQkJaHJwLkNGcmFtZSA9IHYuQ0ZyYW1lCgkJCQl3YWl0KC4yKQoJCQllbHNlaWYgVFBEaWFtb25kc0VuYWJsZWQgYW5kIHYuTmFtZSA9PSAiRGlhbW9uZCIgdGhlbgoJCQkJaHJwLkNGcmFtZSA9IHYuQ0ZyYW1lCgkJCQl3YWl0KC4yKQoJCQllbmQKCgkJCWlmIGNhbkludmlzIHRoZW4KCQkJCWlmIHRpbWUgPT0gNSB0aGVuIAoJCQkJCWJyZWFrCgkJCQllbmQKCQkJZW5kCgkJZW5kCgoJCWhycC5DRnJhbWUgPSBDRnJhbWUubmV3KFZlY3RvcjMubmV3KDAsIDEwMDAwMywgLTEwKSkKCgkJcmV0dXJuIAoJZW5kCgoKCWZ1bmN0aW9uIHN0YXJ0VGltZXIoKQoJCWxvY2FsIGhycCA9IHBsYXllci5DaGFyYWN0ZXI6V2FpdEZvckNoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikKCQl3aGlsZSB3YWl0KCkgZG8KCQkJaWYgVFBTaGFyZHNFbmFibGVkIG9yIFRQRGlhbW9uZHNFbmFibGVkIHRoZW4KCQkJCWlmIHRpbWUgfj0gMCB0aGVuIHJldHVybgoJCQkJZWxzZQoJCQkJCWlmIGNhbkludmlzIHRoZW4KCQkJCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiU3Bpcml0IiwgIlNwZWN0cmFsIEVtYm9kaW1lbnQiKQoJCQkJCQlSU1IuRG9NYWdpYzpJbnZva2VTZXJ2ZXIoIlNwaXJpdCIsICJTcGVjdHJhbCBFbWJvZGltZW50IikKCQkJCQkJd2FpdCgxKQoJCQkJCQlyZXBlYXQKCQkJCQkJCXNwYXduKGZ1bmN0aW9uKCkgcGNhbGwodGVsZXBvcnRUb0Ryb3BzKSBlbmQpCgkJCQkJCQl0aW1lID0gdGltZSArIDEKCQkJCQkJCXdhaXQoMSkKCQkJCQkJdW50aWwgdGltZSA9PSA2CgkJCQkJCWhycC5DRnJhbWUgPSBDRnJhbWUubmV3KFZlY3RvcjMubmV3KDAsIDEwMDAwMywgLTEwKSkKCQkJCQkJd2FpdCg3LjUpCgkJCQkJCXRpbWUgPSAwCgkJCQkJZWxzZQoJCQkJCQl3aGlsZSB0cnVlIGRvCgkJCQkJCQlpZiBub3QgVFBTaGFyZHNFbmFibGVkIGFuZCBub3QgVFBEaWFtb25kc0VuYWJsZWQgdGhlbgoJCQkJCQkJCWJyZWFrCgkJCQkJCQllbmQKCQkJCQkJCXNwYXduKGZ1bmN0aW9uKCkgcGNhbGwodGVsZXBvcnRUb0Ryb3BzKSBlbmQpCgkJCQkJCQl3YWl0KDEpCgkJCQkJCWVuZAoJCQkJCWVuZAoJCQkJZW5kCgkJCWVsc2UKCQkJCWJyZWFrCgkJCWVuZAoJCWVuZAoKCQlyZXR1cm4KCWVuZAoKCVRQU2hhcmRzLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpCgkJaWYgcGxheWVyOldhaXRGb3JDaGlsZCgiUGxheWVyR3VpIik6V2FpdEZvckNoaWxkKCJNYWluIikuQ2hhcmFjdGVyLkF2YWlsYWJsZS5TY3JvbGxpbmdGcmFtZS5GcmFtZTpGaW5kRmlyc3RDaGlsZCgiU3BlY3RyYWwgRW1ib2RpbWVudCIpIHRoZW4KCQkJY2FuSW52aXMgPSB0cnVlCgkJZW5kCgkJaWYgVFBTaGFyZHNFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJVFBTaGFyZHNFbmFibGVkID0gdHJ1ZQoJCQlUUFNoYXJkcy5UZXh0ID0gIlRlbGVwb3J0IHRvIFNoYXJkcyAoT24pIgoJCQlzdGFydFRpbWVyKCkKCQkJd2hpbGUgVFBTaGFyZHNFbmFibGVkIGRvCgkJCQl3YWl0KCkKCQkJCWlmIHBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQuSGVhbHRoID09IDAgdGhlbgoJCQkJCXJlcGVhdCB3YWl0KCkgdW50aWwgcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZC5IZWFsdGggfj0gMAoJCQkJCXN0YXJ0VGltZXIoKQoJCQkJZW5kCgkJCWVuZAoJCWVsc2UKCQkJVFBTaGFyZHNFbmFibGVkID0gZmFsc2UKCQkJVFBTaGFyZHMuVGV4dCA9ICJUZWxlcG9ydCB0byBTaGFyZHMgKE9mZikiCgkJZW5kCgllbmQpCgoJVFBEaWFtb25kcy5Nb3VzZUJ1dHRvbjFEb3duOmNvbm5lY3QoZnVuY3Rpb24oKQoJCWlmIHBsYXllcjpXYWl0Rm9yQ2hpbGQoIlBsYXllckd1aSIpOldhaXRGb3JDaGlsZCgiTWFpbiIpLkNoYXJhY3Rlci5BdmFpbGFibGUuU2Nyb2xsaW5nRnJhbWUuRnJhbWU6RmluZEZpcnN0Q2hpbGQoIlNwZWN0cmFsIEVtYm9kaW1lbnQiKSB0aGVuCgkJCWNhbkludmlzID0gdHJ1ZQoJCWVuZAoJCWlmIFRQRGlhbW9uZHNFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJVFBEaWFtb25kc0VuYWJsZWQgPSB0cnVlCgkJCVRQRGlhbW9uZHMuVGV4dCA9ICJUZWxlcG9ydCB0byBEaWFtb25kcyAoT24pIgoJCQlzdGFydFRpbWVyKCkKCQkJd2hpbGUgVFBEaWFtb25kc0VuYWJsZWQgZG8KCQkJCXdhaXQoKQoJCQkJaWYgcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZC5IZWFsdGggPT0gMCB0aGVuCgkJCQkJcmVwZWF0IHdhaXQoKSB1bnRpbCBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkLkhlYWx0aCB+PSAwCgkJCQkJc3RhcnRUaW1lcigpCgkJCQllbmQKCQkJZW5kCgkJZWxzZQoJCQlUUERpYW1vbmRzRW5hYmxlZCA9IGZhbHNlCgkJCVRQRGlhbW9uZHMuVGV4dCA9ICJUZWxlcG9ydCB0byBEaWFtb25kcyAoT2ZmKSIKCQllbmQKCWVuZCkKCgktLSBSZWpvaW4gU2VydmVyIEZ1bmN0aW9uCgoJLS0gVGhpcyB3YXMgb25seSBwcmVzZXJ2ZWQgYXMgSSBjb3VsZG4ndCB0aGluayBvZiBhbnkgb3RoZXIgcGxhY2UgdG8gcHV0IHRoZSBmdW5jdGlvbiBmb3Igbm93LgoJLS0gTWlnaHQgZ2V0IG1vdmVkIGxhdGVyLCBpZHVubm8uCglmdW5jdGlvbiByZWpvaW4oKQoJCWxvY2FsIHRzID0gZ2FtZTpHZXRTZXJ2aWNlKCJUZWxlcG9ydFNlcnZpY2UiKQoJCWxvY2FsIHAgPSBwbGF5ZXJzLkxvY2FsUGxheWVyCgoJCXRzOlRlbGVwb3J0KGdhbWUuUGxhY2VJZCwgcCkKCWVuZAoKCS0tIEdVSSBUd2Vha2luZwoKCWZvciBpLCB2IGluIHBhaXJzKGJvcmRlcnMpIGRvCgkJdi5BbmNob3JQb2ludCA9IFZlY3RvcjIubmV3KDEsIDAuNSkKCQl2LkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQoJCXYuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDAuNzUwCgkJdi5Cb3JkZXJDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigwLCAwLCAwKQoJCXYuQm9yZGVyU2l6ZVBpeGVsID0gMAoJCXYuU2l6ZUNvbnN0cmFpbnQgPSBFbnVtLlNpemVDb25zdHJhaW50LlJlbGF0aXZlWVkKCQl2LkFjdGl2ZSA9IHRydWUKCQl2LlBhcmVudCA9IGViZ3VpCgllbmQKCglmb3IgaSwgdiBpbiBwYWlycyhidXR0b25zKSBkbwoJCXYuQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDIzNiwgMjAsIDExNSkKCQl2LkJvcmRlckNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDAsIDAsIDApCgkJdi5Cb3JkZXJTaXplUGl4ZWwgPSAyCgkJdi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCAwLCAwLCAwKQoJCXYuU2l6ZSA9IFVEaW0yLm5ldygwLCAwLCAwLCAwKQoJCXYuRm9udCA9IEVudW0uRm9udC5TYXJwYW5jaAoJCXYuVGV4dENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1MSwgMjUxLCAyNTUpCgkJdi5UZXh0U2NhbGVkID0gdHJ1ZQoJCXYuVGV4dFNpemUgPSAxNC4wMDAKCQl2LlRleHRXcmFwcGVkID0gdHJ1ZQoJCXYuTGF5b3V0T3JkZXIgPSBpCgkJdi5QYXJlbnQgPSBtYWluZnJhbWUKCWVuZAoKCS0tW1tmb3IgaSwgdiBpbiBwYWlycyhidXR0b25zKSBkbwoJCXYuQmFja2dyb3VuZENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDIzNiwgMTc1LCAyMCkKCQl2LkJvcmRlckNvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDAsIDAsIDApCgkJdi5Cb3JkZXJTaXplUGl4ZWwgPSAyCgkJdi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCAwLCAwLCAwKQoJCXYuU2l6ZSA9IFVEaW0yLm5ldygwLCAwLCAwLCAwKQoJCXYuRm9udCA9IEVudW0uRm9udC5TYXJwYW5jaAoJCXYuVGV4dENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1MSwgMjUxLCAyNTUpCgkJdi5UZXh0U2NhbGVkID0gdHJ1ZQoJCXYuVGV4dFNpemUgPSAxNC4wMDAKCQl2LlRleHRXcmFwcGVkID0gdHJ1ZQoJCXYuTGF5b3V0T3JkZXIgPSBpCgkJdi5QYXJlbnQgPSBtYWluZnJhbWUKCWVuZF1dCgoJLS0gY29tbWFuZEJveAoKCXRhcmdldCA9IHBsYXllci5OYW1lCgl0YXJnZXRTZXR0aW5nID0gInNlbGVjdCIKCWxvb3BpbmcgPSBmYWxzZQoJc21hcnRBdHRhY2sgPSB0cnVlCglIZWFsU2V0dGluZyA9IDEKCXN0dW5FbmFibGVkID0gdHJ1ZQoJRlBTRHJvcHBpbmcgPSBmYWxzZQoJbG9jYWwgYnV0dG9uSGVpZ2h0ID0gMzAKCWxvY2FsIGJ1dHRvbkdhcCA9IDcKICAgIGxvY2FsIGhlbHAxID0gW1t8fCBCZWxvdyBpcyBhIGZ1bGwsIGNvbXByZWhlbnNpdmUgbGlzdCBvZiBlYWNoIGNvbW1hbmQgRUJHVUkgaGFzIHRvIG9mZmVyLiB8fAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgKFByZWZpeCBpcyA7KQoKICAgICAgICAgICAgICAgICJoZWxwIFtudW1dIiAtIFNob3dzIHRoaXMgY29tbWFuZHMgbGlzdCEgQ2hvb3NlIGJldHdlZW4gcGFnZXMgMSBvciAyLgogICAgICAgICAgICAgICAgImNoYW5nZWxvZyIgLSBTaG93cyBhIGxpbmsgdG8gdGhlIGNoYW5nZWxvZyBmb3IgRUJHVUkgYW5kIGl0cyBDYW5hcnkgYnJhbmNoLgogICAgICAgICAgICAgICAgInJlIiAtIFJlZnJlc2hlcyB5b3VyIGNoYXJhY3Rlci4gVGhpcyB3aWxsIHRlbXBvcmFyaWx5IHZhbmlzaCB5b3UsIGFuZCBicmluZyB5b3UgYmFjayB3aXRoIGZ1bGwgc3RhdHMuCiAgICAgICAgICAgICAgICAidHAgPG1hcD4iIC0gVGVsZXBvcnRzIHlvdSB0byB0aGUgbWFwIG9mIHlvdXIgY2hvaWNlLiBIZWF2ZW4gZG9lc24ndCB3b3JrIHdpdGhvdXQgdGhlIGdhbWVwYXNzLgogICAgICAgICAgICAgICAgImRlY2x1dHRlciIgLSBDbGVhcnMgdGhlIGJhY2tncm91bmRzIG9mIHRoZSBtYWluIEdVSXMsIGFuZCBzaHJpbmtzIHRoZSBtb3Zlcy9zdGF0cy4KICAgICAgICAgICAgICAgICJyYWluIiAtIEVuYWJsZXMgdGhlIHJhaW4gZnJvbSBXYXRlciBtYXAuIENhcmVmdWwsIHlvdSBoYXZlIHRvIHJlam9pbiB0byB0dXJuIGl0IG9mZiEKICAgICAgICAgICAgICAgICJmaXgiIC0gUmVtb3ZlcyB0aGUgIkxPQURJTkciIHNjcmVlbiB3aGVuIHRlbGVwb3J0aW5nIHRvIGNlcnRhaW4gbWFwcy4KICAgICAgICAgICAgICAgICJidXR0b25oZWlnaHQgPG51bT4iIC0gQ2hhbmdlcyB0aGUgaGVpZ2h0LCBpbiBwaXhlbHMsIG9mIEVCR1VJJ3MgYnV0dG9ucy4KICAgICAgICAgICAgICAgICJidXR0b25nYXAgPG51bT4iIC0gQ2hhbmdlcyB0aGUgZ2FwLCBpbiBwaXhlbHMsIGJldHdlZW4gRUJHVUkncyBidXR0b25zLgogICAgICAgICAgICAgICAgInJlam9pbiIgLSBSZWpvaW5zIHRoZSBzZXJ2ZXIuCiAgICAgICAgICAgICAgICAiYXVyYS9vZmYiIC0gQW4gYWx0ZXJuYXRlIG1ldGhvZCBvZiBzaWxlbnRseSB0dXJuaW5nIG9mZiBhdXJhLgogICAgICAgICAgICAgICAgInRhcmdldHNldHRpbmcgPG1vZGU+IiAtIE1vZGlmaWVzIGhvdyBFQkdVSSBzZWxlY3RzIHRhcmdldHMuIFdvbid0IHRhcmdldCB0aG9zZSBpbiBzYWZlem9uZSwgZXhjZXB0IGluICJzZWxlY3QiIG1vZGUuCiAgICAgICAgICAgICAgICAgICAgLS0gInNlbGVjdCIgYWxsb3dzIHlvdSB0byBjaG9vc2UgYnkgdHlwaW5nIGludG8gdGhlIGNvbW1hbmQgYm94LiBTZXQgdG8gdGhpcyBieSBkZWZhdWx0LgogICAgICAgICAgICAgICAgICAgIC0tICJjbG9zZXN0IiBzZWxlY3RzIHRoZSBwZXJzb24gY2xvc2VzdCB0byB5b3UuCiAgICAgICAgICAgICAgICAgICAgLS0gImZhcnRoZXN0IiBzZWxlY3RzIHRoZSBwZXJzb24gZmFydGhlc3QgZnJvbSB5b3UuCiAgICAgICAgICAgICAgICAgICAgLS0gImxvd2hwIiBzZWxlY3RzIHRoZSBwZXJzb24gd2l0aCB0aGUgbG93ZXN0IEhQLgogICAgICAgICAgICAgICAgICAgIC0tICJoaWdoaHAiIHNlbGVjdHMgdGhlIGNsb3Nlc3QgcGVyc29uIHdpdGggdGhlIGhpZ2hlc3QgSFAuXV0KCiAgICBsb2NhbCBoZWxwMiA9IFtbImxvb3AiIC0gTG9vcHMgdGhlIHVzYWdlIG9mIGVuYWJsZWQgYXR0YWNrIGV4cGxvaXRzLgogICAgICAgICAgICAgICAgImdyY2hhcmdlIDxudW0+IiAtIE11bHRpcGxpZXMgdGhlIHRpbWUgQW1wbGlmaWVkIEdlbmVzaXMgUmF5IGF0dGFjayBleHBsb2l0IHN0YXlzIGFsaXZlIGZvci4gRGVmYXVsdCwgMSwgbGFzdHMgNiBzZWNvbmRzLgogICAgICAgICAgICAgICAgInNwZWVkIDxudW0+IiAtIENoYW5nZXMgeW91ciBkZWZhdWx0IHdhbGtzcGVlZC4gRGVmYXVsdCwgNjQsIGVxdWFscyBtYXgtc3BlZWQgc3ByaW50aW5nLgogICAgICAgICAgICAgICAgInNtYXJ0YXR0YWNrIiAtIFRvZ2dsZXMgaWYgYXR0YWNrIGV4cGxvaXRzIHdpbGwgZmlyZSBvbiBwZW9wbGUgd2hvIGFyZSBpbiBzYWZlem9uZS4gRGVmYXVsdCBvbi4KICAgICAgICAgICAgICAgICJnYW1lY29sb3IgPG1vZGU+IiAtIENoYW5nZXMgdGhlIGNvbnRyYXN0IGFuZCBzYXR1cmF0aW9uIG9mIHRoZSBnYW1lLgogICAgICAgICAgICAgICAgICAgIC0tICJub3JtYWwiIHdpbGwgcmVzZXQgZXZlcnl0aGluZyB0byBub3JtYWwuCiAgICAgICAgICAgICAgICAgICAgLS0gImdyYXlzY2FsZSIgdHVybnMgb2ZmIHRoZSBzYXR1cmF0aW9uIGFuZCBtYWtlcyBldmVyeXRoaW5nIGdyYXkuCiAgICAgICAgICAgICAgICAgICAgLS0gImludmVydGh1ZSIgaW52ZXJ0cyB0aGUgaHVlIG9mIGV2ZXJ5dGhpbmcuIEdyZWVuIGJlY29tZXMgcHVycGxlLCBibHVlIGJlY29tZXMgcmVkLgogICAgICAgICAgICAgICAgICAgIC0tICJpbnZlcnRhbGwiIGludmVydHMgdGhlIGh1ZSwgc2F0dXJhdGlvbiwgYW5kIGNvbnRyYXN0IG9mIGV2ZXJ5dGhpbmcuIE5lZ2F0aXZlIQogICAgICAgICAgICAgICAgImJsYWNrY2FzdCIgLSBDaGFuZ2VzIGFsbCB0aGUgbWVkYWxzIHRvIGJsYWNrIHdoZW4gY2FzdGluZyBzcGVsbHMuCiAgICAgICAgICAgICAgICAic3R1biIgLSBUb2dnbGVzIHdoZXRoZXIgeW91IHdhbnQgdG8gYmUgc3R1bm5lZCBvciBub3QuIE5vdCB2ZXJ5IGRpc2NyZWV0LgogICAgICAgICAgICAgICAgImRydWdzIiAtIFJhbmRvbWl6ZXMgdGhlIGNvbG9ycyBvZiBhbGwgbWFnaWMgc3BlbGxzLiBSZXF1aXJlcyB5b3UgdG8gcnVuICJjb2xvcnMiIGZpcnN0LgogICAgICAgICAgICAgICAgIm1hZ2ljY29sb3IgPHI+IDxnPiA8Yj4iIC0gQ2hhbmdlcyB0aGUgY29sb3Igb2YgYWxsIG1hZ2ljIHNwZWxscyB0byBhbiBSR0IgdmFsdWUuIFJlcXVpcmVzIHlvdSB0byBydW4gImNvbG9ycyIgZmlyc3QuCiAgICAgICAgICAgICAgICAiY29sb3JzIiAtIEFsbG93cyB5b3UgdG8gcnVuICJkcnVncyIgYW5kICJtYWdpY2NvbG9yIi4KICAgICAgICAgICAgICAgICJoZWFsIDxwbGF5ZXI+IiAtIFBsYWNlcyBCbHVlIEFyc29uIGFuZCBHbGVhbWluZyBIYXJtb255IGF0IHRoZSBmZWV0IG9mIGEgcGxheWVyIG9mIHlvdXIgY2hvaWNlLgogICAgICAgICAgICAgICAgImUgPG51bSAxLTM+IiAtIENoYW5nZXMgdGhlIHBoYXNlIG9mIHRoZSBDb250cm9sbGVkIEVjaG9lcyBhdHRhY2sgZXhwbG9pdC4KICAgICAgICAgICAgICAgICAgICAtLSAiMSIgd2lsbCBjaGFuZ2UgaXQgdG8gUE9XLCBhbmQgaXMgdGhlIGRlZmF1bHQuCiAgICAgICAgICAgICAgICAgICAgLS0gIjIiIHdpbGwgY2hhbmdlIGl0IHRvIEJVUk4uCiAgICAgICAgICAgICAgICAgICAgLS0gIjMiIHdpbGwgY2hhbmdlIGl0IHRvIFNUVU4uCiAgICAgICAgICAgICAgICAib3JpZ2luIiAtIENyZWF0ZXMgYSBzbWFsbCwgcmVkIGJsb2NrIGF0IDAsIDAsIDAgd2l0aGluIHRoZSB3b3JsZC5dXQoKCVJTUiA9IGdhbWUuUmVwbGljYXRlZFN0b3JhZ2U6V2FpdEZvckNoaWxkKCJSZW1vdGVzIikKCglsb2NhbCBzdHVuQ29ubmVjdGlvbiA9IGdldGNvbm5lY3Rpb25zKFJTUjpXYWl0Rm9yQ2hpbGQoIkNvbWJhdCIpLk9uQ2xpZW50RXZlbnQpCglsb2NhbCBsYWdnZXJzID0gewoJCSIxQjBGOThCRS1FMTBCLTQ2NzQtOUZCNC02RjY1MTcxQTM0N0YiLCAtLSBsb2cKCQkiNkEzMzEwNEEtMUZFOS00RkE4LTkzNzQtQzE2NEQyOEY4MzUxIiwgLS0gYnJpYW4KCQkiODM3NzM2QUEtMDE5Mi00N0Y5LTk4QzUtOEREMERGMThGRTc0IiwgLS0gamV0CgkJIjU1QzIwNDlELUM2QkQtNDUyMy04ODA0LUQ1MzlDMzg3OTJBMyIsIC0tIHBlbnRhcmFjdAoJCSI5NDY0QjY4QS0zNjNDLTQxRjgtQkI3RC1CNEJFRDhBQzA5NjMiLCAtLSB2YXN0b3JpbwoJCS0tICI4MzBCRDRFOS01RUJFLTRBMTMtQjQ3Qi05QkU2MDA4M0I4MzYiLCAtLSBsb2xvawoJCS0tICI2M0IzOUUyNy1EQTFCLTQ4MkUtQjI4Qy02QTMzOThDOTVBNEMiLCAtLSBhbGV4CgkJIjg0NkE2NUUyLUU5NjMtNEEwQS05MDI1LUU5QjhFOTU4OTYxMyIsIC0tIGJyYW0KCQkiM0YxNjg0NDAtQTVDMC00RjcxLThFNTEtM0ZERjkwMjVGNTFCIiwgLS0gdG9tZWsKCQkiNkE5NzA1MkEtNjM0RS00N0UxLThEOTAtNUVFM0NBNEE5NkZBIiwgLS0gcmF2ZW4KCQkiRjU5NzVEN0QtMkFDNS00NEFBLTgwMUYtODI3NjI1RDZENzYzIiwgLS0gYWxleGlhCgkJIjQ4Mjg3MTgyLTlFNzctNEY5Ny1BNjU0LTk3MDY5RUQ4MTY2QyIsIC0tIGplc3MKCQkiNzQ4OUNCQUUtNzk4Ni00NUE5LUJFNDAtQTIxOEVEQ0QwRjAxIiAtLSBjZXBoYXMKCX0KCglsb2NhbCBjbGllbnRpZCA9IGdhbWU6R2V0U2VydmljZSgiUmJ4QW5hbHl0aWNzU2VydmljZSIpOkdldENsaWVudElkKCk6bG93ZXIoKQoJbG9jYWwgYWxsb3dlZFRvRHJvcEZQUyA9IHRydWUKCglmb3IgaSwgdiBpbiBwYWlycyhsYWdnZXJzKSBkbwoJCXYgPSB2Omxvd2VyKCkKCgkJaWYgKHYgPT0gY2xpZW50aWQpIHRoZW4KCQkJYWxsb3dlZFRvRHJvcEZQUyA9IHRydWUKCQllbmQKCWVuZAoKCWZ1bmN0aW9uIGdldEhSUChjaHIpCgkJbG9jYWwgSFJQID0gY2hyOkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0Iikgb3IgY2hyOkZpbmRGaXJzdENoaWxkKCJUb3JzbyIpIG9yIGNocjpGaW5kRmlyc3RDaGlsZCgiVXBwZXJUb3JzbyIpCgkJcmV0dXJuIEhSUAoJZW5kCgoJZnVuY3Rpb24gZ2V0SFVNKGNocikKCQlsb2NhbCBIVU0gPSBjaHI6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikKCQlyZXR1cm4gSFVNCgllbmQKCglsb2NhbCBmdW5jdGlvbiByZXNwYXduKHBscikKCQlsb2NhbCBjaHIgPSBwbHIuQ2hhcmFjdGVyCgoJCWlmIChjaHI6RmluZEZpcnN0Q2hpbGRPZkNsYXNzKCJIdW1hbm9pZCIpKSB0aGVuIGNocjpGaW5kRmlyc3RDaGlsZE9mQ2xhc3MoIkh1bWFub2lkIik6Q2hhbmdlU3RhdGUoMTUpIGVuZAoJCWNocjpDbGVhckFsbENoaWxkcmVuKCkKCgkJbG9jYWwgbmV3Y2hyID0gSW5zdGFuY2UubmV3KCJNb2RlbCIpCgkJbmV3Y2hyLlBhcmVudCA9IHdvcmtzcGFjZQoJCXBsci5DaGFyYWN0ZXIgPSBuZXdjaHIKCgkJd2FpdCgpCgoJCXBsci5DaGFyYWN0ZXIgPSBjaHIKCQluZXdjaHI6RGVzdHJveSgpCgllbmQKCglsb2NhbCBmdW5jdGlvbiByZWZyZXNoKHBscikKCQlsb2NhbCBodW0gPSBwbHIuQ2hhcmFjdGVyIGFuZCBwbHIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkT2ZDbGFzcygiSHVtYW5vaWQiLCB0cnVlKQoJCWxvY2FsIHBvcyA9IGh1bSBhbmQgaHVtLlJvb3RQYXJ0IGFuZCBodW0uUm9vdFBhcnQuQ0ZyYW1lCgkJbG9jYWwgcG9zMSA9IHdvcmtzcGFjZS5DdXJyZW50Q2FtZXJhLkNGcmFtZQoKCQlyZXNwYXduKHBscikKCgkJc3Bhd24oZnVuY3Rpb24oKQoJCQlwbHIuQ2hhcmFjdGVyQWRkZWQ6V2FpdCgpOldhaXRGb3JDaGlsZCgiSHVtYW5vaWQiKS5Sb290UGFydC5DRnJhbWUsIHdvcmtzcGFjZS5DdXJyZW50Q2FtZXJhLkNGcmFtZSA9IHBvcywgd2FpdCgpIGFuZCBwb3MxCgkJZW5kKQoJZW5kCgoJbG9jYWwgZnVuY3Rpb24gc3BsaXRBcmdzKGNvbW1hbmQpCgkJY29tbWFuZCA9IHN0cmluZy5nc3ViKGNvbW1hbmQsICIsIiwgIiAiKQoJCWNvbW1hbmQgPSBzdHJpbmcuc3BsaXQoY29tbWFuZCwgIiAiKQoKCQlmb3IgaSwgdiBpbiBpcGFpcnMoY29tbWFuZCkgZG8KCQkJdiA9IHN0cmluZy5nc3ViKHYsICIlcysiLCAiIikKCQkJaWYgdiA9PSAiIiB0aGVuCgkJCQl0YWJsZS5yZW1vdmUoY29tbWFuZCwgaSkKCQkJZW5kCgkJZW5kCgoJCXJldHVybiBjb21tYW5kCgllbmQKCglsb2NhbCBmdW5jdGlvbiBmaW5kUGxheWVyKHRleHQpCgkJbG9jYWwgcGxheWVycyA9IGdhbWUuUGxheWVyczpHZXRQbGF5ZXJzKCkKCQlsb2NhbCBtYXRjaGVzID0ge30KCgkJZm9yIGksIFBsYXllciBpbiBpcGFpcnMocGxheWVycykgZG8KCQkJbG9jYWwgbmFtZSA9IFBsYXllci5OYW1lCgkJCXRleHQgPSBzdHJpbmcubG93ZXIodGV4dCkKCQkJbmFtZSA9IHN0cmluZy5sb3dlcihuYW1lKQoKCQkJbG9jYWwgbWF0Y2ggPSBzdHJpbmcuZmluZChuYW1lLCB0ZXh0KQoKCQkJaWYgbWF0Y2ggdGhlbgoJCQkJdGFibGUuaW5zZXJ0KG1hdGNoZXMsIFBsYXllci5OYW1lKQoJCQllbmQKCQllbmQKCgkJcmV0dXJuIG1hdGNoZXMKCWVuZAoKCWxvY2FsIGRydWdzRW5hYmxlZCA9IGZhbHNlCglsb2NhbCBjb2xvcnNFbmFibGVkID0gZmFsc2UKCWxvY2FsIGJsYWNrY2FzdEVuYWJsZWQgPSBmYWxzZQoJbG9jYWwgY29sb3JFeGNsdWRlID0geyJIZWFkIiwiVG9yc28iLCJMZWZ0IEFybSIsIkxlZnQgTGVnIiwiUmlnaHQgQXJtIiwiUmlnaHQgTGVnIiwiU2hhcmQiLCJEaWFtb25kIn0KCgktLVtbOTgvMjU1LCAzNy8yNTUsIDIwOS8yNTVdXQoJbG9jYWwgY29sb3IxCglsb2NhbCBjb2xvcjIKCWxvY2FsIGNvbG9yMwoKCWxvY2FsIGZ1bmN0aW9uIHRlcm1FQkd1aSgpCgkJYnV0dG9uc21haW46VHdlZW5Qb3NpdGlvbigKCQkJVURpbTIubmV3KDEuMjUsIDAsIDAuNjUsIDApLAoJCQkiSW4iLAoJCQkiU2luZSIsCgkJCS41LAoJCQl0cnVlCgkJKQoJCWNvbW1hbmRzbWFpbjpUd2VlblBvc2l0aW9uKAoJCQlVRGltMi5uZXcoMS4yNSwgMCwgMC40NSwgMCksCgkJCSJJbiIsCgkJCSJTaW5lIiwKCQkJLjUsCgkJCXRydWUKCQkpCgkJd2FpdCgxKQoJCXRhcmdldCA9IHBsYXllci5OYW1lCgkJZWJndWk6RGVzdHJveSgpCgllbmQKCglsb2NhbCBmdW5jdGlvbiBpbnB1dEJveCgpCgkJbG9jYWwgdGV4dCA9IGNvbW1hbmRCb3guVGV4dAoJCXdhaXQoKQoJCWNvbW1hbmRCb3guVGV4dCA9ICIiCgoJCWxvY2FsIHByZWZpeCA9ICI7IgoJCWlmIHN0cmluZy5zdWIodGV4dCwgMSwgMSkgPT0gKHByZWZpeCkgdGhlbgoJCQl0ZXh0ID0gc3RyaW5nLmxvd2VyKHRleHQpCgoJCQlpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDMpID09IChwcmVmaXggLi4gInJlIikgdGhlbgoJCQkJcmVmcmVzaChwbGF5ZXIpCgkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDMpID09IChwcmVmaXggLi4gInRwIikgdGhlbgoJCQkJbG9jYWwgdGVsZXBvcnR0bwogICAgICAgICAgICAgICAgbG9jYWwgdHBuYW1lCgkJCQlsb2NhbCBwbGFjZSA9IHN0cmluZy5zdWIodGV4dCwgNSkKCQkJCWxvY2FsIHBsYWNlcyA9IHsKCQkJCQk1NjYzOTkyNDQsCgkJCQkJMjU2OTYyNTgwOSwKCQkJCQk1NzAxNTgwODEsCgkJCQkJNTM3NjAwMjA0LAoJCQkJCTUyMDU2ODI0MCwKCQkJCQk1NTQ5NTU1NjAsCgkJCQkJNjAyMDQ4NTUwLAoJCQkJCTU3NTQ1NjY0NiwKCQkJCQkxNzEzOTg2MTEyLAoJCQkJCTEyNDM2MTU2MTIsCgkJCQkJNjM4MDY1MzAyLAoJCQkJCTYzNDI0MDgyNiwKCQkJCQk2MzMwNDI3MzEKCQkJCX0KCgkJCQlpZiBwbGFjZSA9PSAic3RhbmRhcmRsb3ciIG9yIHBsYWNlID09ICI1NjYzOTkyNDQiIHRoZW4KCQkJCQl0ZWxlcG9ydHRvID0gcGxhY2VzWzFdCiAgICAgICAgICAgICAgICAgICAgdHBuYW1lID0gIkxvd2JpZSBTdGFuZGFyZCIKCQkJCWVsc2VpZiBwbGFjZSA9PSAic3RhbmRhcmQ0MCIgb3IgcGxhY2UgPT0gIjI1Njk2MjU4MDkiIHRoZW4KCQkJCQl0ZWxlcG9ydHRvID0gcGxhY2VzWzJdCiAgICAgICAgICAgICAgICAgICAgdHBuYW1lID0gIlN0YW5kYXJkIgoJCQkJZWxzZWlmIHBsYWNlID09ICJsaWdodCIgb3IgcGxhY2UgPT0gIjU3MDE1ODA4MSIgdGhlbgoJCQkJCXRlbGVwb3J0dG8gPSBwbGFjZXNbM10KICAgICAgICAgICAgICAgICAgICB0cG5hbWUgPSAiTGlnaHQiCgkJCQllbHNlaWYgcGxhY2UgPT0gImZpcmUiIG9yIHBsYWNlID09ICI1Mzc2MDAyMDQiIHRoZW4KCQkJCQl0ZWxlcG9ydHRvID0gcGxhY2VzWzRdCiAgICAgICAgICAgICAgICAgICAgdHBuYW1lID0gIkZpcmUiCgkJCQllbHNlaWYgcGxhY2UgPT0gIndhdGVyIiBvciBwbGFjZSA9PSAiNTIwNTY4MjQwIiB0aGVuCgkJCQkJdGVsZXBvcnR0byA9IHBsYWNlc1s1XQogICAgICAgICAgICAgICAgICAgIHRwbmFtZSA9ICJXYXRlciIKCQkJCWVsc2VpZiBwbGFjZSA9PSAiZ3Jhc3MiIG9yIHBsYWNlID09ICI1NTQ5NTU1NjAiIHRoZW4KCQkJCQl0ZWxlcG9ydHRvID0gcGxhY2VzWzZdCiAgICAgICAgICAgICAgICAgICAgdHBuYW1lID0gIkdyYXNzIgoJCQkJZWxzZWlmIHBsYWNlID09ICJoZWF2ZW4iIG9yIHBsYWNlID09ICI2MDIwNDg1NTAiIHRoZW4KCQkJCQl0ZWxlcG9ydHRvID0gcGxhY2VzWzddCiAgICAgICAgICAgICAgICAgICAgdHBuYW1lID0gIkhlYXZlbiIKCQkJCWVsc2VpZiBwbGFjZSA9PSAibWluaWxvdmFuaWEiIG9yIHBsYWNlID09ICJzYW5zIiBvciBwbGFjZSA9PSAiNTc1NDU2NjQ2IiB0aGVuCgkJCQkJdGVsZXBvcnR0byA9IHBsYWNlc1s4XQogICAgICAgICAgICAgICAgICAgIHRwbmFtZSA9ICJNaW5pbG92YW5pYSIKCQkJCWVsc2VpZiBwbGFjZSA9PSAiZGVmYXVsdCIgb3IgcGxhY2UgPT0gInRvdXJuYW1lbnQiIG9yIHBsYWNlID09ICIxNzEzOTg2MTEyIiB0aGVuCgkJCQkJdGVsZXBvcnR0byA9IHBsYWNlc1s5XQogICAgICAgICAgICAgICAgICAgIHRwbmFtZSA9ICJUb3VybmFtZW50IgoJCQkJZWxzZWlmIHBsYWNlID09ICJzdXJ2aXZhbCIgb3IgcGxhY2UgPT0gIjEyNDM2MTU2MTIiIHRoZW4KCQkJCQl0ZWxlcG9ydHRvID0gcGxhY2VzWzEwXQogICAgICAgICAgICAgICAgICAgIHRwbmFtZSA9ICJTdXJ2aXZhbCIKCQkJCWVsc2VpZiBwbGFjZSA9PSAibWVnYXN0YW5kYXJkIiBvciBwbGFjZSA9PSAic3RhbmRhcmRtZWdhIiBvciBwbGFjZSA9PSAiNjM4MDY1MzAyIiB0aGVuCgkJCQkJdGVsZXBvcnR0byA9IHBsYWNlc1sxMV0KICAgICAgICAgICAgICAgICAgICB0cG5hbWUgPSAiTWVnYSBTdGFuZGFyZCIKCQkJCWVsc2VpZiBwbGFjZSA9PSAibWVnYWZpcmUiIG9yIHBsYWNlID09ICJmaXJlbWVnYSIgb3IgcGxhY2UgPT0gIjYzNDI0MDgyNiIgdGhlbgoJCQkJCXRlbGVwb3J0dG8gPSBwbGFjZXNbMTFdCiAgICAgICAgICAgICAgICAgICAgdHBuYW1lID0gIk1lZ2EgRmlyZSIKCQkJCWVsc2VpZiBwbGFjZSA9PSAibWVnYWdyYXNzIiBvciBwbGFjZSA9PSAiZ3Jhc3NtZWdhIiBvciBwbGFjZSA9PSAiNjMzMDQyNzMxIiB0aGVuCgkJCQkJdGVsZXBvcnR0byA9IHBsYWNlc1sxM10KICAgICAgICAgICAgICAgICAgICB0cG5hbWUgPSAiTWVnYSBHcmFzcyIKCQkJCWVsc2UKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiVGhlIHBsYWNlIHdhcyBpbmNvcnJlY3RseSBzcGVjaWZpZWQhIgoJCQkJZW5kCgoJCQkJaWYgdGVsZXBvcnR0byB0aGVuCgkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlRlbGVwb3J0aW5nIHRvICIgLi4gdHBuYW1lIC4uICIhIgoJCQkJCWdhbWU6R2V0U2VydmljZSgiVGVsZXBvcnRTZXJ2aWNlIik6VGVsZXBvcnQodGVsZXBvcnR0bykKCQkJCWVuZAoJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCA4KSA9PSAocHJlZml4IC4uICJkZWNsdXR0ZXIiKSB0aGVuCgkJCQlwbGF5ZXIuUGxheWVyR3VpLk1haW4uRnJhbWUxLlNpemUgPSBVRGltMi5uZXcoMC4zNzUsIDAsIDAuMzc1LCAwKQoJCQkJcGxheWVyLlBsYXllckd1aS5NYWluLkZyYW1lMS5JbWFnZVRyYW5zcGFyZW5jeSA9IDEKCQkJCXBsYXllci5QbGF5ZXJHdWkuTWFpbi5DaGFyYWN0ZXIuSW1hZ2VUcmFuc3BhcmVuY3kgPSAxCgkJCQlwbGF5ZXIuUGxheWVyR3VpLk1haW4uQm9vay5JbWFnZVRyYW5zcGFyZW5jeSA9IDEKCQkJCXBsYXllci5QbGF5ZXJHdWkuTWFpbi5TaG9wLkltYWdlVHJhbnNwYXJlbmN5ID0gMQoJCQkJcGxheWVyLlBsYXllckd1aS5NYWluLlNraWxsc0Jhci5TaXplID0gVURpbTIubmV3KDAuMzc1LCAwLCAwLjM3NSwgMCkKCQkJCXBsYXllci5QbGF5ZXJHdWkuTWFpbi5Ta2lsbHNCYXIuSW1hZ2VUcmFuc3BhcmVuY3kgPSAxCgkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDUpID09IChwcmVmaXggLi4gInJhaW4iKSB0aGVuCgkJCQlsb2NhbCBjdXJyZW50Q0FNID0gd29ya3NwYWNlLkN1cnJlbnRDYW1lcmEKCQkJCWxvY2FsIHJhaW5Tb3VuZCA9IEluc3RhbmNlLm5ldygiU291bmQiKQoJCQkJcmFpblNvdW5kLkxvb3BlZCA9IHRydWUKCQkJCXJhaW5Tb3VuZC5Tb3VuZElkID0gInJieGFzc2V0aWQ6Ly8yODMxNjQ1OTMiCgkJCQlyYWluU291bmQuVm9sdW1lID0gMQoJCQkJcmFpblNvdW5kLlBhcmVudCA9IHdvcmtzcGFjZQoJCQkJcmFpblNvdW5kOlBsYXkoKQoKCQkJCWxvY2FsIHJhaW5QYXJ0ID0gSW5zdGFuY2UubmV3KCJQYXJ0IikKCQkJCXJhaW5QYXJ0LlNpemUgPSBWZWN0b3IzLm5ldygzMDAsIDMwMCwgMzAwKQoJCQkJcmFpblBhcnQuVHJhbnNwYXJlbmN5ID0gMQoJCQkJcmFpblBhcnQuQW5jaG9yZWQgPSB0cnVlCgkJCQlyYWluUGFydC5DYW5Db2xsaWRlID0gZmFsc2UKCgkJCQlsb2NhbCByYWluRWZmZWN0ID0gZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpOldhaXRGb3JDaGlsZCgiRWZmZWN0cyIpOldhaXRGb3JDaGlsZCgiUmFpbiIpCgkJCQlyYWluRWZmZWN0LlJhdGUgPSByYWluUGFydC5TaXplLm1hZ25pdHVkZQoJCQkJcmFpbkVmZmVjdC5QYXJlbnQgPSByYWluUGFydAoKCQkJCWxvY2FsIGlnbm9yZSA9IHdvcmtzcGFjZTpXYWl0Rm9yQ2hpbGQoIi5JZ25vcmUiKQoJCQkJcmFpblBhcnQuUGFyZW50ID0gaWdub3JlOldhaXRGb3JDaGlsZCgiLlNlcnZlckVmZmVjdHMiKQoKCQkJCWxvY2FsIGZvdiA9IDIgKiBtYXRoLnRhbihtYXRoLnJhZChjdXJyZW50Q0FNLkZpZWxkT2ZWaWV3KSAvIDIpCgkJCQlsb2NhbCBuZXdSYXkgPSBSYXkubmV3CgkJCQlsb2NhbCBoZWlnaHQgPSBWZWN0b3IzLm5ldygwLCA1MCwgMCkKCQkJCWxvY2FsIGRlcHRoID0gQ0ZyYW1lLm5ldygwLCBmb3YgKiA1MCwgLTYwKQoKCQkJCWdhbWU6R2V0U2VydmljZSgiUnVuU2VydmljZSIpOkJpbmRUb1JlbmRlclN0ZXAoIlJhaW4iLCBFbnVtLlJlbmRlclByaW9yaXR5LkNhbWVyYS5WYWx1ZSwgZnVuY3Rpb24oKQoJCQkJCWxvY2FsIHJjID0gd29ya3NwYWNlOkZpbmRQYXJ0T25SYXlXaXRoSWdub3JlTGlzdChuZXdSYXkoY3VycmVudENBTS5DRnJhbWUucCwgaGVpZ2h0KSwge2lnbm9yZX0pCgoJCQkJCWlmIChyYykgdGhlbgoJCQkJCQlyYWluRWZmZWN0LkVuYWJsZWQgPSBmYWxzZQoJCQkJCQlyYWluU291bmQuVm9sdW1lID0gMC41CgkJCQkJCXJldHVybgoJCQkJCWVuZAoKCQkJCQlsb2NhbCB2aWV3cG9ydCA9IGN1cnJlbnRDQU0uVmlld3BvcnRTaXplCgkKCQkJCQlyYWluUGFydC5TaXplID0gVmVjdG9yMy5uZXcoZm92ICogdmlld3BvcnQueCAvIHZpZXdwb3J0LnkgKiA1MCwgMC4yLCAxMDApCgkJCQkJcmFpblBhcnQuQ0ZyYW1lID0gY3VycmVudENBTS5DRnJhbWUgKiBkZXB0aAoJCgkJCQkJcmFpbkVmZmVjdC5SYXRlID0gcmFpblBhcnQuU2l6ZS5tYWduaXR1ZGUKCQkJCQlyYWluRWZmZWN0LkVuYWJsZWQgPSB0cnVlCgkKCQkJCQlyYWluU291bmQuVm9sdW1lID0gMQoJCQkJZW5kKQoJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCA0KSA9PSAocHJlZml4IC4uICJmaXgiKSB0aGVuCgkJCQlpZiBwbGF5ZXIuUGxheWVyR3VpOldhaXRGb3JDaGlsZCgiTWVudSIpOkZpbmRGaXJzdENoaWxkKCJCbGFja1NjcmVlbiIpIHRoZW4KCQkJCQlwbGF5ZXIuUGxheWVyR3VpOldhaXRGb3JDaGlsZCgiTWVudSIpOkZpbmRGaXJzdENoaWxkKCJCbGFja1NjcmVlbiIpLlZpc2libGUgPSBmYWxzZQoJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJGaXhpbmcgdGhlIE1lbnUgR1VJISIKCQkJCWVuZAoJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCAxMykgPT0gKHByZWZpeCAuLiAiYnV0dG9uaGVpZ2h0IikgdGhlbgoJCQkJYnV0dG9uSGVpZ2h0ID0gdG9udW1iZXIoc3RyaW5nLnN1Yih0ZXh0LCAxNSkpCgkJCQlVSUdyaWRMYXlvdXQuQ2VsbFNpemUgPSBVRGltMi5uZXcoMC40NSwgMCwgMCwgYnV0dG9uSGVpZ2h0KQoJCQkJbWFpbmZyYW1lLkNhbnZhc1NpemUgPSBVRGltMi5uZXcoMCwgMCwgMCwgbWF0aC5jZWlsKCNidXR0b25zIC8gMikgKiAoYnV0dG9uSGVpZ2h0ICsgYnV0dG9uR2FwKSAtIGJ1dHRvbkdhcCkKCgkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQnV0dG9uIGhlaWdodCB3YXMgc2V0IHRvICIgLi4gdG9udW1iZXIoc3RyaW5nLnN1Yih0ZXh0LCAxNSkpIC4uICIhIgoJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCAxMCkgPT0gKHByZWZpeCAuLiAiYnV0dG9uZ2FwIikgdGhlbgoJCQkJYnV0dG9uR2FwID0gdG9udW1iZXIoc3RyaW5nLnN1Yih0ZXh0LCAxMikpCgkJCQlVSUdyaWRMYXlvdXQuQ2VsbFBhZGRpbmcgPSBVRGltMi5uZXcoMCwgNywgMCwgYnV0dG9uR2FwKQoJCQkJbWFpbmZyYW1lLkNhbnZhc1NpemUgPSBVRGltMi5uZXcoMCwgMCwgMCwgbWF0aC5jZWlsKCNidXR0b25zIC8gMikgKiAoYnV0dG9uSGVpZ2h0ICsgYnV0dG9uR2FwKSAtIGJ1dHRvbkdhcCkKCgkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQnV0dG9uIGdhcCB3YXMgc2V0IHRvICIgLi4gdG9udW1iZXIoc3RyaW5nLnN1Yih0ZXh0LCAxMikpIC4uICIhIgoJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCA3KSA9PSAocHJlZml4IC4uICJyZWpvaW4iKSB0aGVuCgkJCQlyZWpvaW4oKQoJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlJlam9pbmluZy4uLiIKCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgOSkgPT0gKHByZWZpeCAuLiAiYXVyYS9vZmYiKSB0aGVuCgkJCQlyZXBlYXQgd2FpdCgpIHVudGlsIGdldEhSUChwbGF5ZXIuQ2hhcmFjdGVyKQoKCQkJCWlmIGdldEhSUChwbGF5ZXIuQ2hhcmFjdGVyKTpGaW5kRmlyc3RDaGlsZCgiQXVyYUdQIikgdGhlbgoJCQkJCWdldEhSUChwbGF5ZXIuQ2hhcmFjdGVyKTpGaW5kRmlyc3RDaGlsZCgiQXVyYUdQIik6RGVzdHJveSgpCgkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkF1cmEgaGFzIGJlZW4gcmVtb3ZlZC4iCgkJCQllbHNlCgkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkF1cmEgZG9lcyBub3QgZXhpc3QhIgoJCQkJZW5kCgkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDE0KSA9PSAocHJlZml4IC4uICJ0YXJnZXRzZXR0aW5nIikgdGhlbgoJCQkJdGFyZ2V0U2V0dGluZyA9IHN0cmluZy5zdWIodGV4dCwgMTYpCgoJCQkJcmVwZWF0CgkJCQkJaWYgdGFyZ2V0U2V0dGluZyA9PSAic2VsZWN0IiB0aGVuCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJTdWNjZXNzZnVsbHkgc3dpdGNoZWQgdGhlIHRhcmdldCBzZXR0aW5nIHRvIHNlbGVjdCEiCgkJCQkJZWxzZWlmIHRhcmdldFNldHRpbmcgPT0gImNsb3Nlc3QiIHRoZW4KCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlN1Y2Nlc3NmdWxseSBzd2l0Y2hlZCB0aGUgdGFyZ2V0IHNldHRpbmcgdG8gY2xvc2VzdCEiCgkJCQkJCXdoaWxlIHRhcmdldFNldHRpbmcgPT0gImNsb3Nlc3QiIGRvCgkJCQkJCQlsb2NhbCBuZWFyZXN0UGxheWVycyA9IHt9CgoJCQkJCQkJZm9yIGksIHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzOkdldFBsYXllcnMoKSkgZG8KCQkJCQkJCQlpZiBnZXRIUlAodi5DaGFyYWN0ZXIpIGFuZCBnZXRIUlAocGxheWVyLkNoYXJhY3RlcikgYW5kIHYgfj0gcGxheWVyIHRoZW4KCQkJCQkJCQkJaWYgc21hcnRBdHRhY2sgdGhlbgoJCQkJCQkJCQkJaWYgbm90IHYuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJGb3JjZUZpZWxkIikgdGhlbgoJCQkJCQkJCQkJCWxvY2FsIGRpc3RhbmNlID0gKGdldEhSUCh2LkNoYXJhY3RlcikuUG9zaXRpb24gLSBnZXRIUlAocGxheWVyLkNoYXJhY3RlcikuUG9zaXRpb24pLk1hZ25pdHVkZQoKCQkJCQkJCQkJCQl0YWJsZS5pbnNlcnQobmVhcmVzdFBsYXllcnMsIHt2Lk5hbWUsIGRpc3RhbmNlfSkKCQkJCQkJCQkJCWVuZAoJCQkJCQkJCQllbHNlCgkJCQkJCQkJCQlsb2NhbCBkaXN0YW5jZSA9IChnZXRIUlAodi5DaGFyYWN0ZXIpLlBvc2l0aW9uIC0gZ2V0SFJQKHBsYXllci5DaGFyYWN0ZXIpLlBvc2l0aW9uKS5NYWduaXR1ZGUKCgkJCQkJCQkJCQl0YWJsZS5pbnNlcnQobmVhcmVzdFBsYXllcnMsIHt2Lk5hbWUsIGRpc3RhbmNlfSkKCQkJCQkJCQkJZW5kCgkJCQkJCQkJZW5kCgkJCQkJCQllbmQKCgkJCQkJCQl0YWJsZS5zb3J0KG5lYXJlc3RQbGF5ZXJzLCAKCQkJCQkJCQlmdW5jdGlvbihhLCBiKQoJCQkJCQkJCQlyZXR1cm4gYVsyXSA8IGJbMl0KCQkJCQkJCQllbmQKCQkJCQkJCSkKCgkJCQkJCQl0YXJnZXQgPSBuZWFyZXN0UGxheWVyc1sxXVsxXSBvciBwbGF5ZXIuTmFtZQoKCQkJCQkJCWlmIHRhcmdldCB+PSBwbGF5ZXIuTmFtZSB0aGVuCgkJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1cnJlbnQgVGFyZ2V0IHwgIiAuLiB0YXJnZXQKCQkJCQkJCWVsc2UKCQkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VycmVudCBUYXJnZXQgfCAoTm9uZSkiCgkJCQkJCQllbmQKCgkJCQkJCQl3YWl0KCkKCQkJCQkJZW5kCgkJCQkJZWxzZWlmIHRhcmdldFNldHRpbmcgPT0gImZhcnRoZXN0IiB0aGVuCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJTdWNjZXNzZnVsbHkgc3dpdGNoZWQgdGhlIHRhcmdldCBzZXR0aW5nIHRvIGZhcnRoZXN0ISIKCQkJCQkJd2hpbGUgdGFyZ2V0U2V0dGluZyA9PSAiZmFydGhlc3QiIGRvCgkJCQkJCQlsb2NhbCBuZWFyZXN0UGxheWVycyA9IHt9CgoJCQkJCQkJZm9yIGksIHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzOkdldFBsYXllcnMoKSkgZG8KCQkJCQkJCQlpZiBnZXRIUlAodi5DaGFyYWN0ZXIpIGFuZCBnZXRIUlAocGxheWVyLkNoYXJhY3RlcikgYW5kIHYgfj0gcGxheWVyIHRoZW4KCQkJCQkJCQkJaWYgc21hcnRBdHRhY2sgdGhlbgoJCQkJCQkJCQkJaWYgbm90IHYuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJGb3JjZUZpZWxkIikgdGhlbgoJCQkJCQkJCQkJCWxvY2FsIGRpc3RhbmNlID0gKGdldEhSUCh2LkNoYXJhY3RlcikuUG9zaXRpb24gLSBnZXRIUlAocGxheWVyLkNoYXJhY3RlcikuUG9zaXRpb24pLk1hZ25pdHVkZQoKCQkJCQkJCQkJCQl0YWJsZS5pbnNlcnQobmVhcmVzdFBsYXllcnMsIHt2Lk5hbWUsIGRpc3RhbmNlfSkKCQkJCQkJCQkJCWVuZAoJCQkJCQkJCQllbHNlCgkJCQkJCQkJCQlsb2NhbCBkaXN0YW5jZSA9IChnZXRIUlAodi5DaGFyYWN0ZXIpLlBvc2l0aW9uIC0gZ2V0SFJQKHBsYXllci5DaGFyYWN0ZXIpLlBvc2l0aW9uKS5NYWduaXR1ZGUKCgkJCQkJCQkJCQl0YWJsZS5pbnNlcnQobmVhcmVzdFBsYXllcnMsIHt2Lk5hbWUsIGRpc3RhbmNlfSkKCQkJCQkJCQkJZW5kCgkJCQkJCQkJZW5kCgkJCQkJCQllbmQKCgkJCQkJCQl0YWJsZS5zb3J0KG5lYXJlc3RQbGF5ZXJzLCAKCQkJCQkJCQlmdW5jdGlvbihhLCBiKQoJCQkJCQkJCQlyZXR1cm4gYVsyXSA+IGJbMl0KCQkJCQkJCQllbmQKCQkJCQkJCSkKCgkJCQkJCQl0YXJnZXQgPSBuZWFyZXN0UGxheWVyc1sxXVsxXSBvciBwbGF5ZXIuTmFtZQoKCQkJCQkJCWlmIHRhcmdldCB+PSBwbGF5ZXIuTmFtZSB0aGVuCgkJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1cnJlbnQgVGFyZ2V0IHwgIiAuLiB0YXJnZXQKCQkJCQkJCWVsc2UKCQkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VycmVudCBUYXJnZXQgfCAoTm9uZSkiCgkJCQkJCQllbmQKCgkJCQkJCQl3YWl0KCkKCQkJCQkJZW5kCgkJCQkJZWxzZWlmIHRhcmdldFNldHRpbmcgPT0gImxvd2hwIiB0aGVuCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJTdWNjZXNzZnVsbHkgc3dpdGNoZWQgdGhlIHRhcmdldCBzZXR0aW5nIHRvIGxvd2hwISIKCQkJCQkJd2hpbGUgdGFyZ2V0U2V0dGluZyA9PSAibG93aHAiIGRvCgkJCQkJCQlsb2NhbCBuZWFyZXN0UGxheWVycyA9IHt9CgoJCQkJCQkJZm9yIGksIHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzOkdldFBsYXllcnMoKSkgZG8KCQkJCQkJCQlpZiBnZXRIVU0odi5DaGFyYWN0ZXIpIGFuZCBnZXRIVU0ocGxheWVyLkNoYXJhY3RlcikgYW5kIHYgfj0gcGxheWVyIHRoZW4KCQkJCQkJCQkJaWYgc21hcnRBdHRhY2sgdGhlbgoJCQkJCQkJCQkJaWYgbm90IHYuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJGb3JjZUZpZWxkIikgdGhlbgoJCQkJCQkJCQkJCWxvY2FsIGhlYWx0aCA9IGdldEhVTSh2LkNoYXJhY3RlcikuSGVhbHRoCgoJCQkJCQkJCQkJCXRhYmxlLmluc2VydChuZWFyZXN0UGxheWVycywge3YuTmFtZSwgaGVhbHRofSkKCQkJCQkJCQkJCWVuZAoJCQkJCQkJCQllbHNlCgkJCQkJCQkJCQlsb2NhbCBoZWFsdGggPSBnZXRIVU0odi5DaGFyYWN0ZXIpLkhlYWx0aAoKCQkJCQkJCQkJCXRhYmxlLmluc2VydChuZWFyZXN0UGxheWVycywge3YuTmFtZSwgaGVhbHRofSkKCQkJCQkJCQkJZW5kCgkJCQkJCQkJZW5kCgkJCQkJCQllbmQKCgkJCQkJCQl0YWJsZS5zb3J0KG5lYXJlc3RQbGF5ZXJzLCAKCQkJCQkJCQlmdW5jdGlvbihhLCBiKQoJCQkJCQkJCQlyZXR1cm4gYVsyXSA8IGJbMl0KCQkJCQkJCQllbmQKCQkJCQkJCSkKCgkJCQkJCQl0YXJnZXQgPSBuZWFyZXN0UGxheWVyc1sxXVsxXSBvciBwbGF5ZXIuTmFtZQoKCQkJCQkJCWlmIHRhcmdldCB+PSBwbGF5ZXIuTmFtZSB0aGVuCgkJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1cnJlbnQgVGFyZ2V0IHwgIiAuLiB0YXJnZXQKCQkJCQkJCWVsc2UKCQkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VycmVudCBUYXJnZXQgfCAoTm9uZSkiCgkJCQkJCQllbmQKCgkJCQkJCQl3YWl0KCkKCQkJCQkJZW5kCgkJCQkJZWxzZWlmIHRhcmdldFNldHRpbmcgPT0gImhpZ2hocCIgdGhlbgoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiU3VjY2Vzc2Z1bGx5IHN3aXRjaGVkIHRoZSB0YXJnZXQgc2V0dGluZyB0byBoaWdoaHAhIgoJCQkJCQl3aGlsZSB0YXJnZXRTZXR0aW5nID09ICJoaWdoaHAiIGRvCgkJCQkJCQlsb2NhbCBuZWFyZXN0UGxheWVycyA9IHt9CgoJCQkJCQkJZm9yIGksIHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzOkdldFBsYXllcnMoKSkgZG8KCQkJCQkJCQlpZiBnZXRIVU0odi5DaGFyYWN0ZXIpIGFuZCBnZXRIVU0ocGxheWVyLkNoYXJhY3RlcikgYW5kIHYgfj0gcGxheWVyIHRoZW4KCQkJCQkJCQkJaWYgc21hcnRBdHRhY2sgdGhlbgoJCQkJCQkJCQkJaWYgbm90IHYuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJGb3JjZUZpZWxkIikgdGhlbgoJCQkJCQkJCQkJCWxvY2FsIGhlYWx0aCA9IGdldEhVTSh2LkNoYXJhY3RlcikuSGVhbHRoCgoJCQkJCQkJCQkJCXRhYmxlLmluc2VydChuZWFyZXN0UGxheWVycywge3YuTmFtZSwgaGVhbHRofSkKCQkJCQkJCQkJCWVuZAoJCQkJCQkJCQllbHNlCgkJCQkJCQkJCQlsb2NhbCBoZWFsdGggPSBnZXRIVU0odi5DaGFyYWN0ZXIpLkhlYWx0aAoKCQkJCQkJCQkJCXRhYmxlLmluc2VydChuZWFyZXN0UGxheWVycywge3YuTmFtZSwgaGVhbHRofSkKCQkJCQkJCQkJZW5kCgkJCQkJCQkJZW5kCgkJCQkJCQllbmQKCgkJCQkJCQl0YWJsZS5zb3J0KG5lYXJlc3RQbGF5ZXJzLCAKCQkJCQkJCQlmdW5jdGlvbihhLCBiKQoJCQkJCQkJCQlyZXR1cm4gYVsyXSA+IGJbMl0KCQkJCQkJCQllbmQKCQkJCQkJCSkKCgkJCQkJCQl0YXJnZXQgPSBuZWFyZXN0UGxheWVyc1sxXVsxXSBvciBwbGF5ZXIuTmFtZQoKCQkJCQkJCWlmIHRhcmdldCB+PSBwbGF5ZXIuTmFtZSB0aGVuCgkJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1cnJlbnQgVGFyZ2V0IHwgIiAuLiB0YXJnZXQKCQkJCQkJCWVsc2UKCQkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VycmVudCBUYXJnZXQgfCAoTm9uZSkiCgkJCQkJCQllbmQKCgkJCQkJCQl3YWl0KCkKCQkJCQkJZW5kCgkJCQkJZWxzZQoJCQkJCQl0YXJnZXRTZXR0aW5nID0gInNlbGVjdCIKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkludmFsaWQgdGFyZ2V0IHNldHRpbmchIERpZCB5b3Ugc3BlY2lmeSBzZWxlY3QsIGNsb3Nlc3QsIGZhcnRoZXN0LCBsb3docCwgb3IgaGlnaGhwPyBTZXR0aW5nIGhhcyBiZWVuIHNldCB0byBzZWxlY3QuIgoJCQkJCWVuZAoJCQkJdW50aWwgdGFyZ2V0U2V0dGluZyA9PSAic2VsZWN0IgoKCQkJCXRhcmdldCA9IHBsYXllci5OYW1lCgkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDUpID09IChwcmVmaXggLi4gImxvb3AiKSB0aGVuCgkJCQlpZiBzdHJpbmcuc3ViKHRleHQsIDcsIDcpID09ICgidCIpIG9yIHN0cmluZy5zdWIodGV4dCwgNywgOCkgPT0gKCJvbiIpIHRoZW4KCQkJCQlpZiBsb29waW5nID09IHRydWUgdGhlbgoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiTG9vcGluZyBhdHRhY2tzIGlzIGFscmVhZHkgb24hIgoJCQkJCWVsc2UKCQkJCQkJbG9vcGluZyA9IHRydWUKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlN0YXJ0ZWQgbG9vcGluZyBhdHRhY2tzISIKCQkJCQllbmQKCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDcsIDcpID09ICgiZiIpIG9yIHN0cmluZy5zdWIodGV4dCwgNywgOSkgPT0gKCJvZmYiKSB0aGVuCgkJCQkJaWYgbG9vcGluZyA9PSBmYWxzZSB0aGVuCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJMb29waW5nIGF0dGFja3MgaXMgYWxyZWFkeSBvZmYhIgoJCQkJCWVsc2UKCQkJCQkJbG9vcGluZyA9IGZhbHNlCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJTdG9wcGVkIGxvb3BpbmcgYXR0YWNrcyEiCgkJCQkJZW5kCgkJCQllbHNlCgkJCQkJbG9vcGluZyA9IG5vdCBsb29waW5nCgkJCQkJbG9jYWwgT25Pck9mZiA9ICJPbiIKCQkJCQlpZiBsb29waW5nID09IGZhbHNlIHRoZW4KCQkJCQkJT25Pck9mZiA9ICJPZmYiCgkJCQkJZW5kCgkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlRvZ2dsZWQgbG9vcGluZyBhdHRhY2tzICgiIC4uIE9uT3JPZmYgLi4gIikhIgoJCQkJZW5kCgoJCQkJc3Bhd24oZnVuY3Rpb24oKQoJCQkJCXdoaWxlIGxvb3BpbmcgZG8KCQkJCQkJZXhwbG9pdCgpCgkJCQkJCXdhaXQoKQoJCQkJCWVuZAoJCQkJCXJldHVybgoJCQkJZW5kKQoJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCA4KSA9PSAocHJlZml4IC4uICJ1bmJyZWFrIikgdGhlbgoJCQkJYnJlYWthYmxlID0gZmFsc2UKCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgOSkgPT0gKHByZWZpeCAuLiAiZ3JjaGFyZ2UiKSB0aGVuCgkJCQlHUkNoYXJnZSA9IHRvbnVtYmVyKHN0cmluZy5zdWIodGV4dCwgMTEpKQoJCQkJd2FpdCgpCgkJCQlpZiBHUkNoYXJnZSA9PSBuaWwgdGhlbgoJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJJbnZhbGlkIEFyZ3VtZW50cyEgRGlkIHlvdSBlbnRlciBhbiBpbnRlZ2VyPyIKCQkJCWVsc2UKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiU3VjY2Vzc2Z1bGx5IHNldCB0aGUgY2hhcmdlIHRvICIgLi4gR1JDaGFyZ2UgLi4gIiEiCgkJCQllbmQKCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgNikgPT0gKHByZWZpeCAuLiAic3BlZWQiKSB0aGVuCgkJCQlTZXRTcGVlZCA9IHRvbnVtYmVyKHN0cmluZy5zdWIodGV4dCwgOCkpCgkJCQl3YWl0KCkKCQkJCWlmIFNldFNwZWVkID09IG5pbCB0aGVuCgkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkludmFsaWQgQXJndW1lbnRzISBEaWQgeW91IGVudGVyIGFuIGludGVnZXI/IgoJCQkJZWxzZQoJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJTdWNjZXNzZnVsbHkgc2V0IHRoZSBzcGVlZCB0byAiIC4uIFNldFNwZWVkIC4uICIhIgoJCQkJZW5kCgkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDEyKSA9PSAocHJlZml4IC4uICJzbWFydGF0dGFjayIpIHRoZW4KCQkJCWlmIHN0cmluZy5zdWIodGV4dCwgMTQsIDE0KSA9PSAoInQiKSBvciBzdHJpbmcuc3ViKHRleHQsIDE0LCAxNSkgPT0gKCJvbiIpIHRoZW4KCQkJCQlpZiBzbWFydEF0dGFjayA9PSB0cnVlIHRoZW4KCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkZvcmNlZmllbGQgZGV0ZWN0aW9uIGlzIGFscmVhZHkgb24hIgoJCQkJCWVsc2UKCQkJCQkJc21hcnRBdHRhY2sgPSB0cnVlCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJOb3cgZGV0ZWN0aW5nIGZvcmNlZmllbGRzISIKCQkJCQllbmQKCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDE0LCAxNCkgPT0gKCJmIikgb3Igc3RyaW5nLnN1Yih0ZXh0LCAxNCwgMTYpID09ICgib2ZmIikgdGhlbgoJCQkJCWlmIHNtYXJ0QXR0YWNrID09IGZhbHNlIHRoZW4KCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkZvcmNlZmllbGQgZGV0ZWN0aW9uIGlzIGFscmVhZHkgb2ZmISIKCQkJCQllbHNlCgkJCQkJCXNtYXJ0QXR0YWNrID0gZmFsc2UKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlN0b3BwZWQgZGV0ZWN0aW5nIGZvcmNlZmllbGRzISIKCQkJCQllbmQKCQkJCWVsc2UKCQkJCQlzbWFydEF0dGFjayA9IG5vdCBzbWFydEF0dGFjawoJCQkJCWxvY2FsIE9uT3JPZmYgPSAiT24iCgkJCQkJaWYgc21hcnRBdHRhY2sgPT0gZmFsc2UgdGhlbgoJCQkJCQlPbk9yT2ZmID0gIk9mZiIKCQkJCQllbmQKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiVG9nZ2xlZCBmb3JjZWZpZWxkIGRldGVjdGlvbiAoIiAuLiBPbk9yT2ZmIC4uICIpISIKCQkJCWVuZAoJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCAxMCkgPT0gKHByZWZpeCAuLiAiZ2FtZWNvbG9yIikgdGhlbgoJCQkJaWYgbm90IGdhbWUuTGlnaHRpbmc6RmluZEZpcnN0Q2hpbGQoIkVCR0d1aUNvbG9yQ29ycmVjdGlvbiIpIHRoZW4KCQkJCQlJbnN0YW5jZS5uZXcoIkNvbG9yQ29ycmVjdGlvbkVmZmVjdCIsIGdhbWUuTGlnaHRpbmcpLk5hbWUgPSAiRUJHR3VpQ29sb3JDb3JyZWN0aW9uIgoJCQkJCXdhaXQoKQoJCQkJZW5kCgoJCQkJaWYgc3RyaW5nLnN1Yih0ZXh0LCAxMiwgMTcpID09ICJub3JtYWwiIHRoZW4KCQkJCQlnYW1lLkxpZ2h0aW5nLkVCR0d1aUNvbG9yQ29ycmVjdGlvbi5Db250cmFzdCA9IDAKCQkJCQlnYW1lLkxpZ2h0aW5nLkVCR0d1aUNvbG9yQ29ycmVjdGlvbi5TYXR1cmF0aW9uID0gMAoJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJSZXZlcnRpbmcuLi4iCgkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxMiwgMjApID09ICJncmF5c2NhbGUiIHRoZW4KCQkJCQlnYW1lLkxpZ2h0aW5nLkVCR0d1aUNvbG9yQ29ycmVjdGlvbi5TYXR1cmF0aW9uID0gLTEKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiR3JheXNjYWxpbmcuLi4iCgkJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxMiwgMjApID09ICJpbnZlcnRodWUiIHRoZW4KCQkJCQlnYW1lLkxpZ2h0aW5nLkVCR0d1aUNvbG9yQ29ycmVjdGlvbi5TYXR1cmF0aW9uID0gLTIKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiSW52ZXJ0aW5nIGh1ZS4uLiIKCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEyLCAyMCkgPT0gImludmVydGFsbCIgdGhlbgoJCQkJCWdhbWUuTGlnaHRpbmcuRUJHR3VpQ29sb3JDb3JyZWN0aW9uLkNvbnRyYXN0ID0gLTIKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiSW52ZXJ0aW5nIGFsbC4uLiIKCQkJCWVsc2UKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiSW52YWxpZCBjb2xvciBtb2RlIChvciBub25lIHNwZWNpZmllZCkhIgoJCQkJZW5kCgkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDEwKSA9PSAocHJlZml4IC4uICJibGFja2Nhc3QiKSB0aGVuCgkJCQlpZiBzdHJpbmcuc3ViKHRleHQsIDEyLCAxMikgPT0gKCJ0Iikgb3Igc3RyaW5nLnN1Yih0ZXh0LCAxMiwgMTMpID09ICgib24iKSB0aGVuCgkJCQkJaWYgYmxhY2tjYXN0RW5hYmxlZCA9PSB0cnVlIHRoZW4KCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkJsYWNrIGNhc3RpbmcgaXMgYWxyZWFkeSBvbiEiCgkJCQkJZWxzZQoJCQkJCQlibGFja2Nhc3RFbmFibGVkID0gdHJ1ZQoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQmxhY2sgY2FzdGluZyBlbmFibGVkISIKCQkJCQllbmQKCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEyLCAxMikgPT0gKCJmIikgb3Igc3RyaW5nLnN1Yih0ZXh0LCAxMiwgMTQpID09ICgib2ZmIikgdGhlbgoJCQkJCWlmIGJsYWNrY2FzdEVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQmxhY2sgY2FzdGluZyBpcyBhbHJlYWR5IG9mZiEiCgkJCQkJZWxzZQoJCQkJCQlibGFja2Nhc3RFbmFibGVkID0gZmFsc2UKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkJsYWNrIGNhc3RpbmcgZGlzYWJsZWQhIgoJCQkJCWVuZAoJCQkJZWxzZQoJCQkJCWJsYWNrY2FzdEVuYWJsZWQgPSBub3QgYmxhY2tjYXN0RW5hYmxlZAoJCQkJCWxvY2FsIE9uT3JPZmYgPSAiT24iCgkJCQkJaWYgYmxhY2tjYXN0RW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQkJCU9uT3JPZmYgPSAiT2ZmIgoJCQkJCWVuZAoJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJUb2dnbGVkIGJsYWNrIGNhc3RpbmcgKCIgLi4gT25Pck9mZiAuLiAiKSEiCgkJCQllbmQKCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgNSkgPT0gKHByZWZpeCAuLiAic3R1biIpIHRoZW4KCQkJCWlmIHN0cmluZy5zdWIodGV4dCwgNywgNykgPT0gKCJ0Iikgb3Igc3RyaW5nLnN1Yih0ZXh0LCA3LCA4KSA9PSAoIm9uIikgdGhlbgoJCQkJCWlmIHN0dW5FbmFibGVkID09IHRydWUgdGhlbgoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiU3R1biBpcyBhbHJlYWR5IG9uISIKCQkJCQllbHNlCgkJCQkJCXN0dW5FbmFibGVkID0gdHJ1ZQoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiU3R1biBlbmFibGVkISIKCQkJCQllbmQKCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDcsIDcpID09ICgiZiIpIG9yIHN0cmluZy5zdWIodGV4dCwgNywgOSkgPT0gKCJvZmYiKSB0aGVuCgkJCQkJaWYgc3R1bkVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiU3R1biBpcyBhbHJlYWR5IG9mZiEiCgkJCQkJZWxzZQoJCQkJCQlzdHVuRW5hYmxlZCA9IGZhbHNlCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJTdHVuIGRpc2FibGVkISIKCQkJCQllbmQKCQkJCWVsc2UKCQkJCQlzdHVuRW5hYmxlZCA9IG5vdCBzdHVuRW5hYmxlZAoJCQkJCWxvY2FsIE9uT3JPZmYgPSAiT24iCgkJCQkJaWYgc3R1bkVuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJCQlPbk9yT2ZmID0gIk9mZiIKCQkJCQkJZm9yIGksIGNvbm5lY3Rpb24gaW4gcGFpcnMoc3R1bkNvbm5lY3Rpb24pIGRvCgkJCQkJCQljb25uZWN0aW9uOkRpc2FibGUoKQoJCQkJCQllbmQKCQkJCQllbHNlCgkJCQkJCWZvciBpLCBjb25uZWN0aW9uIGluIHBhaXJzKHN0dW5Db25uZWN0aW9uKSBkbwoJCQkJCQkJY29ubmVjdGlvbjpFbmFibGUoKQoJCQkJCQllbmQKCQkJCQllbmQKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiVG9nZ2xlZCBzdHVuICgiIC4uIE9uT3JPZmYgLi4gIikhIgoJCQkJZW5kCgkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDYpID09IChwcmVmaXggLi4gImRydWdzIikgdGhlbgoJCQkJaWYgc3RyaW5nLnN1Yih0ZXh0LCA4LCA4KSA9PSAoInQiKSBvciBzdHJpbmcuc3ViKHRleHQsIDgsIDkpID09ICgib24iKSB0aGVuCgkJCQkJaWYgZHJ1Z3NFbmFibGVkID09IHRydWUgdGhlbgoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiRHJ1ZyBtb2RlIGlzIGFscmVhZHkgb24hIgoJCQkJCWVsc2UKCQkJCQkJZHJ1Z3NFbmFibGVkID0gdHJ1ZQoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiRHJ1ZyBtb2RlIGVuYWJsZWQhIgoJCQkJCWVuZAoJCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgOCwgOCkgPT0gKCJmIikgb3Igc3RyaW5nLnN1Yih0ZXh0LCA4LCAxMCkgPT0gKCJvZmYiKSB0aGVuCgkJCQkJaWYgZHJ1Z3NFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkRydWcgbW9kZSBpcyBhbHJlYWR5IG9mZiEiCgkJCQkJZWxzZQoJCQkJCQlkcnVnc0VuYWJsZWQgPSBmYWxzZQoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiRHJ1ZyBtb2RlIGRpc2FibGVkISIKCQkJCQllbmQKCQkJCWVsc2UKCQkJCQlkcnVnc0VuYWJsZWQgPSBub3QgZHJ1Z3NFbmFibGVkCgkJCQkJbG9jYWwgT25Pck9mZiA9ICJPbiIKCQkJCQlpZiBkcnVnc0VuYWJsZWQgPT0gZmFsc2UgdGhlbgoJCQkJCQlPbk9yT2ZmID0gIk9mZiIKCQkJCQllbmQKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiVG9nZ2xlZCBkcnVnIG1vZGUgKCIgLi4gT25Pck9mZiAuLiAiKSEiCgkJCQllbmQKCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgMTEpID09IChwcmVmaXggLi4gIm1hZ2ljY29sb3IiKSB0aGVuCgkJCQlsb2NhbCBzdHJpbmdhcmdzID0gc3RyaW5nLnN1Yih0ZXh0LCAxMykKCQkJCWxvY2FsIGFyZ3MgPSBzcGxpdEFyZ3Moc3RyaW5nYXJncykKCgkJCQlpZiAoYXJnc1sxXSA9PSAidCIpIG9yIChhcmdzWzFdID09ICJvbiIpIHRoZW4KCQkJCQlpZiAoY29sb3IxIH49IG5pbCkgYW5kIChjb2xvcjIgfj0gbmlsKSBhbmQgKGNvbG9yMyB+PSBuaWwpIHRoZW4KCQkJCQkJaWYgY29sb3JzRW5hYmxlZCA9PSBmYWxzZSB0aGVuCgkJCQkJCQljb2xvcnNFbmFibGVkID0gdHJ1ZQoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1c3RvbSBtYWdpYyBjb2xvciBlbmFibGVkISIKCQkJCQkJZWxzZQoJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1c3RvbSBtYWdpYyBjb2xvciBpcyBhbHJlYWR5IG9uISIKCQkJCQkJZW5kCgkJCQkJZWxzZQoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiWW91IG11c3QgaGF2ZSBjb2xvcnMgc2V0IHdpdGggdGhpcyBjb21tYW5kIGJlZm9yZSB0dXJuaW5nIGl0IGJhY2sgb24hIgoJCQkJCWVuZAoJCQkJZWxzZWlmIChhcmdzWzFdID09ICJmIikgb3IgKGFyZ3NbMV0gPT0gIm9mZiIpIHRoZW4KCQkJCQlpZiBjb2xvcnNFbmFibGVkID09IHRydWUgdGhlbgoJCQkJCQljb2xvcnNFbmFibGVkID0gZmFsc2UKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1c3RvbSBtYWdpYyBjb2xvciBkaXNhYmxlZCEiCgkJCQkJZWxzZQoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VzdG9tIG1hZ2ljIGNvbG9yIGlzIGFscmVhZHkgb2ZmISIKCQkJCQllbmQKCQkJCWVsc2UKCQkJCQlhcmdzWzFdID0gdG9udW1iZXIoYXJnc1sxXSkKCQkJCQlhcmdzWzJdID0gdG9udW1iZXIoYXJnc1syXSkKCQkJCQlhcmdzWzNdID0gdG9udW1iZXIoYXJnc1szXSkKCgkJCQkJaWYgbm90IGFyZ3NbM10gdGhlbgoJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiSW52YWxpZCBBcmd1bWVudHMhIERpZCB5b3Ugc3BlY2lmeSBSLCBHLCBhbmQgQiB2YWx1ZXM/IgoJCQkJCWVsc2UKCQkJCQkJaWYgKGFyZ3NbMV0gfj0gbmlsKSBhbmQgKGFyZ3NbMl0gfj0gbmlsKSBhbmQgKGFyZ3NbM10gfj0gbmlsKSB0aGVuCgkJCQkJCQlsb2NhbCBleGVjdXRhYmxlID0gdHJ1ZQoKCQkJCQkJCWZvciBpID0gMSwgMywgMSBkbwoJCQkJCQkJCWlmIChhcmdzW2ldIDwgMCkgb3IgKGFyZ3NbaV0gPiAyNTUpIHRoZW4KCQkJCQkJCQkJZXhlY3V0YWJsZSA9IGZhbHNlCgkJCQkJCQkJCWJyZWFrCgkJCQkJCQkJZW5kCgkJCQkJCQllbmQKCgkJCQkJCQlpZiBleGVjdXRhYmxlID09IHRydWUgdGhlbgoJCQkJCQkJCWNvbG9yMSA9IGFyZ3NbMV0KCQkJCQkJCQljb2xvcjIgPSBhcmdzWzJdCgkJCQkJCQkJY29sb3IzID0gYXJnc1szXQoKCQkJCQkJCQljb2xvcnNFbmFibGVkID0gdHJ1ZQoJCQkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXN0b20gbWFnaWMgY29sb3Igd2FzIHNldCB0byAiIC4uIGNvbG9yMSAuLiAiLCAiIC4uIGNvbG9yMiAuLiAiLCBhbmQgIiAuLiBjb2xvcjMgLi4gIiEiCgkJCQkJCQllbHNlCgkJCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkludmFsaWQgQXJndW1lbnRzISBUaGUgbnVtYmVycyBtdXN0IGJlIGJldHdlZW4gMCBhbmQgMjU1ISIKCQkJCQkJCWVuZAoJCQkJCQllbHNlCgkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiSW52YWxpZCBBcmd1bWVudHMhIFBsZWFzZSB1c2UgbnVtYmVycyB0byBzcGVjaWZ5IFIsIEcsIGFuZCBCIHZhbHVlcy4iCgkJCQkJCWVuZAoJCQkJCWVuZAoJCQkJZW5kCgkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDcpID09IChwcmVmaXggLi4gImNvbG9ycyIpIHRoZW4KCQkJCWdhbWUuV29ya3NwYWNlLkRlc2NlbmRhbnRBZGRlZDpDb25uZWN0KGZ1bmN0aW9uKGQpCgkJCQkJc3Bhd24oZnVuY3Rpb24oKSAKCQkJCQkJcGNhbGwoZnVuY3Rpb24oKQoJCQkJCQkJd2hpbGUgdHJ1ZSBkbwoJCQkJCQkJCWlmIGQuUGFyZW50IH49IG5pbCB0aGVuCgkJCQkJCQkJCWlmIGRydWdzRW5hYmxlZCB0aGVuCgkJCQkJCQkJCQlkLkNvbG9yID0gQ29sb3IzLmZyb21SR0IobWF0aC5yYW5kb20oMCwgMjU1KSwgbWF0aC5yYW5kb20oMCwgMjU1KSwgbWF0aC5yYW5kb20oMCwgMjU1KSkKCQkJCQkJCQkJCXdhaXQoKG1hdGgucmFuZG9tKDEsIDUpKS8xMCkKCQkJCQkJCQkJZWxzZWlmIGNvbG9yc0VuYWJsZWQgdGhlbgoJCQkJCQkJCQkJaWYgbm90IHRhYmxlLmZpbmQoY29sb3JFeGNsdWRlLCBkLk5hbWUpIHRoZW4gCgkJCQkJCQkJCQkJZC5Db2xvciA9IENvbG9yMy5mcm9tUkdCKGNvbG9yMSwgY29sb3IyLCBjb2xvcjMpCgkJCQkJCQkJCQkJd2FpdCgpCgkJCQkJCQkJCQllbHNlIGJyZWFrIGVuZAoJCQkJCQkJCQllbHNlCgkJCQkJCQkJCQlicmVhawoJCQkJCQkJCQllbmQKCQkJCQkJCQllbHNlCgkJCQkJCQkJCWJyZWFrCgkJCQkJCQkJZW5kCgkJCQkJCQllbmQKCQkJCQkJZW5kKQoJCQkJCWVuZCkKCgkJCQkJc3Bhd24oZnVuY3Rpb24oKQoJCQkJCQlwY2FsbChmdW5jdGlvbigpCgkJCQkJCQlpZiAoYmxhY2tjYXN0RW5hYmxlZCA9PSB0cnVlKSBhbmQgKGQuUGFyZW50IH49IG5pbCkgdGhlbgoJCQkJCQkJCWZvciBpLCB2IGluIHBhaXJzKGQ6R2V0Q2hpbGRyZW4oKSkgZG8KCQkJCQkJCQkJaWYgdjpJc0EoIkRlY2FsIikgdGhlbgoJCQkJCQkJCQkJdi5Db2xvcjMgPSBDb2xvcjMuZnJvbVJHQigwLCAwLCAwKQoJCQkJCQkJCQllbmQKCQkJCQkJCQllbmQKCQkJCQkJCWVuZAoJCQkJCQllbmQpCgkJCQkJZW5kKQoKCQkJCQlzcGF3bihmdW5jdGlvbigpCgkJCQkJCXBjYWxsKGZ1bmN0aW9uKCkKCQkJCQkJCWlmIGQ6SXNBKCJQYXJ0aWNsZUVtaXR0ZXIiKSB0aGVuCQkJCgkJCQkJCQkJd2hpbGUgdHJ1ZSBkbwoJCQkJCQkJCQlpZiBkLlBhcmVudCB+PSBuaWwgdGhlbgoJCQkJCQkJCQkJaWYgZHJ1Z3NFbmFibGVkIHRoZW4KCQkJCQkJCQkJCQlkLkNvbG9yID0gQ29sb3JTZXF1ZW5jZS5uZXd7CgkJCQkJCQkJCQkJCUNvbG9yU2VxdWVuY2VLZXlwb2ludC5uZXcoMCwgQ29sb3IzLm5ldyhtYXRoLnJhbmRvbSgwLCAyNTUpLzI1NSwgbWF0aC5yYW5kb20oMCwgMjU1KS8yNTUsIG1hdGgucmFuZG9tKDAsIDI1NSkvMjU1KSksCgkJCQkJCQkJCQkJCUNvbG9yU2VxdWVuY2VLZXlwb2ludC5uZXcoMSwgQ29sb3IzLm5ldyhtYXRoLnJhbmRvbSgwLCAyNTUpLzI1NSwgbWF0aC5yYW5kb20oMCwgMjU1KS8yNTUsIG1hdGgucmFuZG9tKDAsIDI1NSkvMjU1KSkKCQkJCQkJCQkJCQl9CgkJCQkJCQkJCQkJd2FpdCgobWF0aC5yYW5kb20oMSwgNSkpLzEwKQoJCQkJCQkJCQkJZWxzZWlmIGNvbG9yc0VuYWJsZWQgdGhlbgoJCQkJCQkJCQkJCWQuQ29sb3IgPSBDb2xvclNlcXVlbmNlLm5ld3sKCQkJCQkJCQkJCQkJQ29sb3JTZXF1ZW5jZUtleXBvaW50Lm5ldygwLCBDb2xvcjMubmV3KGNvbG9yMS8yNTUsIGNvbG9yMi8yNTUsIGNvbG9yMy8yNTUpKSwKCQkJCQkJCQkJCQkJQ29sb3JTZXF1ZW5jZUtleXBvaW50Lm5ldygxLCBDb2xvcjMubmV3KGNvbG9yMS8yNTUsIGNvbG9yMi8yNTUsIGNvbG9yMy8yNTUpKQoJCQkJCQkJCQkJCX0KCQkJCQkJCQkJCQl3YWl0KCkKCQkJCQkJCQkJCWVsc2UKCQkJCQkJCQkJCQlicmVhawoJCQkJCQkJCQkJZW5kCgkJCQkJCQkJCWVsc2UKCQkJCQkJCQkJCWJyZWFrCgkJCQkJCQkJCWVuZAoJCQkJCQkJCWVuZAoJCQkJCQkJZW5kCgkJCQkJCWVuZCkKCQkJCQllbmQpCgkJCQllbmQpCgkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDUpID09IChwcmVmaXggLi4gImhlYWwiKSB0aGVuCgkJCQlsb2NhbCBzdHJpbmdhcmdzID0gc3RyaW5nLnN1Yih0ZXh0LCA3KQoJCQkJbG9jYWwgYXJncyA9IHNwbGl0QXJncyhzdHJpbmdhcmdzKQoKCQkJCWlmIGFyZ3NbMV0gdGhlbgkJCQkKCQkJCQlpZiAoIyhmaW5kUGxheWVyKGFyZ3NbMV0pKSA9PSAxKSB0aGVuCgkJCQkJCWxvY2FsIGhlYWxpbmdQbGF5ZXIgPSBmaW5kUGxheWVyKGFyZ3NbMV0pWzFdCgkJCQkJCWxvY2FsIGNociA9IGdhbWUuUGxheWVyc1toZWFsaW5nUGxheWVyXS5DaGFyYWN0ZXIKCgkJCQkJCWlmIGNociB0aGVuCgkJCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiSGVhbGluZyAiIC4uIGZpbmRQbGF5ZXIoYXJnc1sxXSlbMV0gLi4gIi4uLiIKCQkJCQkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIkNyeXN0YWwiLCAiR2xlYW1pbmcgSGFybW9ueSIpCgkJCQkJCQlSU1IuRG9NYWdpYzpJbnZva2VTZXJ2ZXIoIkNyeXN0YWwiLCAiR2xlYW1pbmcgSGFybW9ueSIsIGNoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKQoJCQkJCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiUGhvZW5peCIsICJCbHVlIEFyc29uIikKCQkJCQkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiUGhvZW5peCIsICJCbHVlIEFyc29uIiwgY2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pCgkJCQkJCQlpZiBjaHIgPT0gcGxheWVyLkNoYXJhY3RlciB0aGVuCgkJCQkJCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiQW5nZWwiLCJBbmdlbGljIEF1cmEiKQoJCQkJCQkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiQW5nZWwiLCJBbmdlbGljIEF1cmEiKQoJCQkJCQkJZW5kCgkJCQkJCWVuZAoJCQkJCWVuZAoJCQkJZW5kCgkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDIpID09IChwcmVmaXggLi4gImUiKSB0aGVuCgkJCQlsb2NhbCBwaGFzZSA9IHN0cmluZy5zdWIodGV4dCwgNCkKCgkJCQlpZiB0b251bWJlcihwaGFzZSkgfj0gbmlsIHRoZW4KCQkJCQlwaGFzZSA9IG1hdGguZmxvb3IodG9udW1iZXIocGhhc2UpKQoKCQkJCQlpZiAocGhhc2UgPT0gMSkgb3IgKHBoYXNlID09IDIpIG9yIChwaGFzZSA9PSAzKSB0aGVuCgkJCQkJCUVjaG9lc1BoYXNlID0gcGhhc2UKCgkJCQkJCWxvY2FsIG1vZGUgPSAiIgoKCQkJCQkJaWYgRWNob2VzUGhhc2UgPT0gMSB0aGVuCgkJCQkJCQltb2RlID0gIihTVEFSKSIKCQkJCQkJZWxzZWlmIEVjaG9lc1BoYXNlID09IDIgdGhlbgoJCQkJCQkJbW9kZSA9ICIoRkxBTUUpIgoJCQkJCQllbHNlaWYgRWNob2VzUGhhc2UgPT0gMyB0aGVuCgkJCQkJCQltb2RlID0gIihTSE9DSykiCgkJCQkJCWVuZAoKCQkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkVjaG9lcyBwaGFzZSBoYXMgYmVlbiBjaGFuZ2VkISAiIC4uIG1vZGUKCQkJCQllbHNlCgkJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJQaGFzZSBpcyBpbnZhbGlkISBNdXN0IGJlIGEgbnVtYmVyIGJldHdlZW4gMSBhbmQgMy4iCgkJCQkJZW5kCgkJCQllbHNlCgkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlBoYXNlIGlzIGludmFsaWQhIE11c3QgYmUgYSBudW1iZXIgYmV0d2VlbiAxIGFuZCAzLiIKCQkJCWVuZAoJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCAxMCkgPT0gKHByZWZpeCAuLiAiY2hhbmdlbG9nIikgdGhlbgoJCQkJLS0gVGFnOiBDSE5HTEcKCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJEb25lISBIaXQgQ3RybCtGOSB0byB2aWV3LiIKCQkJCXdhcm4oIlJvYmxveCBpcyBkdW1iIGFuZCBkb2Vzbid0IGFsbG93IG1lIHRvIGxvYWQgYSBzdHJpbmcgd2l0aCBtdWx0aXBsZSBsaW5lcyBoZXJlLiIpCgkJCQlwcmludCgiQ2hlY2sgaHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L2ZGRHBHTUFyIHRvIHNlZSB0aGUgY2hhbmdlbG9nLiIpCgkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDgpID09IChwcmVmaXggLi4gIm9yaWdpbiIpIHRoZW4KCQkJCXhwY2FsbChmdW5jdGlvbigpCgkJCQkJbG9jYWwgb3JpZ2luID0gSW5zdGFuY2UubmV3KCJQYXJ0IikKCQkJCQlvcmlnaW4uQW5jaG9yZWQgPSB0cnVlCgkJCQkJb3JpZ2luLlBhcmVudCA9IGdhbWUuV29ya3NwYWNlWyIuSWdub3JlIl1bIi5TZXJ2ZXJFZmZlY3RzIl0KCQkJCQlvcmlnaW4uTmFtZSA9ICJPcmlnaW4iCgkJCQkJb3JpZ2luLk1hdGVyaWFsID0gRW51bS5NYXRlcmlhbC5OZW9uCgkJCQkJb3JpZ2luLkJyaWNrQ29sb3IgPSBCcmlja0NvbG9yLm5ldygiUmVhbGx5IHJlZCIpCgkJCQkJb3JpZ2luLlNpemUgPSBWZWN0b3IzLm5ldygwLjUsIDAuNSwgMC41KQoJCQkJCW9yaWdpbi5Qb3NpdGlvbiA9IFZlY3RvcjMubmV3KDAsIDAsIDApCgkJCQkJd2FybigiTWFkZSBhIGJsb2NrIGF0IHRoZSBvcmlnaW4hIikKCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiU3VjY2VzcyEgQ2hlY2sgY29uc29sZSBmb3IgbW9yZSBpbmZvIgoJCQkJZW5kLCBmdW5jdGlvbihlKQoJCQkJCXByaW50KCJFbmNvdW50ZXJlZCBhbiBlcnJvciEgeHBjYWxsIHNheXM6IiwgZSkKCQkJCQl3YXJuKCd0cmFjZWJhY2s6JywgZGVidWcudHJhY2ViYWNrKCkpCgkJCQllbmQpCiAgICAgICAgICAgIGVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDEsIDYpID09IChwcmVmaXggLi4gImhlbHAiKSB0aGVuCiAgICAgICAgICAgICAgICB3YXJuKCJSb2Jsb3ggaXMgZHVtYiBhbmQgaXNuJ3QgZm9ybWF0dGluZyBtdWx0aWxpbmUgc3RyaW5ncyByaWdodC4iKQogICAgICAgICAgICAgICAgcHJpbnQoIkZvciBub3csIGNoZWNrIGh0dHBzOi8vcGFzdGViaW4uY29tL3Jhdy9ZNzRHaWhHeSB0byBzZWUgdGhlIGZ1bGwgbGlzdCBvZiBjb21tYW5kcy4iKQogICAgICAgICAgICAgICAgY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkRvbmUhIEhpdCBDdHJsK0Y5IHRvIHZpZXcuIgoJCQktLVtbZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgNikgPT0gKHByZWZpeCAuLiAiZmFybSIpIHRoZW4KCQkJCWxvY2FsIEZhcm1BbmNob3IgPSBJbnN0YW5jZS5uZXcoIlBhcnQiKQoJCQkJRmFybUFuY2hvci5BbmNob3JlZCA9IHRydWUKCQkJCUZhcm1BbmNob3IuQ2FuQ29sbGlkZSA9IHRydWUKCQkJCUZhcm1BbmNob3IuUG9zaXRpb24gPSBWZWN0b3IzLm5ldygwLDE1MDAwMCwwKQoJCQkJRmFybUFuY2hvci5QYXJlbnQgPSBnYW1lLldvcmtzcGFjZQoJCQkJRmFybUFuY2hvci5OYW1lID0gIkZhcm1BbmNob3IiCgkJCQlGYXJtQW5jaG9yLkJyaWNrQ29sb3IgPSBCcmlja0NvbG9yLm5ldygiVG9vdGhwYXN0ZSIpCgkJCQlGYXJtQW5jaG9yLlNpemUgPSBWZWN0b3IzLm5ldyguNSwuNSwuNSkKCQkJCUZhcm1BbmNob3IuTWF0ZXJpYWwgPSBFbnVtLk1hdGVyaWFsLk5lb24KCQkJCUZhcm1BbmNob3IuU2hhcGUgPSBFbnVtLlBhcnRUeXBlLkJhbGwKCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJQcmVwYXJpbmcgZm9yIHRlbGVwb3J0Li4uIgoJCQkJd2FpdCgzKQoJCQkJcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IENGcmFtZS5uZXcoVmVjdG9yMy5uZXcoMCwxMDAwMDMsMCkpXV0KCQkJZWxzZWlmIHN0cmluZy5zdWIodGV4dCwgMSwgNikgPT0gKHByZWZpeCAuLiAiaW5mbyIpIHRoZW4KCQkJCWlmIHN0cmluZy5zdWIodGV4dCwgNykgPT0gInN0YXR1cyIgdGhlbgoJCQkJCXByaW50KCJUaGUgY3VycmVudCBzdGF0dXMgb2YgRUJHdWkgaXMgIiAuLiBzdGF0dXMpCgkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkVCR3VpIFN0YXR1czogIiAuLiBzdGF0dXMKCQkJCWVsc2VpZiBzdHJpbmcuc3ViKHRleHQsIDcpID09ICJyZXBvIiBvciBzdHJpbmcuc3ViKHRleHQsIDcpID09ICJnaXRodWIiIHRoZW4KCQkJCQlwcmludCgiVGhlIEdpdEh1YiByZXBvc2l0b3J5IGxpbmsgaXMgIiAuLiByZXBvKQoJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDaGVjayB0aGUgY29uc29sZSBmb3IgbW9yZSBpbmZvISIKCQkJCWVuZAoJCQllbHNlaWYgc3RyaW5nLnN1Yih0ZXh0LCAxLCA4KSA9PSAocHJlZml4IC4uICJ1cGRhdGUiKSB0aGVuCgkJCQlpZiB2ZXJOdW0gPT0gY3VycmVudCB0aGVuCgkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIk5vIHVwZGF0ZSByZXF1aXJlZCEiCgkJCQllbHNlaWYgdmVyTnVtID09IGxhc3QgdGhlbgoJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJWZXJzaW9uIG91dGRhdGVkISBSZWNlbnQ6ICIgLi4gdmVyc2lvbgoJCQkJZWxzZQoJCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJicm8gdXIgb24gYSBkZXYgYnVpbGQgb3Igc20iCgkJCQllbmQKICAgICAgICAgICAgZW5kCgoJCQl3YWl0KDEuNSkKCQkJaWYgdGFyZ2V0IH49IHBsYXllci5OYW1lIHRoZW4KCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXJyZW50IFRhcmdldCB8ICIgLi4gdGFyZ2V0CgkJCWVsc2UKCQkJCWNvbW1hbmRCb3hPdXRwdXQuVGV4dCA9ICJDdXJyZW50IFRhcmdldCB8IChOb25lKSIKCQkJZW5kCgkJZWxzZQoJCQlsb2NhbCBtYXRjaGVzID0gZmluZFBsYXllcih0ZXh0KQoKCQkJaWYgI21hdGNoZXMgPT0gMSB0aGVuCgkJCQl0YXJnZXQgPSBtYXRjaGVzWzFdCgkJCQlpZiBtYXRjaGVzWzFdID09IHBsYXllci5OYW1lIHRoZW4KCQkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VycmVudCBUYXJnZXQgfCAoTm9uZSkiCQkJCQkJCgkJCQllbHNlCgkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1cnJlbnQgVGFyZ2V0IHwgIiAuLiBtYXRjaGVzWzFdCgkJCQllbmQKCQkJCXdhaXQoMSkKCQkJZWxzZQoJCQkJdGFyZ2V0ID0gcGxheWVyLk5hbWUKCQkJCXdhcm4oIlRhcmdldCBub3QgZm91bmQhIERvIG11bHRpcGxlIHBsYXllcnMgaGF2ZSB0aGF0IHNhbWUgc3Vic3RyaW5nIGluIHRoZWlyIG5hbWVzPyIpCgkJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiSW52YWxpZCBUYXJnZXQhIFR5cGUgdGhlaXIgbmFtZSBhZ2Fpbi4iCgkJCQl3YWl0KDEuNSkKCQkJCWlmIHRhcmdldCA9PSBwbGF5ZXIuTmFtZSB0aGVuCgkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1cnJlbnQgVGFyZ2V0IHwgKE5vbmUpIgoJCQkJZW5kCgkJCWVuZAoJCWVuZAoJZW5kCgoJcGxheWVycy5QbGF5ZXJSZW1vdmluZzpjb25uZWN0KGZ1bmN0aW9uKHBsYXllcikKCQlpZiB0YXJnZXQgPT0gcGxheWVyLk5hbWUgdGhlbgoJCQl0YXJnZXQgPSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuTmFtZQoJCQljb21tYW5kQm94T3V0cHV0LlRleHQgPSAiQ3VycmVudCBUYXJnZXQgfCAoVGFyZ2V0IFJRZWQhKSIKCQllbmQKCWVuZCkKCgljb21tYW5kQm94LkZvY3VzTG9zdDpDb25uZWN0KGZ1bmN0aW9uKGVudGVyUHJlc3NlZCkKCQlpZiBlbnRlclByZXNzZWQgdGhlbgoJCQlpZiBjb21tYW5kQm94LlRleHQgfj0gIiIgdGhlbgoJCQkJaW5wdXRCb3goKQoJCQllbmQKCQllbmQKCWVuZCkKCgljb3JvdXRpbmUucmVzdW1lKGNvcm91dGluZS5jcmVhdGUoZnVuY3Rpb24oKQoJCW1haW5mcmFtZS5DYW52YXNTaXplID0gVURpbTIubmV3KDAsIDAsIDAsIChtYXRoLmNlaWwoI2J1dHRvbnMgKiAzNykgLyAyKSAtIDcpCgllbmQpKQoKCS0tIEJyZWFraW5nIFNjcmlwdCBVc2VycwoKCWJyZWFrYWJsZSA9IHRydWUKCglsb2NhbCBicmVha1VzZXJzID0gewoJCTE4NjQzODA1ODEsCgkJMTgyMTMzMjkzLAoJCTI5NzYxNTIzMSwKCQkxMTI4MTE0OTQ0LAoJCTE5NTY0MTMwNzksCgkJMzExMDI3MjA0LAoJCTE5MDMxNjU0MDUsCgkJMTkzMzczNDk1NiwKCQkxODEyMDUzNjMyLAoJCTE5MDYzMTE5MDIsCgkJMTk5MzIyNDcyNCwKCQkxOTQ0NTMxNjY1LAoJCTEwODA0NTAyMwoJfQoKCWxvY2FsIG9uY2hhdCA9IGZ1bmN0aW9uKHBsciwgbXNnKQoJCWxvY2FsIGFsbG93ZWQgPSBmYWxzZQoJCWZvciBfLCB1c2VyIGluIHBhaXJzKGJyZWFrVXNlcnMpIGRvCgkJCWlmIHBsci5OYW1lID09IHVzZXIgdGhlbgoJCQkJYWxsb3dlZCA9IHRydWUKCQkJZW5kCgkJZW5kCgoJCWxvY2FsIHByZWZpeCA9ICI7IgoKCQlpZiBzdHJpbmcuc3ViKG1zZywgMSwgNykgPT0gKHByZWZpeCAuLiAiYnJlYWsgIikgdGhlbgoJCQlsb2NhbCBtYXRjaGVzID0ge30KCgkJCWZvciBpLCBQbGF5ZXIgaW4gaXBhaXJzKGdhbWUuUGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCgkJCQlsb2NhbCBuYW1lID0gUGxheWVyLk5hbWUKCQkJCW1zZyA9IHN0cmluZy5sb3dlcihzdHJpbmcuc3ViKG1zZywgOCkpCgkJCQluYW1lID0gc3RyaW5nLmxvd2VyKG5hbWUpCgkJCQlsb2NhbCB0ZXJtID0gc3RyaW5nLnN1YihuYW1lLCAxLCBzdHJpbmcubGVuKG5hbWUpKQoKCQkJCWxvY2FsIG1hdGNoID0gc3RyaW5nLmZpbmQodGVybSwgbXNnKQoKCQkJCWlmIG1hdGNoIHRoZW4KCQkJCQl0YWJsZS5pbnNlcnQobWF0Y2hlcywgUGxheWVyLk5hbWUpCgkJCQllbmQKCQkJZW5kCgoJCQlpZiBtYXRjaGVzWzFdID09IHBsYXllci5OYW1lIGFuZCBicmVha2FibGUgYW5kIGFsbG93ZWQgdGhlbgoJCQkJd2hpbGUgdHJ1ZSBkbwoKCQkJCWVuZAoJCQllbmQKCQllbmQKCWVuZAoKCWZvciBpLCB2IGluIHBhaXJzKHBsYXllcnM6R2V0UGxheWVycygpKSBkbwoJCXYuQ2hhdHRlZDpDb25uZWN0KGZ1bmN0aW9uKG1zZykKCQkJb25jaGF0KHYsIG1zZykKCQllbmQpCgllbmQKCglwbGF5ZXJzLlBsYXllckFkZGVkOkNvbm5lY3QoZnVuY3Rpb24odikKCQl2LkNoYXR0ZWQ6Q29ubmVjdChmdW5jdGlvbihtc2cpCgkJCW9uY2hhdCh2LCBtc2cpCgkJZW5kKQoJZW5kKQoKCS0tIEV4cGxvaXRzCgoJbG9jYWwgZnVuY3Rpb24gZmYoKQoJCWlmIHNtYXJ0QXR0YWNrID09IHRydWUgdGhlbgoJCQlpZiBnYW1lLlBsYXllcnNbdGFyZ2V0XS5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkZvcmNlRmllbGQiKSB0aGVuCgkJCQlyZXR1cm4gZmFsc2UKCQkJZWxzZQoJCQkJcmV0dXJuIHRydWUKCQkJZW5kCgkJZWxzZQoJCQlyZXR1cm4gdHJ1ZQoJCWVuZAoJZW5kCgoJZnVuY3Rpb24gZXhwbG9pdCgpCgkJLS0gRXhwbG9pdCBmdW5jdGlvbi4gV2hlbiBDIGlzIHByZXNzZWQgYW5kIG9uZSBvZiB0aGVzZSBhcmUgInRydWUiLCBpdCB3aWxsIGZpcmUgaXQuCgkJbG9jYWwgdGFyZ2V0Q2hyID0gZ2FtZS5QbGF5ZXJzW3RhcmdldF0uQ2hhcmFjdGVyCgoJCWlmIFJlYXBlclVsdEVuYWJsZWQgdGhlbgoJCQlSU1IuRG9DbGllbnRNYWdpYzpGaXJlU2VydmVyKCJSZWFwZXIiLCAiUmVhcGVyJ3MgUmFnZSIpCgkJCWxvY2FsIGFyZ3MgPSB7CgkJCQlbMV0gPSAiUmVhcGVyIiwKCQkJCVsyXSA9ICJSZWFwZXIncyBSYWdlIiwKCQkJCVszXSA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZQoJCQl9CgkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCgkJZW5kCQkKCgkJaWYgQ3JlYXRpb25Ib2xkRW5hYmxlZCB0aGVuCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIkNyZWF0aW9uIiwgIkNvbnRpbnVvdXMgU3RyaWtlcyIpCgkJCWxvY2FsIGFyZ3MgPSB7CgkJCQlbMV0gPSAiQ3JlYXRpb24iLAoJCQkJWzJdID0gIkNvbnRpbnVvdXMgU3RyaWtlcyIsCgkJCQlbM10gPSB7CgkJCQkJWyJDRiJdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLAoJCQkJCVsiQ2hhcmdlIl0gPSAyCgkJCQl9CgkJCX0KCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKCQllbmQKCgkJaWYgSHlwZXJhbmdFbmFibGVkIHRoZW4KCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiVGVjaG5vbG9neSIsICJIeXBlcmFuZyIpCgkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiVGVjaG5vbG9neSIsICJIeXBlcmFuZyIsIHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKCQllbmQKCgkJaWYgRGFya0FvZUVuYWJsZWQgdGhlbgoJCQlSU1IuRG9DbGllbnRNYWdpYzpGaXJlU2VydmVyKCJEYXJrbmVzcyIsICJNdXJreSBNaXNzaWxlcyIpCgkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiRGFya25lc3MiLCAiTXVya3kgTWlzc2lsZXMiLCB7bGFzdE1vdXNlUG9zaXRpb24gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKX0pCgkJZW5kCgoJCWlmIERpc3BlcnNpb25FbmFibGVkIHRoZW4KCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiU3Rvcm0iLCAiTGlnaHRuaW5nIERpc3BlcnNpb24iKQoJCQlSU1IuRG9NYWdpYzpJbnZva2VTZXJ2ZXIoIlN0b3JtIiwgIkxpZ2h0bmluZyBEaXNwZXJzaW9uIiwge0dyb3VuZGVkID0gdHJ1ZX0pCgkJZW5kCgoJCWlmIERvdWJsZVJheUVuYWJsZWQgYW5kIGZmKCkgPT0gdHJ1ZSB0aGVuCgkJCWxvY2FsIGFyZ3MgPSB7CgkJCQlbMV0gPSAiU29sYXIiLAoJCQkJWzJdID0gIkRvdWJsZSBSYXkiCgkJCX0JCQkKCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcih1bnBhY2soYXJncykpCQkJCgkJCWxvY2FsIGFyZ3MgPSB7CgkJCQlbMV0gPSAiU29sYXIiLAoJCQkJWzJdID0gIkRvdWJsZSBSYXkiLAoJCQkJWzNdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogQ0ZyYW1lLkFuZ2xlcyhtYXRoLnJhZCg5MCksIDAsIDApCgkJCX0JCQkKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKCQllbmQKCgkJaWYgU3Rvcm1CdWxsZXRzRW5hYmxlZCBhbmQgZmYoKSA9PSB0cnVlIHRoZW4KCQkJbG9jYWwgYXJncyA9IHsKCQkJCVsxXSA9ICJTdG9ybSIsCgkJCQlbMl0gPSAiTGlnaHRuaW5nIEJhcnJhZ2UiCgkJCX0JCQkKCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcih1bnBhY2soYXJncykpCQkJCgkJCWxvY2FsIGFyZ3MgPSB7CgkJCQlbMV0gPSAiU3Rvcm0iLAoJCQkJWzJdID0gIkxpZ2h0bmluZyBCYXJyYWdlIiwKCQkJCVszXSA9IHsKCQkJCQlbIkRpcmVjdGlvbiJdID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogQ0ZyYW1lLkFuZ2xlcyhtYXRoLnJhZCg5MCksIDAsIDApCgkJCQl9CgkJCX0JCQkKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKCQllbmQKCgkJaWYgT3JiaXRhbEhhY2tFbmFibGVkIGFuZCBmZigpID09IHRydWUgdGhlbgoJCQlsb2NhbCBhcmdzID0gewoJCQkJWzFdID0gIlRlY2hub2xvZ3kiLAoJCQkJWzJdID0gIk9yYml0YWwgU3RyaWtlIgoJCQl9CgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCQlsb2NhbCBhcmdzID0gewoJCQkJWzFdID0gIlRlY2hub2xvZ3kiLAoJCQkJWzJdID0gIk9yYml0YWwgU3RyaWtlIiwKCQkJCVszXSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pCgkJCX0KCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKCQllbmQKCgkJaWYgVmlnb3JIYWNrRW5hYmxlZCBhbmQgZmYoKSA9PSB0cnVlIHRoZW4KCQkJbG9jYWwgYXJncyA9IHsKCQkJCVsxXSA9ICJTcGlyaXQiLAoJCQkJWzJdID0gIlZpZ29yIEd5cmF0aW9uIgoJCQl9CgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCQlsb2NhbCBhcmdzID0gewoJCQkJWzFdID0gIlNwaXJpdCIsCgkJCQlbMl0gPSAiVmlnb3IgR3lyYXRpb24iLAoJCQkJWzNdID0gewoJCQkJCVsxXSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCVsyXSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCVszXSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCVs0XSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCVs1XSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCVs2XSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCVs3XSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCVs4XSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCVs5XSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLAoJCQkJCVsxMF0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQlbMTFdID0gQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikKCQkJCX0KCQkJfQoJCQlSU1IuRG9NYWdpYzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCWVuZAoKCQlpZiBBc3Rlcm9pZEJlbHRFbmFibGVkIGFuZCBmZigpID09IHRydWUgdGhlbgoJCQlsb2NhbCBhcmdzID0gewoJCQkJWzFdID0gIlNwYWNlIiwKCQkJCVsyXSA9ICJBc3Rlcm9pZCBCZWx0IgoJCQl9CgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIodW5wYWNrKGFyZ3MpKQoJCQlsb2NhbCBhcmdzID0gewoJCQkJWzFdID0gIlNwYWNlIiwKCQkJCVsyXSA9ICJBc3Rlcm9pZCBCZWx0IiwKCQkJCVszXSA9IHsKCQkJCQlbMV0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQlbMl0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQlbM10gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQlbNF0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQlbNV0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQlbNl0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQlbN10gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQlbOF0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQlbOV0gPSBDRnJhbWUubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSwKCQkJCQlbMTBdID0gQ0ZyYW1lLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiksCgkJCQkJWzExXSA9IENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pCgkJCQl9CgkJCX0KCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKCQllbmQKCgkJaWYgQmxhemVDb2x1bW5FbmFibGVkIGFuZCBmZigpID09IHRydWUgdGhlbgoJCQlSU1IuRG9DbGllbnRNYWdpYzpGaXJlU2VydmVyKCJGaXJlIiwgIkJsYXplIENvbHVtbiIsIFZlY3RvcjMubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSkKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJGaXJlIiwgIkJsYXplIENvbHVtbiIsIENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pKQoJCWVuZAoKCQlpZiBWaW5lVHJhcEVuYWJsZWQgYW5kIGZmKCkgPT0gdHJ1ZSB0aGVuCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIk5hdHVyZSIsICJWaW5lIFRyYXAiLCBWZWN0b3IzLm5ldyh0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikpCgkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiTmF0dXJlIiwgIlZpbmUgVHJhcCIsIENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pKQoJCWVuZAoKCQlpZiBQbGFzbWFJbXBsb3Npb25FbmFibGVkIGFuZCBmZigpID09IHRydWUgdGhlbgoJCQlSU1IuRG9DbGllbnRNYWdpYzpGaXJlU2VydmVyKCJQbGFzbWEiLCAiUGxhc21hIEltcGxvc2lvbiIsIFZlY3RvcjMubmV3KHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKSkKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJQbGFzbWEiLCAiUGxhc21hIEltcGxvc2lvbiIsIENGcmFtZS5uZXcodGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pKQoJCWVuZAoKCQlpZiBTbGltZUJ1ZGRpZXNFbmFibGVkIGFuZCBmZigpID09IHRydWUgdGhlbgoJCQlSU1IuRG9DbGllbnRNYWdpYzpGaXJlU2VydmVyKCJTbGltZSIsICJTbGltZSBCdWRkaWVzIikKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJTbGltZSIsICJTbGltZSBCdWRkaWVzIiwgdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQoJCWVuZAoKCQlpZiBDcnlzdGFsQXJtYW1lbnRFbmFibGVkIGFuZCBmZigpID09IHRydWUgdGhlbgoJCQlSU1IuRG9DbGllbnRNYWdpYzpGaXJlU2VydmVyKCJDcnlzdGFsIiwgIkNyeXN0YWwgQXJtYW1lbnQiKQoJCQlSU1IuRG9NYWdpYzpJbnZva2VTZXJ2ZXIoIkNyeXN0YWwiLCAiQ3J5c3RhbCBBcm1hbWVudCIsIHtMYXN0UG9zaXRpb24gPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiArIFZlY3RvcjMubmV3KDAsIDE1LCAwKX0pCgkJZW5kCgoJCWlmIEdyYXZpdGFsR2xvYmVFbmFibGVkIGFuZCBmZigpID09IHRydWUgdGhlbgoJCQlSU1IuRG9DbGllbnRNYWdpYzpGaXJlU2VydmVyKCJHcmF2aXR5IiwgIkdyYXZpdGFsIEdsb2JlIikKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJHcmF2aXR5IiwgIkdyYXZpdGFsIEdsb2JlIiwge2xhc3RQb3MgPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiArIFZlY3RvcjMubmV3KDAsIDE1LCAwKX0pCgkJZW5kCgoJCWlmIEdyYXZpdGF0aW9uYWxGaWVsZEVuYWJsZWQgYW5kIGZmKCkgPT0gdHJ1ZSB0aGVuCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIkdyYXZpdHkiLCAiR3Jhdml0YXRpb25hbCBGaWVsZCIpCgkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiR3Jhdml0eSIsICJHcmF2aXRhdGlvbmFsIEZpZWxkIiwgdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lIC0gVmVjdG9yMy5uZXcoMCwgMTUsIDApKQoJCWVuZAoKCQlpZiBBbWF1cm90aWNMYW1iZW50RW5hYmxlZCBhbmQgZmYoKSA9PSB0cnVlIHRoZW4KCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiTGlnaHQiLCAiQW1hdXJvdGljIExhbWJlbnQiKQoJCQlSU1IuRG9NYWdpYzpJbnZva2VTZXJ2ZXIoIkxpZ2h0IiwgIkFtYXVyb3RpYyBMYW1iZW50Iiwge2xhc3RQb3MgPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbn0pCgkJZW5kCgoJCWlmIEFibGF6ZUp1ZGdlbWVudEhhY2tFbmFibGVkIGFuZCBmZigpID09IHRydWUgdGhlbgoJCQlSU1IuRG9DbGllbnRNYWdpYzpGaXJlU2VydmVyKCJMaWdodCIsICJBYmxhemUgSnVkZ2VtZW50IikKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJMaWdodCIsICJBYmxhemUgSnVkZ2VtZW50Iiwge09yaWdpbiA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gVmVjdG9yMy5uZXcoMCwgMjUsIDApLCBvcmJQb3MgPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIFZlY3RvcjMubmV3KDAsIDEwLCAwKX0pCgkJZW5kCgoJCWlmIFZvaWRPcGVuaW5nSGFja0VuYWJsZWQgYW5kIGZmKCkgPT0gdHJ1ZSB0aGVuCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIlZvaWQiLCAiVm9pZCBPcGVuaW5nIikKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJWb2lkIiwgIlZvaWQgT3BlbmluZyIsIHtwb3MgPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIFZlY3RvcjMubmV3KDAsIDE1MCwgMCl9KQoJCWVuZAoKCQlpZiBTa2VsZXRvbkdyYWJFbmFibGVkIHRoZW4KCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiTmlnaHRtYXJlIiwgIlNrZWxldG9uIEdyYWIiKQoJCQlSU1IuRG9NYWdpYzpJbnZva2VTZXJ2ZXIoIk5pZ2h0bWFyZSIsICJTa2VsZXRvbiBHcmFiIiwgdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQoJCWVuZAoKCQlpZiBHZW5lc2lzUmF5RW5hYmxlZCB0aGVuCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIlRpbWUiLCAiR2VuZXNpcyBSYXkiLCBwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pCgkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiVGltZSIsICJHZW5lc2lzIFJheSIsIHtsdiA9IFZlY3RvcjMubmV3KDAsIDAsIDApLCBjaGFyZ2UgPSBHUkNoYXJnZX0pCgkJZW5kCgoJCWlmIFRoZVdvcmxkRW5hYmxlZCBhbmQgZmYoKSA9PSB0cnVlIHRoZW4KCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiVGltZSIsICJUaGUgV29ybGQiLCB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJUaW1lIiwgIlRoZSBXb3JsZCIsIHtyaGl0ID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQsIG5vcm0gPSBWZWN0b3IzLm5ldygwLCAwLCAwKSwgcnBvcyA9IHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9ufSkKCQllbmQKCgkJaWYgUG9sYXJpc0VuYWJsZWQgYW5kIGZmKCkgPT0gdHJ1ZSB0aGVuCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIkF1cm9yYSIsICJQb2xhcmlzIikKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJBdXJvcmEiLCAiUG9sYXJpcyIsIHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKCQllbmQKCgkJaWYgQ29udHJvbGxlZEVjaG9lc0VuYWJsZWQgYW5kIEVjaG9lc1BoYXNlIH49IG5pbCB0aGVuCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIlNvdW5kIiwgIkVjaG9lcyIpCgkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiU291bmQiLCAiRWNob2VzIiwge0VjaG9lc1BoYXNlLCBtb3VzZS5IaXQucH0pCgkJZW5kCgoJCWlmIFNoYXR0ZXJpbmdFcnVwdGlvbkVuYWJsZWQgYW5kIGZmKCkgPT0gdHJ1ZSB0aGVuCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIkV4cGxvc2lvbiIsICJTaGF0dGVyaW5nIEVydXB0aW9uIikKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJFeHBsb3Npb24iLCAiU2hhdHRlcmluZyBFcnVwdGlvbiIsIHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKCQllbmQKCgkJaWYgSWxsdXNpdmVBdGFrZUVuYWJsZWQgYW5kIGZmKCkgPT0gdHJ1ZSB0aGVuCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIklsbHVzaW9uIiwgIklsbHVzaXZlIEF0YWtlIikKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJJbGx1c2lvbiIsICJJbGx1c2l2ZSBBdGFrZSIsIHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKCQllbmQKCgkJaWYgRXRoZXJlYWxBY3VtZW5FbmFibGVkIGFuZCBmZigpID09IHRydWUgdGhlbgoJCQlSU1IuRG9DbGllbnRNYWdpYzpGaXJlU2VydmVyKCJJbGx1c2lvbiIsICJFdGhlcmVhbCBBY3VtZW4iKQoJCQlSU1IuRG9NYWdpYzpJbnZva2VTZXJ2ZXIoIklsbHVzaW9uIiwgIkV0aGVyZWFsIEFjdW1lbiIsIHRhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKCQllbmQKCgkJaWYgRm9ybWlkYWJsZVJvYXJFbmFibGVkIGFuZCBmZigpID09IHRydWUgdGhlbgoJCQlSU1IuRG9DbGllbnRNYWdpYzpGaXJlU2VydmVyKCJEcmFnb24iLCAiRm9ybWlkYWJsZSBSb2FyIikKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJEcmFnb24iLCAiRm9ybWlkYWJsZSBSb2FyIiwge3RhcmdldENoci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSwgMTc1fSkKCQllbmQKCgkJaWYgVG94aWNCYXNpbGlza0VuYWJsZWQgYW5kIGZmKCkgPT0gdHJ1ZSB0aGVuCgkJCXBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5BbmNob3JlZCA9IHRydWUKCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiQWNpZCIsICJUb3hpYyBCYXNpbGlzayIpCgkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiQWNpZCIsICJUb3hpYyBCYXNpbGlzayIsIHtEaXJlY3Rpb24gPSB0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUsIEZsb29yID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lfSkKCQkJd2FpdCgxNy41KQoJCQlpZiBGcmVlemVFbmFibGVkID09IGZhbHNlIHRoZW4KCQkJCXBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5BbmNob3JlZCA9IGZhbHNlCgkJCWVuZAoJCWVuZAoKCQlpZiBBcmNhbmVHdWFyZGlhbkVuYWJsZWQgYW5kIGZmKCkgPT0gdHJ1ZSB0aGVuCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIkFuZ2VsIiwgIkFyY2FuZSBHdWFyZGlhbiIpCgkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiQW5nZWwiLCAiQXJjYW5lIEd1YXJkaWFuIiwge1Bvc2l0aW9uID0gdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gKyBWZWN0b3IzLm5ldygwLCA1MCwgMCl9KQoJCWVuZAoKCQlpZiBTcGxpdHRpbmdTbGltZUVuYWJsZWQgYW5kIGZmKCkgPT0gdHJ1ZSB0aGVuCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIlNsaW1lIiwgIlNwbGl0dGluZyBTbGltZSIpCgkJCVJTUi5Eb01hZ2ljOkludm9rZVNlcnZlcigiU2xpbWUiLCAiU3BsaXR0aW5nIFNsaW1lIiwgdGFyZ2V0Q2hyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lIC0gVmVjdG9yMy5uZXcoMCwgMjAsIDApKQoJCWVuZAoKCQlpZiBWaXJ0dWFsWm9uZUVuYWJsZWQgYW5kIGZmKCkgPT0gdHJ1ZSB0aGVuCgkJCVJTUi5Eb0NsaWVudE1hZ2ljOkZpcmVTZXJ2ZXIoIlRlY2hub2xvZ3kiLCAiVmlydHVhbCBab25lIikKCQkJUlNSLkRvTWFnaWM6SW52b2tlU2VydmVyKCJUZWNobm9sb2d5IiwgIlZpcnR1YWwgWm9uZSIsIHt0YXJnZXRDaHIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiwgVmVjdG9yMy5uZXcoMCwgMCwgMCl9KQoJCWVuZAoJZW5kCgoJLS0gVUlTCgoJbG9jYWwgVUlTID0gZ2FtZTpHZXRTZXJ2aWNlKCJVc2VySW5wdXRTZXJ2aWNlIikKCWxvY2FsIHRlcm1pbmF0ZXVpcyA9IGZhbHNlCgoJVUlTLklucHV0QmVnYW46Y29ubmVjdChmdW5jdGlvbihpbnB1dCwgZ3ApCgkJaWYgbm90IHRlcm1pbmF0ZXVpcyB0aGVuCgkJCWlmIG5vdCBncCB0aGVuCgkJCQlsb2NhbCB0YXJnZXRDaHIgPSBnYW1lLlBsYXllcnNbdGFyZ2V0XS5DaGFyYWN0ZXIKCgkJCQlpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5CYWNrU2xhc2ggdGhlbgoJCQkJCWNvbW1hbmRCb3g6Q2FwdHVyZUZvY3VzKCkKCQkJCQl3YWl0KCkKCQkJCQlpZiBzdHJpbmcuc3ViKGNvbW1hbmRCb3guVGV4dCwgc3RyaW5nLmxlbihjb21tYW5kQm94LlRleHQpLCBzdHJpbmcubGVuKGNvbW1hbmRCb3guVGV4dCkpID09ICJcXCIgdGhlbgoJCQkJCQljb21tYW5kQm94LlRleHQgPSBzdHJpbmcuc3ViKGNvbW1hbmRCb3guVGV4dCwgMSwgc3RyaW5nLmxlbihjb21tYW5kQm94LlRleHQpIC0gMSkKCQkJCQllbmQKCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5DIHRoZW4KCQkJCQlleHBsb2l0KCkKCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5VIHRoZW4KCQkJCQlUUFRvVGFyZ2V0KCkKCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5LIHRoZW4KCQkJCQlBbnRpQmxpbmRGdW5jKCkKCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5UIHRoZW4KCQkJCQliZWdpblNwZWVkKCkKCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5YIHRoZW4KCQkJCQlpZiBTcGVjdHJhbEVtYm9kaW1lbnRFbmFibGVkIHRoZW4KCQkJCQkJUlNSLkRvQ2xpZW50TWFnaWM6RmlyZVNlcnZlcigiU3Bpcml0IiwgIlNwZWN0cmFsIEVtYm9kaW1lbnQiKQoJCQkJCQlSU1IuRG9NYWdpYzpJbnZva2VTZXJ2ZXIoIlNwaXJpdCIsICJTcGVjdHJhbCBFbWJvZGltZW50IikKCQkJCQllbmQKCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5QIHRoZW4KCQkJCQlpZiBTYW5zVGVsZXBvcnRFbmFibGVkIHRoZW4KCQkJCQkJaWYgZ2FtZS5QbGFjZUlkID09IDU2NjM5OTI0NCBvciBnYW1lLlBsYWNlSWQgPT0gMjU2OTYyNTgwOSB0aGVuCgkJCQkJCQlsb2NhbCBTYW5zUG9zID0gQ0ZyYW1lLm5ldygtMTY4NS45MTA1MiwgMjMwLjAzNTEyNiwgLTE4MS43OTgyNjQpCgkJCQkJCQlsb2NhbCBTYW5zQW5nbGVzID0gQ0ZyYW1lLkFuZ2xlcygwLCBtYXRoLnJhZCgyMCksIDApCgoJCQkJCQkJcGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IFNhbnNQb3MgKiBTYW5zQW5nbGVzCgkJCQkJCQlwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkOkNoYW5nZVN0YXRlKEVudW0uSHVtYW5vaWRTdGF0ZVR5cGUuQ2xpbWJpbmcpCgkJCQkJCQl3YWl0KCkKCQkJCQkJCXBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5BbmNob3JlZCA9IHRydWUKCQkJCQkJCXdhaXQoMSkKCQkJCQkJCWlmIG5vdCBGcmVlemVFbmFibGVkIHRoZW4KCQkJCQkJCQlwbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQW5jaG9yZWQgPSBmYWxzZQoJCQkJCQkJZW5kCgkJCQkJCWVuZAoJCQkJCWVuZAoJCQkJZWxzZWlmIGlucHV0LktleUNvZGUgPT0gRW51bS5LZXlDb2RlLlogdGhlbgoJCQkJCWJlZ2luTnVsbGlmeUZvcmNlcygpCgkJCQllbHNlaWYgaW5wdXQuS2V5Q29kZSA9PSBFbnVtLktleUNvZGUuRyB0aGVuCgkJCQkJQW50aUdyYXZpdHlGdW5jKCkKCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5KIHRoZW4KCQkJCQlpZiBDbGlja1RQRW5hYmxlZCB0aGVuCgkJCQkJCWNsaWNrdHAobW91c2UuSGl0KQoJCQkJCWVuZAoJCQkJZWxzZWlmIGlucHV0LktleUNvZGUgPT0gRW51bS5LZXlDb2RlLkYgdGhlbgoJCQkJCUZyZWV6ZUZ1bmMoKQoJCQkJZWxzZWlmIGlucHV0LktleUNvZGUgPT0gRW51bS5LZXlDb2RlLkJhY2txdW90ZSB0aGVuCgkJCQkJaWYgRmxhc2hFbmFibGVkIHRoZW4KCQkJCQkJbG9uZ2ZsYXNoKCkKCQkJCQllbmQKCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5WIHRoZW4KCQkJCQl2aWV3KCkKCQkJCWVsc2VpZiBpbnB1dC5LZXlDb2RlID09IEVudW0uS2V5Q29kZS5CIHRoZW4KCQkJCQl0b2dnbGVFU1AoKQoJCQkJZWxzZWlmIGlucHV0LktleUNvZGUgPT0gRW51bS5LZXlDb2RlLk0gdGhlbgoJCQkJCXRvZ2dsZUVTUEdvbGQoKQoJCQkJZWxzZWlmIGlucHV0LktleUNvZGUgPT0gRW51bS5LZXlDb2RlLkxlZnRCcmFja2V0IHRoZW4KCQkJCQlpZiBub3QgY2xvc2VkZm9yZXZlciB0aGVuCgkJCQkJCWlmIG5vdCBidXR0b25zZGVib3VuY2UgdGhlbgoJCQkJCQkJYnV0dG9uc2RlYm91bmNlID0gdHJ1ZQoJCQkJCQkJaWYgYnV0dG9uc29wZW5lZCA9PSBmYWxzZSB0aGVuCgkJCQkJCQkJYnV0dG9uc29wZW5lZCA9IHRydWUKCQkJCQkJCQlidXR0b25zbWFpbjpUd2VlblBvc2l0aW9uKAoJCQkJCQkJCQlVRGltMi5uZXcoMSwgMCwgMC42NSwgMCksCgkJCQkJCQkJCSJPdXQiLAoJCQkJCQkJCQkiU2luZSIsCgkJCQkJCQkJCS41LAoJCQkJCQkJCQl0cnVlCgkJCQkJCQkJKQoJCQkJCQkJZWxzZQoJCQkJCQkJCWJ1dHRvbnNvcGVuZWQgPSBmYWxzZQoJCQkJCQkJCWJ1dHRvbnNtYWluOlR3ZWVuUG9zaXRpb24oCgkJCQkJCQkJCVVEaW0yLm5ldygxLjI1LCAwLCAwLjY1LCAwKSwKCQkJCQkJCQkJIkluIiwKCQkJCQkJCQkJIlNpbmUiLAoJCQkJCQkJCQkuNSwKCQkJCQkJCQkJdHJ1ZQoJCQkJCQkJCSkKCQkJCQkJCWVuZAoJCQkJCQkJd2FpdCgxKQoJCQkJCQkJYnV0dG9uc2RlYm91bmNlID0gZmFsc2UKCQkJCQkJZW5kCgkJCQkJZW5kCgkJCQllbHNlaWYgaW5wdXQuS2V5Q29kZSA9PSBFbnVtLktleUNvZGUuUmlnaHRCcmFja2V0IHRoZW4KCQkJCQljb21tYW5kZGVib3VuY2UgPSB0cnVlCgkJCQkJaWYgY29tbWFuZHNvcGVuZWQgPT0gZmFsc2UgdGhlbgoJCQkJCQljb21tYW5kc29wZW5lZCA9IHRydWUKCQkJCQkJY29tbWFuZHNtYWluOlR3ZWVuUG9zaXRpb24oCgkJCQkJCQlVRGltMi5uZXcoMSwgMCwgMC40NSwgMCksCgkJCQkJCQkiT3V0IiwKCQkJCQkJCSJTaW5lIiwKCQkJCQkJCS41LAoJCQkJCQkJdHJ1ZQoJCQkJCQkpCgkJCQkJZWxzZQoJCQkJCQljb21tYW5kc29wZW5lZCA9IGZhbHNlCgkJCQkJCWNvbW1hbmRzbWFpbjpUd2VlblBvc2l0aW9uKAoJCQkJCQkJVURpbTIubmV3KDEuMjUsIDAsIDAuNDUsIDApLAoJCQkJCQkJIkluIiwKCQkJCQkJCSJTaW5lIiwKCQkJCQkJCS41LAoJCQkJCQkJdHJ1ZQoJCQkJCQkpCgkJCQkJZW5kCgkJCQkJd2FpdCgxKQoJCQkJCWNvbW1hbmRkZWJvdW5jZSA9IGZhbHNlCgkJCQllbHNlaWYgVUlTOklzS2V5RG93bihFbnVtLktleUNvZGUuTGVmdCkgYW5kIFVJUzpJc0tleURvd24oRW51bS5LZXlDb2RlLlJpZ2h0KSB0aGVuCgkJCQkJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIlRoYW5rcyBmb3IgdXNpbmcgRUJHdWkhIgoJCQkJCXdhaXQoMikKCQkJCQlpZiBidXR0b25zb3BlbmVkID09IHRydWUgdGhlbgoJCQkJCQl0ZXJtaW5hdGV1aXMgPSB0cnVlCgkJCQkJCXRlcm1FQkd1aSgpCgkJCQkJZW5kCgkJCQllbmQKCQkJZW5kCgkJZW5kCgllbmQpCgoJLS0gU2NyaXB0cyBhbmQgRnVuY3Rpb25zIEVORAoKCS0tIEVudHJhbmNlIEFuaW1hdGlvbgoKCXdhaXQoMC41KQoKCWJ1dHRvbnNtYWluOlR3ZWVuUG9zaXRpb24oCgkJVURpbTIubmV3KDEsIDAsIDAuNjUsIDApLAoJCSJPdXQiLAoJCSJTaW5lIiwKCQkuNSwKCQl0cnVlCgkpCgoJY29tbWFuZHNtYWluOlR3ZWVuUG9zaXRpb24oCgkJVURpbTIubmV3KDEsIDAsIDAuNDUsIDApLAoJCSJPdXQiLAoJCSJTaW5lIiwKCQkuNSwKCQl0cnVlCgkpCgoJLS0gSW5mbwoKCXByaW50KFtbCgoJXV0pCgl3YXJuKCJHVUkgc3VjY2Vzc2Z1bGx5IGxvYWRlZCEiKQoJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIldlbGNvbWUgdG8gRUJHdWkhIgoJd2FpdCgyKQoJY29tbWFuZEJveE91dHB1dC5UZXh0ID0gIkN1cnJlbnQgVGFyZ2V0IHwgKE5vbmUpIgplbmQ="